var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","interior_mut_metadata","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","unpivot","unpivot2","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrefixFields","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SQLInterface","SQLSyntax","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","SubPlan","SuffixFields","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UnpivotArgs","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_join_suffix_name","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","buffer","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_schema","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_page_size","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","get_names_and_dtypes","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_streaming","new_streaming","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","replace_strict","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","to_writer","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_project","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unpivot","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[828,"polars::chunked_array::arithmetic"],[856,"polars::chunked_array::builder"],[1117,"polars::chunked_array::builder::list"],[1134,"polars::chunked_array::cast"],[1164,"polars::chunked_array::collect"],[1178,"polars::chunked_array::float"],[1180,"polars::chunked_array::from_iterator_par"],[1184,"polars::chunked_array::iterator"],[1254,"polars::chunked_array::iterator::par"],[1256,"polars::chunked_array::metadata"],[1544,"polars::chunked_array::object"],[1621,"polars::chunked_array::object::builder"],[1644,"polars::chunked_array::object::registry"],[1672,"polars::chunked_array::ops"],[1879,"polars::chunked_array::ops::arity"],[1914,"polars::chunked_array::ops::float_sorted_arg_max"],[1916,"polars::chunked_array::ops::gather"],[1919,"polars::chunked_array::ops::search_sorted"],[1950,"polars::chunked_array::ops::sort"],[1957,"polars::chunked_array::ops::sort::arg_bottom_k"],[1958,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1965,"polars::chunked_array::ops::sort::options"],[1978,"polars::chunked_array::temporal"],[1986,"polars::chunked_array::temporal::conversion"],[1989,"polars::datatypes"],[3428,"polars::datatypes::categorical"],[3445,"polars::datatypes::categorical::revmap"],[3451,"polars::datatypes::categorical::string_cache"],[3470,"polars::docs"],[3472,"polars::error"],[3560,"polars::error::PolarsError"],[3564,"polars::error::constants"],[3567,"polars::frame"],[3831,"polars::frame::explode"],[3861,"polars::frame::group_by"],[4101,"polars::frame::group_by::GroupByMethod"],[4102,"polars::frame::group_by::GroupsProxy"],[4104,"polars::frame::group_by::aggregations"],[4117,"polars::frame::group_by::expr"],[4120,"polars::frame::row"],[4230,"polars::functions"],[4232,"polars::prelude"],[9438,"polars::prelude::AggExpr"],[9445,"polars::prelude::BooleanFunction"],[9448,"polars::prelude::DslPlan"],[9502,"polars::prelude::Expr"],[9537,"polars::prelude::FunctionExpr"],[9559,"polars::prelude::GroupByMethod"],[9560,"polars::prelude::GroupsProxy"],[9562,"polars::prelude::LiteralValue"],[9565,"polars::prelude::PolarsError"],[9569,"polars::prelude::StringFunction"],[9583,"polars::prelude::TemporalFunction"],[9585,"polars::prelude::aggregations"],[9598,"polars::prelude::arity"],[9633,"polars::prelude::array"],[9652,"polars::prelude::binary"],[9668,"polars::prelude::buffer"],[9742,"polars::prelude::buffer::Buffer"],[9745,"polars::prelude::cat"],[9746,"polars::prelude::chunkedarray"],[9813,"polars::prelude::chunkedarray::string"],[9853,"polars::prelude::chunkedarray::string::infer"],[9884,"polars::prelude::cloud"],[9932,"polars::prelude::cloud::options"],[9940,"polars::prelude::datatypes"],[10210,"polars::prelude::datatypes::categorical"],[10227,"polars::prelude::datatypes::categorical::revmap"],[10233,"polars::prelude::datatypes::categorical::string_cache"],[10237,"polars::prelude::datetime"],[10240,"polars::prelude::default_arrays"],[10246,"polars::prelude::dt"],[10298,"polars::prelude::expr"],[10301,"polars::prelude::fixed_size_list"],[10321,"polars::prelude::float_sorted_arg_max"],[10323,"polars::prelude::function_expr"],[10496,"polars::prelude::function_expr::BooleanFunction"],[10499,"polars::prelude::function_expr::FunctionExpr"],[10521,"polars::prelude::function_expr::StringFunction"],[10535,"polars::prelude::function_expr::TemporalFunction"],[10537,"polars::prelude::function_expr::cat"],[10539,"polars::prelude::function_expr::pow"],[10543,"polars::prelude::function_expr::rolling"],[10573,"polars::prelude::function_expr::rolling_by"],[10603,"polars::prelude::gather"],[10606,"polars::prelude::interpolate"],[10610,"polars::prelude::interpolate_by"],[10611,"polars::prelude::mode"],[10612,"polars::prelude::nan_propagating_aggregate"],[10616,"polars::prelude::null"],[10647,"polars::prelude::schema_inference"],[10674,"polars::prelude::search_sorted"],[10680,"polars::prelude::series"],[10702,"polars::prelude::slice"],[10705,"polars::prelude::sort"],[10712,"polars::prelude::sort::arg_bottom_k"],[10713,"polars::prelude::sort::arg_sort_multiple"],[10720,"polars::prelude::sort::options"],[10733,"polars::prelude::strings"],[10787,"polars::prelude::udf"],[10793,"polars::prelude::utf8"],[10797,"polars::series"],[11231,"polars::series::amortized_iter"],[11255,"polars::series::arithmetic"],[11276,"polars::series::arithmetic::checked"],[11282,"polars::series::ops"],[11310,"dyn_clone::sealed"],[11311,"polars_core::datatypes"],[11312,"polars_core::chunked_array"],[11313,"num_traits"],[11314,"num_traits::cast"],[11315,"polars_core::series"],[11316,"polars_error"],[11317,"core::result"],[11318,"polars_core::series::arithmetic::borrowed"],[11319,"polars_core::frame::group_by::proxy"],[11320,"polars_core::chunked_array::object"],[11321,"core::option"],[11322,"polars_arrow::array"],[11323,"alloc::boxed"],[11324,"core::iter::traits::iterator"],[11325,"polars_core::chunked_array::list::iterator"],[11326,"alloc::borrow"],[11327,"core::ops::function"],[11328,"core::marker"],[11329,"polars_core::series::amortized_iter"],[11330,"polars_core::datatypes::dtype"],[11331,"alloc::string"],[11332,"polars_core::chunked_array::ops::sort::options"],[11333,"polars_core::chunked_array::cast"],[11334,"polars_core::series::arithmetic::borrowed::checked"],[11335,"core::slice::iter"],[11336,"core::iter::adapters::map"],[11337,"alloc::vec"],[11338,"polars_core::chunked_array::metadata"],[11339,"core::iter::traits::double_ended"],[11340,"polars_arrow::offset"],[11341,"core::fmt"],[11342,"core::iter::traits::collect"],[11343,"polars_utils::iter::fallible"],[11344,"core::convert"],[11345,"polars_core::chunked_array::from_iterator"],[11346,"core::borrow"],[11347,"polars_arrow::bitmap::immutable"],[11348,"rayon::iter"],[11349,"polars_arrow::pushable"],[11350,"polars_arrow::trusted_len"],[11351,"polars_core::datatypes::any_value"],[11352,"std::sync::rwlock"],[11353,"polars_core::chunked_array::logical"],[11354,"polars_core::datatypes::time_unit"],[11355,"core::iter::traits::exact_size"],[11356,"polars_core::series::series_trait"],[11357,"polars_core::chunked_array::iterator"],[11358,"polars_core::chunked_array::metadata::guard"],[11359,"polars_core::chunked_array::metadata::interior_mutable"],[11360,"alloc::sync"],[11361,"polars_core::chunked_array::metadata::md_trait"],[11362,"core::ops::range"],[11363,"polars_core::datatypes::field"],[11364,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11365,"polars_core::chunked_array::ops::rolling_window"],[11366,"polars_ops::chunked_array::scatter"],[11367,"polars_utils::index"],[11368,"ahash::random_state"],[11369,"polars_utils::hashing"],[11370,"ndarray"],[11371,"ndarray::dimension::dim"],[11372,"ndarray::data_repr"],[11373,"either"],[11374,"core::any"],[11375,"polars_core::chunked_array::arithmetic::numeric"],[11376,"polars_core::chunked_array::builder::list::anonymous"],[11377,"polars_core::chunked_array::builder::list::boolean"],[11378,"polars_core::chunked_array::builder::list::primitive"],[11379,"polars_core::chunked_array::builder::list"],[11380,"polars_core::chunked_array::builder"],[11381,"polars_core::chunked_array::builder::list::binary"],[11382,"polars_core::chunked_array::builder::list::null"],[11383,"polars_core::chunked_array::builder::string"],[11384,"polars_arrow::array::binview"],[11385,"polars_core::chunked_array::builder::boolean"],[11386,"polars_core::chunked_array::builder::null"],[11387,"polars_core::chunked_array::builder::primitive"],[11388,"core::clone"],[11389,"polars_core::series::implementations::null"],[11390,"core::hash"],[11391,"polars_core::chunked_array::collect"],[11392,"polars_core::chunked_array::float"],[11393,"polars_core::chunked_array::from_iterator_par"],[11394,"polars_arrow::array::boolean"],[11395,"polars_arrow::array::fixed_size_list"],[11396,"polars_core::chunked_array::metadata::env"],[11397,"polars_core::chunked_array::metadata::collect"],[11398,"bitflags::iter"],[11399,"std::fs"],[11400,"std::sync::mutex"],[11401,"polars_arrow::datatypes"],[11402,"polars_arrow::bitmap::utils::iterator"],[11403,"polars_arrow::bitmap::utils::zip_validity"],[11404,"polars_core::chunked_array::object::builder"],[11405,"polars_core::chunked_array::object::registry"],[11406,"polars_core::chunked_array::ops"],[11407,"polars_arrow::legacy::array::slice"],[11408,"polars_core::chunked_array::ops::arity"],[11409,"polars_arrow::array::static_array"],[11410,"core::error"],[11411,"polars_arrow::array::primitive"],[11412,"polars_core::chunked_array::ops::search_sorted"],[11413,"polars_core::utils"],[11414,"polars_row::row"],[11415,"chrono::naive::datetime"],[11416,"chrono_tz::timezones"],[11417,"chrono::naive::time"],[11418,"polars_core::chunked_array::logical::struct_"],[11419,"polars_core::chunked_array::logical::categorical"],[11420,"polars_core::chunked_array::logical::categorical::builder"],[11421,"polars_arrow::array::static_array_collect"],[11422,"bytemuck::zeroable"],[11423,"polars_core::chunked_array::logical::categorical::revmap"],[11424,"polars_core::chunked_array::logical::categorical::merge"],[11425,"polars_arrow::datatypes::physical_type"],[11426,"polars_arrow::types"],[11427,"chrono::time_delta"],[11428,"chrono::naive::date"],[11429,"smartstring::config"],[11430,"smartstring"],[11431,"polars_core::datatypes::into_scalar"],[11432,"core::cmp"],[11433,"polars_core::frame"],[11434,"polars_core::chunked_array::logical::categorical::string_cache"],[11435,"polars_error::warning"],[11436,"planus::errors"],[11437,"regex::error"],[11438,"polars_parquet::parquet::error"],[11439,"alloc::collections"],[11440,"simdutf8::basic"],[11441,"std::io::error"],[11442,"polars_core::schema"],[11443,"polars_core::series::from"],[11444,"hashbrown::set"],[11445,"polars_arrow::datatypes::schema"],[11446,"polars_core::frame::row"],[11447,"polars_core::frame::group_by"],[11448,"polars_time::group_by::dynamic"],[11449,"polars_lazy::frame"],[11450,"polars_core::chunked_array::ndarray"],[11451,"polars_arrow::array::struct_"],[11452,"polars_arrow::record_batch"],[11453,"polars_core::frame::explode"],[11454,"polars_time::windows::duration"],[11455,"polars_utils::idx_vec"],[11456,"rayon::iter::plumbing"],[11457,"polars_plan::plans::aexpr"],[11458,"polars_core::frame::group_by::into_groups"],[11459,"core::iter::adapters::copied"],[11460,"core::iter::adapters::zip"],[11461,"polars_utils::float"],[11462,"polars_arrow::types::native"],[11463,"polars_core::frame::group_by::aggregations::agg_list"],[11464,"polars_core::frame::group_by::aggregations"],[11465,"polars_core::frame::group_by::expr"],[11466,"polars_core::frame::row::av_buffer"],[11467,"polars_utils::arena"],[11468,"polars_plan::plans::ir"],[11469,"polars_ops::frame::join::hash_join"],[11470,"polars_ops::frame::join::args"],[11471,"polars_ops::chunked_array::gather::chunked"],[11472,"polars_ops::frame"],[11473,"polars_io::csv::read::reader"],[11474,"polars_io::predicates"],[11475,"polars_io::mmap"],[11476,"polars_plan::dsl::expr"],[11477,"core::alloc"],[11478,"polars_plan::plans::anonymous_scan"],[11479,"polars_lazy::scan::anonymous_scan"],[11480,"polars_plan::dsl::expr_dyn_fn"],[11481,"polars_plan::plans::visitor"],[11482,"polars_plan::dsl::function_expr"],[11483,"polars_ops::series::ops::arg_min_max"],[11484,"polars_plan::dsl::array"],[11485,"polars_plan::dsl::list"],[11486,"polars_plan::dsl::function_expr::schema"],[11487,"polars_io::ipc::ipc_stream"],[11488,"std::io"],[11489,"polars_ops::chunked_array::binary"],[11490,"polars_time::chunkedarray::string"],[11491,"std::os::fd::owned"],[11492,"polars_ops::chunked_array::list"],[11493,"std::os::fd::raw"],[11494,"polars_ops::series::ops"],[11495,"polars_ops::chunked_array::strings"],[11496,"core::mem::maybe_uninit"],[11497,"polars_ops::chunked_array::strings::namespace"],[11498,"polars_io::csv::read::read_impl::batched"],[11499,"polars_io::csv::write::writer"],[11500,"polars_io::ipc::write"],[11501,"polars_io::parquet::read::reader"],[11502,"polars_io::parquet::read::read_impl"],[11503,"polars_io::parquet::write::writer"],[11504,"polars_io::parquet::write::batched_writer"],[11505,"polars_plan::dsl::binary"],[11506,"polars_plan::dsl::udf"],[11507,"polars_lazy::frame::exitable"],[11508,"hashbrown::map"],[11509,"polars_plan::dsl::cat"],[11510,"polars_ops::series::ops::round"],[11511,"polars_time::series"],[11512,"polars_lazy::scan::csv"],[11513,"polars_lazy::scan::ipc"],[11514,"polars_lazy::scan::ndjson"],[11515,"polars_lazy::scan::parquet"],[11516,"polars_time::chunkedarray::rolling_window"],[11517,"polars_time::windows::bounds"],[11518,"polars_time::windows::group_by"],[11519,"polars_time::windows::window"],[11520,"polars_io::csv::read::options"],[11521,"polars_io::csv::write::options"],[11522,"polars_io::ipc::ipc_file"],[11523,"polars_io::json"],[11524,"polars_ops::frame::join::asof"],[11525,"polars_io::parquet::read::options"],[11526,"polars_ops::series::ops::interpolation::interpolate"],[11527,"polars_ops::series::ops::is_between"],[11528,"polars_ops::series::ops::rank"],[11529,"polars_io::parquet::write::options"],[11530,"polars_plan::plans"],[11531,"polars_plan::dsl::arity"],[11532,"polars_plan::dsl::function_expr::boolean"],[11533,"polars_plan::dsl::function_expr::cat"],[11534,"polars_plan::dsl::function_expr::datetime"],[11535,"polars_plan::dsl::function_expr::pow"],[11536,"polars_plan::dsl::function_expr::strings"],[11537,"polars_plan::dsl::function_expr::struct_"],[11538,"polars_plan::dsl::functions::temporal"],[11539,"polars_plan::dsl::options"],[11540,"polars_plan::frame::opt_state"],[11541,"polars_plan::plans::lit"],[11542,"polars_plan::plans::options"],[11543,"polars_parquet::arrow::write"],[11544,"polars_parquet::parquet::metadata::file_metadata"],[11545,"polars_arrow::legacy::kernels::rolling"],[11546,"polars_arrow::legacy::kernels::time"],[11547,"polars_lazy::scan::file_list_reader"],[11548,"polars_io::cloud::options"],[11549,"polars_parquet::parquet::metadata::column_order"],[11550,"polars_ops::chunked_array::binary::namespace"],[11551,"polars_io::ndjson::core"],[11552,"std::path"],[11553,"polars_io::shared"],[11554,"polars_ops::frame::join::cross_join"],[11555,"polars_lazy::dsl::eval"],[11556,"polars_time::chunkedarray::date"],[11557,"polars_time::chunkedarray::datetime"],[11558,"polars_time::chunkedarray::duration"],[11559,"core::ffi::c_str"],[11560,"core::default"],[11561,"polars_parquet::parquet::metadata::row_metadata"],[11562,"polars_core::series::ops"],[11563,"polars_plan::dsl::dt"],[11564,"polars_ops::series::ops::various"],[11565,"polars_arrow::scalar"],[11566,"polars_lazy::dsl::list"],[11567,"crossterm::command"],[11568,"polars_plan::dsl::struct_"],[11569,"polars_plan::plans::apply"],[11570,"polars_plan::dsl::function_expr::range"],[11571,"polars_plan::dsl::function_expr::list"],[11572,"polars_plan::dsl::function_expr::binary"],[11573,"polars_plan::dsl::function_expr::array"],[11574,"std::ffi::os_str"],[11575,"alloc::ffi::c_str"],[11576,"polars_parquet::arrow::read::statistics"],[11577,"polars_arrow::array::growable::structure"],[11578,"polars_arrow::array::struct_::mutable"],[11579,"polars_arrow::legacy::array::default_arrays"],[11580,"polars_arrow::buffer::immutable"],[11581,"polars_arrow::array::list"],[11582,"polars_core::named_from"],[11583,"polars_ops::frame::join"],[11584,"polars_arrow::legacy::array"],[11585,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11586,"polars_time::chunkedarray::time"],[11587,"core::num::nonzero"],[11588,"parquet_format_safe::parquet_format"],[11589,"polars_arrow::array::struct_::iterator"],[11590,"polars_ops::frame::join::asof::groups"],[11591,"polars_ops::chunked_array::list::namespace"],[11592,"polars_plan::dsl::name"],[11593,"polars_io::options"],[11594,"polars_core::chunked_array::ops::aggregate"],[11595,"polars_core::chunked_array::ops::aggregate::quantile"],[11596,"polars_arrow::legacy::index"],[11597,"polars_ops::chunked_array::strings::split"],[11598,"core::pin"],[11599,"core::io::borrowed_buf"],[11600,"parquet_format_safe::thrift::varint::decode"],[11601,"polars_time::chunkedarray::rolling_window::dispatch"],[11602,"polars_time::round"],[11603,"polars_parquet::parquet::metadata::schema_descriptor"],[11604,"polars_core::chunked_array::ops::aggregate::var"],[11605,"polars_plan::dsl::string"],[11606,"polars_ops::series::ops::to_dummies"],[11607,"polars_time::truncate"],[11608,"polars_io::csv::read::schema_inference"],[11609,"polars_time::upsample"],[11610,"polars_core::hashing::vector_hasher"],[11611,"alloc::collections::btree::map"],[11612,"polars_ops::chunked_array::array::namespace"],[11613,"polars_ops::chunked_array::array"],[11614,"polars_io::csv::read::buffer"],[11615,"polars_time::chunkedarray::string::patterns"],[11616,"polars_time::chunkedarray::string::infer"],[11617,"polars_arrow::legacy::array::fixed_size_list"],[11618,"polars_plan::dsl::function_expr::rolling"],[11619,"polars_plan::dsl::function_expr::rolling_by"],[11620,"polars_arrow::legacy::array::null"],[11621,"polars_arrow::bitmap::mutable"],[11622,"polars_arrow::array::utf8"],[11623,"polars_arrow::array::binary"],[11624,"polars_core::series::iterator"],[11625,"alloc::rc"],[11626,"polars_core"],[11627,"polars_core::chunked_array::iterator::par"],[11628,"polars_core::chunked_array::object::extension"],[11629,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11630,"polars_core::chunked_array::ops::gather"],[11631,"polars_core::chunked_array::ops::sort"],[11632,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11633,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11634,"polars_core::chunked_array::temporal"],[11635,"polars_core::chunked_array::temporal::conversion"],[11636,"polars_core::chunked_array::temporal::time"],[11637,"polars_core::chunked_array::logical::date"],[11638,"polars_core::chunked_array::logical::datetime"],[11639,"polars_core::chunked_array::logical::decimal"],[11640,"polars_core::chunked_array::logical::duration"],[11641,"polars_core::datatypes::aliases"],[11642,"polars_utils::aliases"],[11643,"polars_core::chunked_array::logical::time"],[11644,"polars_error::constants"],[11645,"polars_core::functions"],[11646,"polars_io::utils"],[11647,"polars_io::parquet::metadata"],[11648,"polars_arrow::legacy::prelude"],[11649,"polars_ops::series::ops::rolling"],[11650,"polars_parquet::parquet::write"],[11651,"polars_ops::frame::join::general"],[11652,"polars_ops::series::ops::abs"],[11653,"polars_plan::dsl::functions::selectors"],[11654,"polars_plan::dsl::functions::horizontal"],[11655,"polars_plan::dsl::functions::arity"],[11656,"polars_plan::dsl"],[11657,"polars_plan::dsl::functions::range"],[11658,"polars_plan::dsl::functions::index"],[11659,"polars_ops::chunked_array"],[11660,"polars_plan::dsl::functions::coerce"],[11661,"polars_plan::dsl::functions::syntactic_sugar"],[11662,"polars_time::base_utc_offset"],[11663,"polars_io::csv::read"],[11664,"polars_time"],[11665,"polars_ops::series::ops::clip"],[11666,"polars_io"],[11667,"polars_ops::series::ops::horizontal"],[11668,"polars_lazy::dsl::functions"],[11669,"polars_plan::dsl::functions::concat"],[11670,"polars_ops::series::ops::index"],[11671,"polars_io::csv::read::parser"],[11672,"polars_ops::series::ops::cum_agg"],[11673,"polars_ops::series::ops::diff"],[11674,"polars_time::dst_offset"],[11675,"polars_ops::series::ops::floor_divide"],[11676,"polars_ops::chunked_array::strings::concat"],[11677,"polars_ops::chunked_array::datetime::replace_time_zone"],[11678,"polars_time::date_range"],[11679,"polars_ops::series::ops::interpolation"],[11680,"polars_ops::series::ops::interpolation::interpolate_by"],[11681,"polars_io::csv::read::utils"],[11682,"polars_ops::series::ops::is_first_distinct"],[11683,"polars_ops::series::ops::is_in"],[11684,"polars_ops::series::ops::is_last_distinct"],[11685,"polars_io::parquet::read::utils"],[11686,"polars_ops::series::ops::negate"],[11687,"polars_ops::series::ops::not"],[11688,"polars_ops::series::ops::int_range"],[11689,"polars_plan::dsl::functions::repeat"],[11690,"polars_ops::chunked_array::repeat_by"],[11691,"polars_ops::series::ops::replace"],[11692,"polars_ops::chunked_array::strings::strip"],[11693,"polars_time::chunkedarray"],[11694,"polars_io::cloud"],[11695,"polars_ops::chunked_array::mode"],[11696,"polars_ops::chunked_array::nan_propagating_aggregate"],[11697,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{l{c}}e}{}A`{AbAd}}{{{l{Af}}{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{Af}}}}{f{{l{Af}}}}}}{{{l{n}}{l{n}}}}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{l{Ah}}{l{Ah}}}}{{{f{{l{n}}}}{f{{Al{Aj}}}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}}{{{f{{l{Af}}}}{f{An}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Bh}}}}{f{Bj}}}B`}{{{f{{l{{Bl{c}}}}}}{f{Bj}}}B`Bn}{{{f{{l{c}}}}{f{Bj}}}B`A`}{{{f{{l{Ah}}}}{f{Bj}}}B`}{{{f{{l{j}}}}{f{Bj}}}B`}{{{f{{l{Af}}}}{f{Bj}}}B`}{{{f{{l{n}}}}{f{Bj}}}B`}{{{f{{l{Ah}}}}}d}{{{f{{l{Ah}}}}}{{C`{d}}}}{{{f{{l{Bh}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{An}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bh}}}}{f{An}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dh{{C`{{f{An}}}}}{{Dd{{C`{{Df{An}}}}}}}}Dj}}{{{f{{l{n}}}}c}{{l{n}}}{{Dh{{C`{{f{{Al{Aj}}}}}}}{{Dd{{C`{{Df{{Al{Aj}}}}}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Dh{C`}{{Dd{C`}}}}Dj}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dh{{C`{d}}}{{Dd{{C`{d}}}}}}Dj}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{Bh}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dj}Db}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dj}Db}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Dh{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Dh{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}A`{{Dh{}{{Dd{}}}}Dj}}{{{f{{l{n}}}}{f{Dh}}}{{l{n}}}}{{{f{{l{Ah}}}}{f{Dh}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{Dh}}}{{l{c}}}A`}{{{f{{l{Af}}}}{f{Dh}}}{{l{Af}}}}{{{f{{l{n}}}}{f{Dh}}}{{l{c}}}Db}{{{f{{l{Ah}}}}{f{Dh}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{Dh}}}{{l{e}}}A`Db}{{{f{{l{Af}}}}{f{Dh}}}{{l{c}}}Db}{{{f{Cl{l{c}}}}e}bA`{{Dh{}{{Dd{}}}}Dj}}{{{f{{l{n}}}}c}{{l{n}}}{{Dn{{f{{Al{Aj}}}}}{{Dd{{f{{Al{Aj}}}}}}}}}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dn{{f{An}}}{{Dd{{f{An}}}}}}}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dn{{f{An}}{f{ClEf}}}}}}{{{f{{l{j}}}}{f{Dh}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bh}}}}{f{Dh}}}{{Bd{{l{Bh}}Bb}}}}{{{f{{l{Ah}}}}e{f{Cl{Al{c}}}}}b{}{{Dh{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cl{Al{e}}}}}bBn{}{{Dh{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{Af}}}}e{f{Cl{Al{c}}}}}b{}{{Dh{{C`{{f{An}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{j}}}}e{f{Cl{Al{c}}}}}b{}{{Dh{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{n}}}}e{f{Cl{Al{c}}}}}b{}{{Dh{{C`{{f{{Al{Aj}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{c}}}}g{f{Cl{Al{e}}}}}bA`{}{{Dh{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dh{{f{An}}}{{Dd{{Df{An}}}}}}Dj}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dh{d}{{Dd{d}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{B`}{{Dd{B`}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Dh{}{{Dd{}}}}Dj}}{{{f{{l{n}}}}c}{{l{n}}}{{Dh{{f{{Al{Aj}}}}}{{Dd{{Df{{Al{Aj}}}}}}}}Dj}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{f{c}}}{{Dd{c}}}}Dj}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Eh}}}}Ej}{{l{El}}}}{{{f{{l{Ah}}}}Ej}{{l{El}}}}{{{f{{l{n}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}A`}{{{f{{l{Af}}}}Ej}{{l{El}}}}{{{f{{l{Af}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Eh}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ah}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}A`}{{{f{{l{n}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ah}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}A`}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{El}}Bb}}}Bn}{{{f{{l{Af}}}}}{{Bd{{l{El}}Bb}}}}`{{{f{{l{Bh}}}}}{{f{{l{Bh}}}}}}{{{f{{l{n}}}}}{{f{{l{n}}}}}}{{{f{{l{Af}}}}}{{l{n}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{Af}}}}}{{f{{l{Af}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{l{Ah}}{l{Ah}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}021210{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}A`{{Dh{}{{Dd{}}}}Dj}A`}{{{f{{l{Bh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Af}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ah}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Eh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}A`}{{{f{{l{c}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}A`}{{{f{{l{j}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Bh}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Eh}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Af}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Ah}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAd}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fn{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}`{{{f{Cl{l{c}}}}}b{DbA`}}`{{{f{{l{c}}}}}{{Bd{{f{Al}}Bb}}}A`}{{{f{Cl{l{c}}}}{f{{l{c}}}}G`}bDb}{{{f{Cl{l{c}}}}{f{{l{e}}}}G`}bDbDb}{{{f{{l{c}}}}}{{`{Gb}}}A`}{{}{{l{c}}}Db}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{l{c}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}}bDb}{Ffb}0{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ah}}}A`}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Ah}}}}{{{f{{l{c}}}}e}{{l{Ah}}}A`Ad}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Ah}}}}{{{f{{l{n}}}}{f{{Al{Aj}}}}}{{l{Ah}}}}{{{f{{l{Af}}}}{f{An}}}{{l{Ah}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ah}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Ah}}}}753182046{{{f{{l{j}}}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}{{{f{{l{Bh}}}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bA`}{{{f{{l{n}}}}{f{{Al{Aj}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{Ah}}}}d}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{Bh}}}}{f{{l{Ah}}}}}{{Bd{{l{Bh}}Bb}}}}{{{f{{l{Af}}}}{f{{l{Ah}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{Eh}}}}{f{{l{Ah}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{{l{{Bl{c}}}}}}{f{{l{Ah}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{j}}}}{f{{l{Ah}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{n}}}}{f{{l{Ah}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{c}}}}{f{{l{Ah}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{c}}}}}{{C`{Ff}}}Db}`{{{f{{l{j}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{n}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{c}}}}{f{ClGj}}}{{Bd{bGl}}}A`}{{{f{{l{{Bl{c}}}}}}{f{ClGj}}}{{Bd{bGl}}}Bn}{{{f{{l{Ah}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{Af}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{Bh}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{Bh}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{cc{}}{c{{l{e}}}Cd{{Db{}{{Gn{c}}}}}}1{{{f{An}}c}{{l{e}}}H`{{Db{}{{Gn{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{Gn{}}}}Db}H`}{{{f{An}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{An}}{Fn{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{c{{l{j}}}{{H`{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{e{{l{Af}}}{{Hd{An}}}{{H`{}{{Cb{{C`{c}}}}}}}}{e{{l{Af}}}{{Hf{An}}}{{H`{}{{Cb{c}}}}}}{c{{l{Ah}}}{{H`{}{{Cb{{C`{d}}}}}}}}{c{{l{Ah}}}{{H`{}{{Cb{d}}}}}}{e{{l{{Bl{c}}}}}Bn{{H`{}{{Cb{{C`{c}}}}}}}}{e{{l{j}}}{{Hh{B`}}}{{H`{}{{Cb{c}}}}}}{c{{l{j}}}{{H`{}{{Cb{{C`{B`}}}}}}}}{c{{l{e}}}{{H`{}{{Cb{C`}}}}}A`}{c{{l{e}}}{{H`{}{{Cb{{Gh{Fn{C`{Hj}}}}}}}}}A`}{e{{l{n}}}{{Hf{{Al{Aj}}}}}{{H`{}{{Cb{c}}}}}}{e{{l{n}}}{{Hd{{Al{Aj}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}{{l{Af}}}{{Hd{An}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}{{l{n}}}{{Hd{{Al{Aj}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}c}{{l{Ah}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{{f{An}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}A`}>{e{{l{Eh}}}{{Hd{{Al{Aj}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}7{e{{l{Eh}}}{{Hf{{Al{Aj}}}}}{{H`{}{{Cb{c}}}}}}7{e{{l{Af}}}{{Hd{An}}}{{H`{}{{Cb{{C`{c}}}}}}}}><?;{c{{l{Ah}}}{{H`{}{{Cb{{C`{d}}}}}}}}>{{{f{An}}c}{{l{Ah}}}{{Ch{}{{Cb{d}}}}}}{{{f{An}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}A`}{{{f{An}}e}{{l{n}}}{{Hd{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}{{{f{An}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{c}}}}}}{{{f{An}}e}{{l{Af}}}{{Hd{An}}}{{Ch{}{{Cb{c}}}}}}`{c{{l{j}}}{{Hl{}{{Cb{{C`{B`}}}}}}}}{e{{l{n}}}{{Hf{{Al{Aj}}}}HnI`Ib}{{Hl{}{{Cb{c}}}}}}{c{{l{Ah}}}{{Hl{}{{Cb{{C`{d}}}}}}}}{e{{l{Af}}}{{Hd{An}}HnI`}{{Hl{}{{Cb{{C`{c}}}}}}}}{c{{l{Ah}}}{{Hl{}{{Cb{d}}}}}}{e{{l{n}}}{{Hd{{Al{Aj}}}}HnI`}{{Hl{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{Hl{}{{Cb{C`}}}}}A`}{e{{l{Af}}}{{Hf{An}}HnI`Ib}{{Hl{}{{Cb{c}}}}}}{{c{f{An}}Ed}{{l{j}}}{{Hl{}{{Cb{{C`{B`}}}}}}}}{{{f{An}}{f{{Al{c}}}}}{{l{n}}}{{Hd{{Al{Aj}}}}}}{{{f{An}}{f{{Al{c}}}}}{{l{Af}}}{{Hd{An}}}}{{{f{An}}{f{Al}}}{{l{c}}}A`}{{{f{An}}{f{{Al{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{An}}{f{{Al{d}}}}}{{l{Ah}}}}{{{f{An}}{f{{Al{{C`{c}}}}}}}{{l{Af}}}{{Hd{An}}}}{{{f{An}}{f{{Al{{C`{d}}}}}}}{{l{Ah}}}}{{{f{An}}{f{{Al{C`}}}}}{{l{c}}}A`}{{{f{An}}{f{{Al{{C`{c}}}}}}}{{l{n}}}{{Hd{{Al{Aj}}}}}}{{{f{An}}{f{{Al{{C`{c}}}}}}}{{l{{Bl{c}}}}}Bn}{c{{l{Ah}}}{{Id{}{{Cb{{C`{d}}}}}}}}{c{{l{e}}}{{Id{}{{Cb{C`}}}}}A`}{{{f{An}}Fn}{{l{c}}}A`}{{{f{An}}Fn{C`{Hj}}}{{l{c}}}A`}{{{f{An}}{f{An}}Ff}{{l{Af}}}}{{{f{An}}{f{B`}}Ff}{{l{j}}}}{{{f{An}}Ff}{{l{c}}}A`}{{{f{An}}{f{{Al{Aj}}}}Ff}{{l{Eh}}}}{{{f{An}}cFf}{{l{{Bl{c}}}}}Bn}{{{f{An}}{f{{Al{Aj}}}}Ff}{{l{n}}}}{{{f{An}}{f{B`}}Ff}{{l{Bh}}}}{{{f{An}}dFf}{{l{Ah}}}}{{{f{An}}Ff}{{l{Ah}}}}6{{{f{An}}Ff}{{l{{Bl{c}}}}}Bn}{{{f{An}}Ff}{{l{n}}}}{{{f{An}}Ff}{{l{j}}}}{{{f{An}}Ff}{{l{Bh}}}}{{{f{An}}Ff}{{l{Af}}}}{{{f{An}}Ff}{{l{Eh}}}}{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{An}}Ff{f{Ed}}Ff}{{l{Bh}}}}{{{f{An}}Ff{f{Ed}}}{{l{j}}}}{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{Bh}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{{Bl{c}}}}}}Ff}{{Bd{IfBb}}}Bn}{{{f{{l{c}}}}Ff}{{Bd{IfBb}}}A`}{{{f{{l{n}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Eh}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{j}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Af}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Ah}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{{Bl{c}}}}}}Ff}IfBn}{{{f{{l{n}}}}Ff}If}{{{f{{l{Bh}}}}Ff}If}{{{f{{l{c}}}}Ff}IfA`}{{{f{{l{Eh}}}}Ff}If}{{{f{{l{Af}}}}Ff}If}{{{f{{l{Ah}}}}Ff}If}{{{f{{l{j}}}}Ff}If}{{{f{{l{Bh}}}}Ff}{{C`{B`}}}}{{{f{{l{j}}}}Ff}{{C`{B`}}}}{{{f{{l{c}}}}}{{C`{Ih}}}Db}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}IjDb}{{{f{{l{Bh}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{c}}}}}C`Db}0{{{f{{l{{Bl{c}}}}}}Ff}{{C`{{f{Il}}}}}Bn}0{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{j}}}}}Ff}{{{f{{l{Bh}}}}}Ff}{{{f{{l{Eh}}}}}Ff}{{{f{{l{Af}}}}}Ff}{{{f{{l{Af}}}}dd}{{Bd{BjBb}}}}{{{f{{l{c}}}}dd}{{Bd{BjBb}}}A`}{{{f{{l{n}}}}dd}{{Bd{BjBb}}}}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BjBb}}}Bn}{{{f{{l{j}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Eh}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Ah}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Bh}}}}dd}{{Bd{BjBb}}}}{{{f{{l{c}}}}FfdFf}BjF`}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ah}}}A`}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}e}{{l{Ah}}}A`Ad}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Ah}}}}{{{f{{l{Af}}}}{f{An}}}{{l{Ah}}}}{{{f{{l{n}}}}{f{{Al{Aj}}}}}{{l{Ah}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ah}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Ah}}}}841536072{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{}Ff}0{{FfIn{C`{J`}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Ed}}}}{{{f{{l{Bh}}}}}{{f{Ed}}}}{{{f{{l{c}}}}}{{Jd{{Jb{c}}}}}Db}{ce{}{}}0{{{l{Jf}}}{{Jj{JhJf}}}}{{{l{Jl}}Jn{C`{Ef}}}{{Jj{K`Jl}}}}{{{l{Kb}}{C`{Ff}}Ff}{{Bd{{Jj{KdKb}}Bb}}}}{{{l{Kb}}{C`{Ff}}Ff}{{Jj{KdKb}}}}{{{l{Jl}}Jn}{{Jj{KfJl}}}}{{{f{{l{j}}}}}}{{{f{{l{Bh}}}}}}{{{f{{l{Eh}}}}}}{{{f{{l{c}}}}}{}A`}{{{f{{l{n}}}}}}{{{f{{l{Af}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{{Bl{c}}}}}}}{}Bn}{{{f{{l{c}}}}}{{`{HnI`KhGbId}}}A`}{{{l{c}}}B`Db}{{{l{Kb}}}B`}{{{l{Jl}}}{{Jj{KjJl}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{Ah}}}Kl}000{{{f{{l{c}}}}}{{l{Ah}}}Db}02{{{f{{l{c}}}}}KnDb}{{{f{{l{c}}}}}{{`{L`}}}Db}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{{l{c}}}}}}}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gd}}}}}}}}{{{f{{l{c}}}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hj}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Ff}}}Db}{{{f{{l{c}}}}}{{Lb{c}}}Db}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}10{{{f{{l{c}}}}}FfDb}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbLd}}00{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ah}}}A`}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Ah}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Af}}}}{f{An}}}{{l{Ah}}}}{{{f{{l{c}}}}e}{{l{Ah}}}A`Ad}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ah}}}}{{{f{{l{n}}}}{f{{Al{Aj}}}}}{{l{Ah}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Ah}}}}152084673{{{f{{l{Ah}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`A`}{{{f{{l{Af}}}}}Lf}{{{f{{l{n}}}}}Lf}{{{f{{l{c}}}}}LfA`}{{{f{{l{Ah}}}}}Lf}{{{f{{l{Ah}}}}}{{C`{Lh}}}}{{{f{{l{c}}}}}{{C`{Lh}}}A`}{{{f{{l{E`}}}}}{{C`{In}}}}{{{f{{l{Eb}}}}}{{C`{Lh}}}}{{{f{{l{c}}}}}{{C`{Lh}}}F`}{{{f{{l{c}}}}}LfF`}{{{f{{l{E`}}}}}Lf}{{{f{{l{Eb}}}}}Lf}{{{f{Cl{l{c}}}}{Jb{c}}}bDb}`{{{f{{l{c}}}}}{{Lj{c}}}Db}{{{f{{l{c}}}}}{{f{{Ln{{Ll{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{Mb{M`}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Ln{{Ll{c}}}}}}}Db}{{{f{{l{c}}}}}{{Ln{{Ll{c}}}}}Db}{{{f{{l{c}}}}}C`A`}{{{f{{l{Ah}}}}}{{C`{d}}}}{{{f{{l{c}}}}}{{C`{Gh}}}A`}{{{f{{l{Ah}}}}}Lf}{{{f{{l{Af}}}}}Lf}{{{f{{l{c}}}}}LfA`}{{{f{{l{n}}}}}Lf}{{{f{An}}{f{{Al{Aj}}}}FfFf}{{l{Ah}}}}{{{f{An}}{f{Al}}}{{l{c}}}A`}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}e}{}A`{AbAd}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}FfDb}{{{f{{l{Af}}}}}{{Bd{FfBb}}}}{{{f{{l{n}}}}}{{Bd{FfBb}}}}{{{f{{l{c}}}}}{{Bd{FfBb}}}A`}{{{f{{l{c}}}}}{{f{An}}}Db}{{{f{An}}c}{{l{Kb}}}{{Hd{{Al{Md}}}}}}{{{f{An}}c}{{l{Mf}}}{{Hd{{Al{Mh}}}}}}{{{f{An}}{Mj{J`}}}{{l{Ml}}}}{{{f{An}}c}{{l{El}}}{{Hd{{Al{Ih}}}}}}{{{f{An}}c}{{l{Af}}}{{Hd{{Al{{C`{{Df{An}}}}}}}}}}{{{f{An}}c}{{l{Mf}}}{{Hd{{Al{{C`{Mh}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hd{{Al{{f{{Al{Aj}}}}}}}}}}{{{f{An}}c}{{l{Jl}}}{{Hd{{Al{{C`{Gd}}}}}}}}{{{f{An}}c}{{l{Mn}}}{{Hd{{Al{{C`{N`}}}}}}}}{{{f{An}}e}{{l{{Bl{c}}}}}Bn{{Hd{{Al{{C`{c}}}}}}}}{{{f{An}}c}{{l{Kb}}}{{Hd{{Al{{C`{Md}}}}}}}}{{{f{An}}c}{{l{Jf}}}{{Hd{{Al{Nb}}}}}}{{{f{An}}c}{{l{Nd}}}{{Hd{{Al{{C`{Aj}}}}}}}}{{{f{An}}c}{{l{Ml}}}{{Hd{{Al{J`}}}}}}{{{f{An}}c}{{l{Ah}}}{{Hd{{Al{{C`{d}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hd{{Al{{C`{{Df{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}{{l{Nd}}}{{Hd{{Al{Aj}}}}}}{{{f{An}}{Mj{Ih}}}{{l{El}}}}{{{f{An}}c}{{l{Af}}}{{Hd{{Al{{C`{Ef}}}}}}}}{{{f{An}}c}{{l{Mn}}}{{Hd{{Al{N`}}}}}}{{{f{An}}c}{{l{Af}}}{{Hd{{Al{Ef}}}}}}{{{f{An}}c}{{l{Jl}}}{{Hd{{Al{Gd}}}}}}{{{f{An}}c}{{l{n}}}{{Hd{{Al{{Fn{Aj}}}}}}}}{{{f{An}}c}{{l{Af}}}{{Hd{{Al{{f{An}}}}}}}}{{{f{An}}c}{{l{E`}}}{{Hd{{Al{{C`{In}}}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hd{{Al{{C`{Lh}}}}}}}}{{{f{An}}c}{{l{Af}}}{{Hd{{Al{{Df{An}}}}}}}}{{{f{An}}{Mj{Nb}}}{{l{Jf}}}}{{{f{An}}c}{{l{Ml}}}{{Hd{{Al{{C`{J`}}}}}}}}{{{f{An}}c}{{l{E`}}}{{Hd{{Al{In}}}}}}{{{f{An}}c}{{l{Jf}}}{{Hd{{Al{{C`{Nb}}}}}}}}{{{f{An}}c}{{l{El}}}{{Hd{{Al{{C`{Ih}}}}}}}}{{{f{An}}c}{{l{Ah}}}{{Hd{{Al{d}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hd{{Al{Lh}}}}}}{{{f{An}}c}{{l{n}}}{{Hd{{Al{{C`{{f{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hd{{Al{{C`{{Fn{Aj}}}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hd{{Al{{Df{{Al{Aj}}}}}}}}}}{{{f{An}}c}{{l{Af}}}{{Hd{{Al{{C`{{f{An}}}}}}}}}}{{{f{An}}{Mj{Gd}}}{{l{Jl}}}}{{{f{An}}{f{{Al{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{An}}c}{{l{Nf}}}{{Hd{{Al{Nh}}}}}}{{{f{An}}c}{{l{Nf}}}{{Hd{{Al{{C`{Nh}}}}}}}}{{{f{An}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Eh}}}}FfFf}{{l{Eh}}}}{{{f{{l{Bh}}}}FfFf}{{l{Bh}}}}{{{f{{l{Ah}}}}FfFf}{{l{Ah}}}}{{{f{{l{j}}}}FfFf}{{l{j}}}}{{{f{{l{c}}}}FfFf}{{l{c}}}A`}{{{f{{l{{Bl{c}}}}}}FfFf}{{l{{Bl{c}}}}}Bn}{{{f{{l{Af}}}}FfFf}{{l{Af}}}}{{{f{{l{n}}}}FfFf}{{l{n}}}}{{{f{An}}{Fn{c}}}{{l{{Bl{c}}}}}Bn}{{{f{An}}{Fn{c}}Hj}{{l{{Bl{c}}}}}Bn}{{{f{An}}Fn}{{l{c}}}A`}{{{Ln{Nj}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{Ln{Nj}}{Fn{{Cf{Cd}}}}IhIh}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kl}{{{l{Ah}}}}{{{f{{l{Ah}}}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Ah}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ah}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{{l{n}}}}{f{{Al{Aj}}}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ah}}}A`}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Ah}}}}{{{f{{l{Af}}}}{f{An}}}{{l{Ah}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}e}{{l{Ah}}}A`Ad}31042{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}896{{{f{{l{c}}}}}FfDb}`{{{f{{l{j}}}}}{{Bd{{Gf{Gd}}Bb}}}}{{{f{{l{Bh}}}}}{{Bd{{Gf{Gd}}Bb}}}}`{{{f{{l{j}}}}}{{`{{Nl{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{Af}}}}}{{`{{Nl{}{{Cb{{C`{{f{An}}}}}}}}}}}}{{{f{{l{Af}}}}}{{`{Nn}}}}{{{f{Cl{l{j}}}}}{{`{Nn}}}}{{{f{{l{c}}}}}LfA`}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}LhO`}{{Bd{{C`{Lh}}Bb}}}F`}{{{f{{l{E`}}}}LhO`}{{Bd{{C`{In}}Bb}}}}{{{f{{l{Eb}}}}LhO`}{{Bd{{C`{Lh}}Bb}}}}{{{f{{l{Eb}}}}LhO`}{{Bd{LfBb}}}}{{{f{{l{E`}}}}LhO`}{{Bd{LfBb}}}}{{{f{{l{c}}}}LhO`}{{Bd{LfBb}}}F`}{{{f{An}}FfLh}{{Bd{{l{Ah}}Bb}}}}{{{f{An}}FfLhLh}{{Bd{{l{c}}Bb}}}A`}{{{f{An}}Ff}{{l{c}}}A`}{{{f{An}}FfLhLh}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Nj}}}Db}{{{f{{l{Ml}}}}}B`}{{{f{{l{E`}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Nf}}}}}B`}{{{f{{l{Jf}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Mn}}}}}B`}{{{f{{l{Nd}}}}}B`}{{{f{{l{Mf}}}}}B`}{{{f{{l{El}}}}}B`}{{{f{{l{Jl}}}}}B`}89:04536217{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{l{c}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{An}}}bDb}{{{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{Eh}}}}}{{l{Eh}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}{f{Dh}}Ob}{{Bd{B`Bb}}}A`}{{{f{{l{c}}}}Ffe}{{Bd{{l{c}}Bb}}}Kl{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}Lhdd{C`{J`}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Ffdd{C`{J`}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{Af}}}}{f{{Al{Ih}}}}c}{{Bd{B`Bb}}}{{H`{}{{Cb{{C`{{f{An}}}}}}}}}}{{{f{Cl{l{c}}}}{f{{Al{Ih}}}}e}{{Bd{B`Bb}}}Od{{H`{}{{Cb{C`}}}}}}{{{f{{l{Ah}}}}{f{{Al{Ih}}}}c}{{Bd{B`Bb}}}{{H`{}{{Cb{{C`{d}}}}}}}}{{{f{{l{Af}}}}c{C`{{f{An}}}}}{{Bd{{l{Af}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}A`{{H`{}{{Cb{Ih}}}}}}{{{f{{l{Ah}}}}c{C`{d}}}{{Bd{{l{Ah}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{n}}}}c{C`{{f{{Al{Aj}}}}}}}{{Bd{{l{n}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{Ah}}}}ce}{{Bd{{l{Ah}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Dh{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}A`{{H`{}{{Cb{Ih}}}}}{{Dh{C`}{{Dd{C`}}}}}}{{{f{{l{Af}}}}ce}{{Bd{{l{Af}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Dh{{C`{{f{An}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{n}}}}ce}{{Bd{{l{n}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Dh{{C`{{f{{Al{Aj}}}}}}}{{Dd{{C`{{Fn{Aj}}}}}}}}}}{{{f{{l{c}}}}{f{{l{Ah}}}}C`}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{Ah}}}}{f{{l{Ah}}}}{C`{d}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{n}}}}{f{{l{Ah}}}}{C`{{f{{Al{Aj}}}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{Af}}}}{f{{l{Ah}}}}{C`{{f{An}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{c}}}}d}bDb}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Ih}bDb}{{{f{Cl{l{c}}}}Kn}bDb}{{{f{{l{Af}}}}Gd}{{l{Af}}}}{{{f{{l{j}}}}Gd}{{l{j}}}}{{{f{{l{{Bl{c}}}}}}Gd}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ah}}}}Gd}{{l{Ah}}}}{{{f{{l{Eh}}}}Gd}{{l{Eh}}}}{{{f{{l{n}}}}Gd}{{l{n}}}}{{{f{{l{c}}}}Gd}{{l{c}}}A`}{{{f{{l{Bh}}}}Gd}{{l{Bh}}}}{{{f{{l{Eh}}}}Gd{C`{{f{{Al{Aj}}}}}}}{{l{Eh}}}}{{{f{{l{j}}}}Gd{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{c}}}}GdC`}{{l{c}}}A`}{{{f{{l{Ah}}}}Gd{C`{d}}}{{l{Ah}}}}{{{f{{l{Af}}}}Gd{C`{{f{An}}}}}{{l{Af}}}}{{{f{{l{n}}}}Gd{C`{{f{{Al{Aj}}}}}}}{{l{n}}}}{{{f{{l{{Bl{c}}}}}}Gd{C`{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Bh}}}}Gd{C`{{f{B`}}}}}{{l{Bh}}}}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GdFf}{{l{c}}}Db}0{{{f{{l{Eh}}}}d}{{l{Eh}}}}{{{f{{l{Af}}}}d}{{l{Af}}}}{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{n}}}}d}{{l{n}}}}{{{f{{l{Ah}}}}d}{{l{Ah}}}}{{{f{{l{n}}}}Ej}{{l{n}}}}{{{f{{l{Eh}}}}Ej}{{l{Eh}}}}{{{f{{l{Ah}}}}Ej}{{l{Ah}}}}{{{f{{l{Af}}}}Ej}{{l{Af}}}}{{{f{{l{c}}}}Ej}{{l{c}}}A`}{{{f{{l{c}}}}Gd}{{Gh{{l{c}}{l{c}}}}}Db}0{{{f{{l{c}}}}Aj}{{C`{Lh}}}A`}{{{f{{l{c}}}}Aj}LfF`}{{{f{{l{E`}}}}Aj}Lf}{{{f{{l{Eb}}}}Aj}Lf}{{{l{c}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}C`A`}{{{f{{l{Ah}}}}}{{C`{Ih}}}}{{{f{{l{Ah}}}}}Lf}{{{f{{l{c}}}}}LfA`}{{{f{{l{n}}}}}Lf}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hd{{Al{Ih}}}}Of}}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{{Al{Oh}}}}Kn}{{l{c}}}Db}{{{f{{l{c}}}}{f{{Al{Oh}}}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Db{}{{Oj{D`}}}}Db}}{{{f{{l{n}}}}{f{c}}}{{l{n}}}{{Hd{{Al{Ih}}}}Of}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Oj{D`}}}}Db}{{Hd{{Al{Ih}}}}Of}}{{{f{{l{n}}}}{f{{l{El}}}}}{{l{n}}}}{{{f{{l{Af}}}}{f{c}}}{{l{Af}}}{{Hd{{Al{Ih}}}}Of}}{{{f{{l{Af}}}}{f{{l{El}}}}}{{l{Af}}}}`{{{f{{l{c}}}}dOl}{{Fn{{Fn{On}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kl}{{{f{{l{Af}}}}Ff}{{Bd{B`Bb}}}}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{Bh}}}}Ed}b}{{{f{{l{c}}}}}{{Bd{{A@f{{A@`{f}}{A@d{{A@b{Ff}}}}}}Bb}}}A`}{{{f{{l{j}}}}}{{Bd{{A@f{A@h{A@d{{A@b{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}{{{f{{l{n}}}}}{{l{Af}}}}{{{f{{l{c}}}}}{{Fn{C`}}}A`}{{{f{{l{c}}}}}{{A@j{Fn{Fn{C`}}}}}A`}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}{{{f{{l{c}}}}}{}A`}10{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dj}Db}{{{f{{l{Bh}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dj}Db}{{{f{{l{Bh}}}}c}{{Bd{{l{Bh}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bh}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dj}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{An}}g}{{Bd{{l{i}}e}}}Cd{}{{H`{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{Gn{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}A@l{}}0{{{f{{l{Af}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Ah}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Ff}{}Db}{{{f{{l{c}}}}Aj}{{C`{Lh}}}A`}{{{f{{l{c}}}}Aj}LfF`}{{{f{{l{E`}}}}Aj}Lf}{{{f{{l{Eb}}}}Aj}Lf}{{{f{{l{Jf}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ml}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Af}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ah}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Kb}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Nd}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Nf}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jl}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Eh}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mn}}}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mn}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Af}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ml}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jl}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ah}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jf}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eh}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Nf}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Kb}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Nd}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{ce{}{}}0{{{f{{l{Bh}}}}}Ff}{{{f{An}}c}{{l{e}}}Cd{{Db{}{{Gn{c}}}}Db}}{{{f{{l{e}}}}c}{{l{e}}}Cd{{Db{}{{Gn{c}}}}Db}}{{{f{{l{c}}}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{An}}}{{l{c}}}Db}{{{f{{Al{A@n}}}}e}c{}{{AA`{{f{{l{El}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kn}{{l{c}}}Db}{{{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}32012332012332013232013223102332{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bh}}}}{f{{l{c}}}}e}{{l{Bh}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{Ah}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}c}e{}{}{}}{{c{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}g{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}c}g{}{}{}}{{c{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}g{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClAAj}}{f{Cd}}}b}{{{f{ClAAj}}}b}{{{f{ClAAl}}}b}{{{f{ClAAn}}c}b{{Ch{}{{Cb{{C`{d}}}}}}Id}}{{{f{Cl{AB`{c}}}}e}bA`{{Ch{}{{Cb{C`}}}}Id}}{{{f{Cl{AB`{c}}}}e}bA`{{Ch{}{{Cb{}}}}Id}}{{{f{ClABb}}}b}{{{f{ClABd}}}b}65{{{f{ClABf}}}b}{{{f{ClABh}}}b}{{{f{ClAAn}}}b}{{{f{ClABj}}}b}{{{f{Cl{AB`{c}}}}}bA`}{{{f{Cl{ABl{c}}}}}b{ABnOf}}{{{f{ClAC`}}}b}{{{f{ClACb}}}b}{{{f{Cl{ACd{c}}}}}bA`}{{{f{ClAAj}}{C`{{f{Cd}}}}}b}{{{f{ClAAj}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClABb}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AB`{c}}}}{C`{{f{Al}}}}}bA`}{{{f{Cl{ABl{c}}}}{C`{e}}}b{ABnOf}{{Hd{c}}}}{{{f{ClABd}}{C`{c}}}b{}}{{{f{ClABb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAl}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClABf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClABh}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAn}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClABj}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AB`{c}}}}{f{B`}}}{{Bd{bBb}}}A`}{{{f{Cl{AB`{c}}}}{f{Al}}}bA`}{{{f{ClABf}}c}b{{Ch{}{{Cb{{C`{{f{An}}}}}}}}Id}}{{{f{ClABh}}c}b{{Ch{}{{Cb{{C`{{f{{Al{Aj}}}}}}}}}}Id}}{{{f{ClABd}}c}b{}}{{{f{Cl{ABl{c}}}}e}b{ABnOf}{{Hd{c}}}}{{{f{ClAC`}}d}b}{{{f{Cl{ACd{c}}}}}bA`}{{{f{ClABf}}c}b{{Ch{}{{Cb{{f{An}}}}}}}}{{{f{ClABh}}c}b{{Ch{}{{Cb{{f{{Al{Aj}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{ABl{c}}}}}{{ABl{c}}}{ABnOf}}{{{f{AC`}}}AC`}{{{f{ACb}}}ACb}{{{f{{ACd{c}}}}}{{ACd{c}}}{ACfA`}}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{c}}}b{}}000{{}AAj}{{}AAl}{Ff{{f{c}}}{}}0000000000{Ff{{f{Clc}}}{}}0000000000{Ffb}0000000000{{{f{ABf}}}d}{{{f{ABh}}}d}{{{f{AAn}}}d}{{{f{{AB`{c}}}}}dA`}{{{f{ABb}}}d}{{{f{ABf}}}{{f{Nj}}}}{{{f{ABh}}}{{f{Nj}}}}{{{f{AAn}}}{{f{Nj}}}}{{{f{{AB`{c}}}}}{{f{Nj}}}A`}{{{f{ABb}}}{{f{Nj}}}}{ABd{{l{c}}}Db}{{{f{ClAAj}}}{{l{j}}}}{{{f{ClAAl}}}{{l{j}}}}{{{f{ClABj}}}{{l{j}}}}{{{f{ClABb}}}{{l{j}}}}{{{ABl{{Al{Aj}}}}}{{l{n}}}}{{{ABl{An}}}{{l{Af}}}}{AC`{{l{Ah}}}}{ACbACh}{{{ACd{c}}}{{l{c}}}A`}`{cc{}}0000000000{{{f{An}}e}ACj{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}ACj{}{{Ch{}{{Cb{c}}}}}}{{{f{An}}{f{{Al{c}}}}}ACj{}}{{{f{An}}{f{{Al{{C`{c}}}}}}}ACj{}}{{{f{Ed}}FfFf{f{An}}}{{Bd{{Cf{ABb}}Bb}}}}{{}Ff}0000000000{{{f{ClABf}}}{{Cf{Cd}}}}{{{f{ClABh}}}{{Cf{Cd}}}}{{{f{ClAAn}}}{{Cf{Cd}}}}{{{f{Cl{AB`{c}}}}}{{Cf{Cd}}}A`}{{{f{ClABb}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{An}}Ff{C`{Ed}}}AAj}{{{f{An}}Ff{C`{Ed}}}AAl}{{{f{An}}FfFf}ABf}{{{f{An}}FfFf}ABh}{{{f{An}}FfFf}AAn}{{{f{An}}Ff}ABj}{{{f{An}}FfFfEd}{{AB`{c}}}A`}{{{f{An}}Ff}{{ABl{c}}}{ABnOf}}{{{f{An}}Ff}AC`}{{{f{An}}Ff}ACb}{{{f{An}}Ff}{{ACd{c}}}A`}{{{f{An}}FfFfEdEd}{{AB`{c}}}A`}{{{f{ClABd}}}b}{{{f{ClAC`}}}b}{{{f{ClACb}}}b}{{{f{Cl{ACd{c}}}}}bA`}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}A@l{}}0000000000{ce{}{}}0000000000````````{{{f{ClABb}}}b}{{{f{ClABb}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClABb}}{f{B`}}}{{Bd{bBb}}}}`{{{f{ABb}}}d}{{{f{ABb}}}{{f{Nj}}}}{{{f{ClABb}}}{{l{j}}}}{{{f{Ed}}FfFf{f{An}}}{{Bd{{Cf{ABb}}Bb}}}}{{{f{ClABb}}}{{Cf{Cd}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Fb}}}Fb}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{{}Fb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{Fb}}{f{Fb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fb}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{Fb}}{f{Clc}}}bACl}{{}Ff}{ce{}{}}{{{f{Fb}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}4``{{ACn{f{An}}}{{l{c}}}Db}{{AD`{f{{l{c}}}}}{{l{c}}}Db}10{{AD`{f{An}}Ed}{{l{c}}}Db}0{{ACn{f{An}}}{{Bd{{l{c}}e}}}Db{}}{{AD`{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{AD`{f{An}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{ADbADb}``{{ADd{f{An}}Ed}e{}{{ADf{c}}}}{{e{f{An}}Ed}ADf{}{{Hl{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Ff{{f{c}}}{}}000{Ff{{f{Clc}}}{}}000{Ffb}000{cc{}}000{{}Ff}000{ce{}{}}0000000{{{f{ADh}}}ADj}{{{f{ADl}}Ed}ADn}{{{f{ClADj}}}C`}{{{f{ClADn}}}C`}{{{f{ClAE`}}}C`}{{{f{Cl{AEb{c}}}}}C`Ch}32{{{f{Cl{AEb{c}}}}}C`Gb}`{{{f{ADj}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{ADn}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{{AEb{c}}}}}{{Gh{Ff{C`{Ff}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}A@l{}}000<<<<`````````````````````````{{{f{c}}h}b{}}0000{{}G`}{{}Ij}{{G`G`}G`}{{IjIj}Ij}{{{f{ClG`}}G`}b}{{{f{ClIj}}Ij}b}3210{{{f{G`}}}Ih}0{{{f{Ij}}}Aj}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000{{{f{{Ll{c}}}}}{{Ll{c}}}Db}{{{f{{Jb{c}}}}}{{Jb{c}}}Db}{{{f{AEd}}}AEd}{{{f{G`}}}G`}{{{f{Ij}}}Ij}{{{f{c}}{f{Cle}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{ClAEf}}}b}{G`G`}{IjIj}{{{f{G`}}G`}d}{{{f{Ij}}Ij}d}{{}{{Ll{c}}}Db}{{}{{Jb{c}}}Db}{{}G`}{{}Ij}{Ff{{f{c}}}{}}{{{f{{Lj{c}}}}}fDb}111111{Ff{{f{Clc}}}{}}000000{{G`G`}G`}{{IjIj}Ij}{{}d}{{{f{M`}}}{{C`{Ih}}}}{{{Jb{c}}Ih}{{Jb{c}}}Db}{{{f{{Jb{c}}}}}{{C`{Ih}}}Db}{{{Jb{c}}{C`{Ih}}}{{Jb{c}}}Db}{Ffb}000000<;5{{{f{G`}}{f{G`}}}d}{{{f{Ij}}{f{Ij}}}d}7{{{f{ClG`}}c}b{{H`{}{{Cb{G`}}}}}}{{{f{ClIj}}c}b{{H`{}{{Cb{Ij}}}}}}{{{Jb{c}}d}{{Jb{c}}}Db}{{{Jb{c}}{C`{d}}}{{Jb{c}}}Db}{{{f{{Jb{c}}}}G`}{{Jb{c}}}Db}{{{f{{Jb{c}}}}G`}{{Jb{e}}}DbDb}{{{Jb{c}}Ij}{{Jb{c}}}Db}{{{Jb{c}}{C`{Ij}}}{{Jb{c}}}Db}{{{f{{Jb{c}}}}{f{ClGj}}}{{Bd{bGl}}}Db}{{{f{AEd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{G`}}{f{ClGj}}}{{Bd{bGl}}}}0000{{{f{Ij}}{f{ClGj}}}{{Bd{bGl}}}}0000{cc{}}000000{Ih{{C`{G`}}}}{Aj{{C`{Ij}}}}{IhG`}0{AjIj}010{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}0{cG`{{H`{}{{Cb{G`}}}}}}{cIj{{H`{}{{Cb{Ij}}}}}}{{{f{An}}}{{C`{G`}}}}{{{f{An}}}{{C`{Ij}}}}{{{f{{Jb{c}}}}}{{C`{Ih}}}Db}{{{f{{Jb{c}}}}}dDb}{{{f{Ij}}}d}{{{f{M`}}}Ij}{{{f{{Jb{c}}}}}IjDb}0{{{f{{Jb{c}}}}}{{C`{f}}}Db}0{{{f{Cl{Ll{c}}}}}{{f{Cl{Jb{c}}}}}Db}{{{f{Ij}}}Kn}{{}Ff}000000{{{f{ClG`}}G`}b}{{{f{ClIj}}Ij}b}{{G`G`}G`}{{IjIj}Ij}{{{f{G`}}G`}d}{{{f{Ij}}Ij}d}{ce{}{}}000000{G`}{Ij}{{{f{G`}}}d}{{{f{Ij}}}d}{{{f{{Jb{c}}}}}dDb}21{{{f{{Jb{c}}}}}KnDb}111{{{f{G`}}}{{AEh{G`}}}}{{{f{Ij}}}{{AEh{Ij}}}}{{{f{G`}}}{{AEj{G`}}}}{{{f{Ij}}}{{AEj{Ij}}}}{{}d}{{}{{f{{AEn{AEl}}}}}}{{{f{M`}}}{{C`{Lf}}}}{{{Jb{c}}}{{Jb{c}}}Db}{{{f{{Jb{c}}}}}{{C`{Lf}}}Db}{{{Jb{c}}C`}{{Jb{c}}}Db}{{{f{{Jb{c}}}}{Jb{c}}}{{AF`{c}}}Db}4321{{{Jb{c}}}{{Ll{c}}}Db}{G`G`}{IjIj}{{{f{{Ll{c}}}}}{{Mb{{Jb{c}}}}}Db}{{{f{ClG`}}G`}b}{{{f{ClIj}}Ij}b}{{{f{ClG`}}G`d}b}{{{f{ClIj}}Ijd}b}{{{f{Cl{Jb{c}}}}{C`{Ih}}}bDb}{{{f{Cl{Jb{c}}}}d}bDb}{{{f{ClIj}}d}b}{{{f{Cl{Jb{c}}}}Ij}bDb}{{{f{Cl{Jb{c}}}}C`}bDb}033{{{f{Cl{Jb{c}}}}Kn}bDb}{{{f{ClIj}}Kn}b}{{{Jb{c}}Kn}{{Jb{c}}}Db}{{{Jb{c}}{C`{Kn}}}{{Jb{c}}}Db}{{G`G`}G`}{{IjIj}Ij}>=10{{{Ll{c}}}{{Jb{c}}}Db}{{{f{c}}}e{}{}}0000{{{f{ClG`}}G`}b}{{{f{ClIj}}Ij}b}{c{{Bd{e}}}{}{}}0000000000000{{{f{{Ll{c}}}}}{{C`{{Mb{{Jb{c}}}}}}}Db}{{{f{{Ll{c}}}}}{{C`{{Jd{{Jb{c}}}}}}}Db}{{{f{c}}}A@l{}}00000098{{{f{{Ll{c}}}}}{{f{{AFb{M`}}}}}Db}{ce{}{}}000000{AEfAEf}{{{f{{Ll{c}}}}}{{Jd{{Jb{c}}}}}Db}````{{{f{c}}h}b{}}{{{f{{AFd{c}}}}Ff}{{Gh{{AFd{c}}{AFd{c}}}}}Bn}{e{{AFd{c}}}Bn{{H`{}{{Cb{{C`{{f{c}}}}}}}}}}{e{{AFd{c}}}Bn{{H`{}{{Cb{{f{c}}}}}}}}{{AFfe}g{}{{H`{}{{Cb{c}}}}}{}}0{{{f{Il}}}{{f{AFh}}}}{{{f{{AFd{c}}}}}{{f{AFh}}}Bn}{{{f{Cl{AFd{c}}}}}{{f{ClAFh}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{AFd{c}}}}Ff}dBn}{{{f{{AFd{c}}}}}{{AFd{c}}}{ACfBn}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{{f{{AFd{c}}}}}{{f{AFf}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{{f{Il}}}}{f{{f{Il}}}}}d}{{{f{Il}}{f{Il}}}d}{{{f{{AFd{c}}}}{f{ClGj}}}{{Bd{bGl}}}{AFjBn}}{cc{}}{{FfAFf}{{AFd{c}}}Bn}{{{f{{AFd{c}}}}Ff}{{C`{{f{c}}}}}Bn}{{}AFf}{{{f{Hj}}{f{{AFd{c}}}}{f{{AFd{c}}}}}{{AFd{c}}}Bn}{{AFf{f{Hj}}}{{AFd{c}}}Bn}{{{f{Hj}}{f{{AFd{c}}}}}{{AFd{c}}}Bn}0{{}Ff}{ce{}{}}{{{f{{AFd{c}}}}}{}Bn}{{{f{{AFd{c}}}}Ff}dBn}0{{{f{c}}Ff}d{}}{{{f{{AFd{c}}}}}{{AFn{AFl}}}Bn}{{{f{{AFd{c}}}}}{{AFn{{f{c}}{Fh{c}}AFl}}}Bn}{{{f{{AFd{c}}}}}FfBn}0`{db}{{{f{Cl{AFd{c}}}}{C`{Hj}}}bBn}{{{f{Cl{AFd{c}}}}FfFf}bBn}{{{f{c}}FfFf}e{}{}}01{{{f{{AFd{c}}}}Ff}{{Gh{{Cf{Cd}}{Cf{Cd}}}}}Bn}0{{{f{Il}}}{{Cf{Il}}}}{{{f{{AFd{c}}}}}{{Cf{Cd}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{AFd{c}}e}}}Bn{}{{H`{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{g{{Bd{{AFd{c}}e}}}Bn{}{{H`{}{{Cb{{Bd{{f{c}}e}}}}}}}}{{AFfg}{{Bd{ie}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}{{{f{Il}}}{{f{An}}}}{{}{{f{An}}}}{{{f{{AFd{c}}}}}{{C`{{f{Hj}}}}}Bn}{{{f{{AFd{c}}}}Ff}{{f{c}}}Bn}0{{{f{{AFd{c}}}}Ff}{}Bn}{{{f{{AFd{c}}}}}{{f{{Ln{{Fn{c}}}}}}}Bn}{{{f{{AFd{c}}}}}{}Bn}{{{f{{AFd{c}}}}}{{Fh{c}}}Bn}{ce{}{}}{{{AFd{c}}{C`{Hj}}}{{AFd{c}}}Bn}{{{f{{AFd{c}}}}{C`{Hj}}}{{Cf{Cd}}}Bn}1`{{{f{Cl{AG`{c}}}}}bBn}0{{{f{Cl{AG`{c}}}}{C`{c}}}bBn}{{{f{Cl{AG`{c}}}}c}bBn}{{{f{Cl{AG`{c}}}}{f{AFh}}}bBn}{{{f{Cl{AG`{c}}}}{f{AFh}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AG`{c}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{AG`{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Ff}{ce{}{}}{{{f{An}}Ff}{{AG`{c}}}Bn}{{{f{Cl{AG`{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}4````{{{f{ClAGb}}}b}{{{f{ClAGb}}{C`{{f{AFh}}}}}b}{{{f{ClAGb}}{f{AFh}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AGd}}{f{ClGj}}}{{Bd{bGl}}}}<{{{f{An}}Ff}{{Cf{AGb}}}}{{}{{Ln{Dh}}}}{{}AFf}>={{}d}`{{{Cf{Dh}}{Ln{Dh}}AFf}b}{{{f{ClAGb}}}B`}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AGh{}{{AGf{c}}}}}}g}{{AGh{}{{AGf{c}}}}}{}{}{{Dh{{C`{e}}}{{Dd{{C`{c}}}}}}Dj}}{{{f{AGj}}{f{Dh}}}AGj}{{{f{AGj}}{f{Dh}}}{{l{c}}}Db}{{{f{{AGh{}{{AGf{c}}}}}}i{f{Cl{Al{g}}}}}b{}{}{}{{Dh{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AGh{}{{AGf{c}}}}}}g}{{AGh{}{{AGf{c}}}}}{}{}{{Dh{e}{{Dd{c}}}}Dj}}{{{f{AGl}}Ej}{{l{El}}}}{{{f{AGl}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AGn}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AH`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{AH`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{Ej}}}Ej}{{{f{En}}}En}{{{f{AHb}}}AHb}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{c}}}b{}}0000{{}Ej}{{}En}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00``{Ffb}00{{{f{Ej}}{f{Ej}}}d}{{{f{En}}{f{En}}}d}{{{f{AHb}}{f{AHb}}}d}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AHf}}}{{Bd{B`Bb}}}}{{{f{AHf}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}`{{{f{AHh}}c}{{Bd{AHhBb}}}{}}{{{f{AHj}}{f{{l{Ah}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Ej}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{En}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AHb}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{En}}}Ej}{{{f{Ej}}}En}22`{{{f{An}}cFf}AHl{}}{{{f{An}}Ff}AHn}`{{{f{AI`}}Ff}{{Bd{IfBb}}}}{{{f{AI`}}Ff}If}??{{{f{Ej}}{f{Clc}}}bACl}{{{f{En}}{f{Clc}}}bACl}{{{f{AHb}}{f{Clc}}}bACl}{{}Ff}00{ce{}{}}00{{{f{AIb}}}{{Bd{{l{Ah}}Bb}}}}{{{f{AId}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AIf}}}{{C`{c}}}{}}{{{f{AIf}}}{{C`{Lh}}}}{{{f{AIh}}}{{C`{c}}}{}}2{{{f{AIf}}}{{C`{{Gh{cc}}}}}{}}``{{{f{AGn}}}{{Bd{FfBb}}}}{{}Ej}{{}En}{{{f{AIj}}FfFf}{{l{c}}}Db}88``{{{f{AHf}}}{{Bd{{Gf{Gd}}Bb}}}}{{{f{AIh}}LhO`}{{Bd{{C`{c}}Bb}}}{}}{{{f{AIl}}}B`}0{{{f{AIn}}}AIn}{{{f{AJ`}}{f{Dh}}Ob}{{Bd{B`Bb}}}}{{{f{AJb}}c{C`{e}}}{{Bd{AJbBb}}}{{H`{}{{Cb{Ih}}}}}{}}{{{f{AJb}}ci}{{Bd{AJbBb}}}{{H`{}{{Cb{Ih}}}}}{}{}{{Dh{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AJb}}{f{{l{Ah}}}}{C`{c}}}{{Bd{AJbBb}}}{}}{{{f{AJd}}Gd}{{l{c}}}Db}{{{f{AJf}}Gdc}{{l{e}}}{}Db}{{{f{AJh}}FfFf}AJh}0`{{{f{AGl}}d}{{l{c}}}Db}{{{f{AGl}}Ej}{{l{c}}}Db}{{{f{AJj}}Aj}{{C`{Lh}}}}{{{f{AIf}}}{{C`{c}}}{}}{{{f{AJl}}{f{c}}}{{Bd{AJlBb}}}Of}{{{f{AJn}}{f{c}}}AJnOf}{{{f{AK`}}}{{Fn{{f{{Al{Aj}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@l{}}00{{{f{AGn}}}{{Bd{AGnBb}}}}8{ce{}{}}00{{Ejd}Ej}{{End}En}1010{{Enc}En{{H`{}{{Cb{d}}}}}}210{EjEj}{EnEn}`{{{f{AKb}}{f{{l{Ah}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Dh{ff}{{Dd{}}}}}{{Dh{f}{{Dd{}}}}}{{Dh{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Dh{}{{Dd{}}}}}{{Dh{}{{Dd{}}}}}{{Dh{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AKd{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDb{CdAKf}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AKh{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAKj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DbDbCdAKj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAKj{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAKf}AKj{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AKl{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAKlDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAKf}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}FfA`}0{{KnKn}Kn}{{{f{{l{El}}}}Ih}{{Bd{bBb}}}}{{{f{{AKn{Ih}}}}Ih}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAL`d}{{Fn{Ih}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AL`}}}AL`}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{{}AL`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{AL`}}{f{AL`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AL`}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{AL`}}{f{Clc}}}bACl}{{}Ff}{ce{}{}}{{{f{{Al{f}}}}cIhe}{{Fn{Ih}}}{{Ch{}{{Cb{C`}}}}}{{Dh{fFff}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}4`{{Ff{f{Cl{Fn{d}}}}}b}```{{{f{AJh}}FfFf}AJh}0{{Ff{f{{Al{B`}}}}{f{ClEn}}}{{Bd{{ALb{{l{El}}}}Bb}}}}{{{f{{Al{B`}}}}{f{{Al{d}}}}{f{{Al{d}}}}}{{Bd{ALdBb}}}}{{{f{An}}{f{{Al{B`}}}}{f{{Al{d}}}}{f{{Al{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{An}}{f{{Al{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Al{B`}}}}}{{Bd{ALdBb}}}}{{{f{{Al{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````77`{ALfGd}00{{{f{An}}}{{Bd{EfBb}}}}{{{f{An}}}{{Bd{ALhBb}}}}{{{f{ALj}}}Gd}{{{f{An}}}{{Bd{bBb}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{ALl}}c}ALl{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{ALn}}}d}{{{f{If}}}{{`{{Ch{}{{Cb{If}}}}}}}}{{{f{If}}{f{Cl{Fn{If}}}}}b}{{ALnd}ALn}{{{f{{Jj{KdKb}}}}{f{{Jj{KdKb}}}}}}{{{f{If}}{f{If}}}If}{{{f{{l{Bh}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{Af}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ah}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ALl}}{f{Bj}}}B`}{{{f{ClAM`}}{C`{{f{An}}}}}b}{{{f{ClALn}}{f{ALn}}}{{Bd{bBb}}}}{{{f{ClAM`}}}b}{{{f{ClAM`}}{f{An}}}b}{{{f{ALn}}Ej}{{l{El}}}}{eAMb{}{{H`{}{{Cb{c}}}}}}0{{AFfe}AMd{}{{H`{}{{Cb{c}}}}}}0{{{f{Lf}}}If}{{{f{If}}}If}{{{f{{Jj{JhJf}}}}}{{`{Id}}}}{{{f{{Jj{K`Jl}}}}}{{`{Id}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Nj}}}{{f{Ed}}}}{{{f{AMf}}}{{f{Ed}}}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{C`{{f{{Al{c}}}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{{Jj{KjJl}}}}}{{`{Id}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{ANb{An}}}ANd}{{{f{ALn}}{f{ALn}}c}{{Bd{ALnBb}}}ANf}{{{f{ANh}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{If}}{f{Ed}}}If}{{{f{Ed}}Ed}Ed}{{{f{{Jj{KfJl}}}}Jn}{{Jj{KfJl}}}}{{{f{{Jj{K`Jl}}}}Jn}{{Jj{K`Jl}}}}{{{f{ANh}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jj{K`Jl}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jj{JhJf}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jj{KdKb}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jj{KjJl}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jj{KfJl}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{ALn}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{ALl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ALl}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{{Jj{ce}}}}}{{Jj{ce}}}DbDb}{{{f{ANj}}}ANj}{{{f{ANd}}}ANd}{{{f{ALn}}}ALn}{{{f{ALl}}}ALl}{{{f{Lf}}}Lf}{{{f{ANl}}}ANl}{{{f{If}}}If}{{{f{ANn}}}ANn}{{{f{Ed}}}Ed}{{{f{Nj}}}Nj}{{{f{Jn}}}Jn}{{{f{Nd}}}Nd}{{{f{Mf}}}Mf}{{{f{El}}}El}{{{f{Ml}}}Ml}{{{f{Mn}}}Mn}{{{f{Nf}}}Nf}{{{f{Jf}}}Jf}{{{f{Jl}}}Jl}{{{f{E`}}}E`}{{{f{Eb}}}Eb}{{{f{Jh}}}Jh}{{{f{Kj}}}Kj}{{{f{Af}}}Af}{{{f{n}}}n}{{{f{Eh}}}Eh}{{{f{Ah}}}Ah}{{{f{Kd}}}Kd}{{{f{K`}}}K`}{{{f{Kf}}}Kf}{{{f{AO`}}}AO`}{{{f{AFf}}}AFf}{{{f{AOb}}}AOb}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000{{{f{ClNj}}Ed}b}{AOde{}{{AMb{c}}AKf}}0{{AOdAFf}e{}{{AMd{c}}AKf}}0{{{f{Ed}}}d}00{{{ANb{An}}}Ed}{{{f{Nj}}}{{f{Ed}}}}{{{f{{Jj{KfJl}}}}}{{l{Jl}}}}{{}AOf}{{}ANj}{{}ANd}{{}If}{{}ANn}{{}Ed}{{}AFf}{Ff{{f{c}}}{}}0{{{f{{Jj{ce}}}}}fDbDb}11111111111111111111111111111111111111111{Ff{{f{Clc}}}{}}0{{{f{Cl{Jj{ce}}}}}{{f{Cl}}}DbDb}11111111111111111111111111111111111111111{{{f{{Jj{KdKb}}}}{f{{Jj{KdKb}}}}}}{{{f{{l{Bh}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AM`c}ALn{{H`{}{{Cb{{C`{{f{An}}}}}}}}}}{Ffb}0000000000000{{{f{ClALl}}}b}11111111111111111111111111111{{{f{ANh}}}{{f{Ed}}}}{{{f{{Jj{KjJl}}}}}{{f{Ed}}}}{{{f{{Jj{KdKb}}}}}{{f{Ed}}}}{{{f{{Jj{KfJl}}}}}{{f{Ed}}}}{{{f{{Jj{JhJf}}}}}{{f{Ed}}}}{{{f{{Jj{K`Jl}}}}}{{f{Ed}}}}{{{f{ALn}}}{{f{Ed}}}}{{{f{ALl}}}{{f{Ed}}}}{{{f{Lf}}}{{f{Ed}}}}{{{f{If}}}Ed}`{{{f{ANj}}{f{ANj}}}d}{{{f{If}}{f{If}}}d}{{{f{ANn}}{f{ANn}}}d}{{{f{Ed}}{f{AFf}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Nj}}{f{Nj}}}d}{{{f{Jn}}{f{Jn}}}d}{{{f{AFf}}{f{AFf}}}d}{{{f{AOb}}{f{AOb}}}d}{{{f{If}}{f{If}}d}d}{{{f{ALn}}{f{{l{Af}}}}}}{{{f{ALn}}{f{ALn}}}}{{{f{ALn}}{f{An}}}}{{{f{ALl}}{f{ALl}}}{{l{Ah}}}}2130{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jj{ce}}}}}NjDbDb}{{{f{ALl}}{f{An}}}{{Bd{B`Bb}}}}{{{f{ALl}}}{{f{{Al{B`}}}}}}{{{f{ClALl}}}{{f{Cl{Fn{B`}}}}}}{{{f{ANd}}{f{An}}}{{C`{Ih}}}}{{ANf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{AM`ALn}{AOf{{Ln{ANd}}}}{{{f{ANj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{ANd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{ANl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{If}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{ANn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Ed}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Nj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Jn}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{AFf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AOb}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}0{{{l{Jf}}}{{Jj{JhJf}}}}1{{{l{Jl}}}{{Jj{KjJl}}}}2222222222222{cIfAOh}{{{f{{Al{Aj}}}}}If}{dIf}{{{f{An}}}If}6{{{C`{c}}}If{{AOj{If}}}}7{{{f{If}}}Ed}8{{{f{AFf}}}Ed}{IfEd}{{{f{If}}}Nj};{{{f{AOl}}}Nj}<{{{f{AOb}}}Jn}===================={AOnAFf}>{B@`AFf}?{{{f{AFf}}d}Ed}{{{l{El}}{Ln{ANd}}dANj}ALn}{{{f{An}}cJn}{{Jj{KfJl}}}{{H`{}{{Cb{B@b}}}}}}{{{f{An}}cJn}{{Jj{KfJl}}}{{H`{}{{Cb{{C`{B@b}}}}}}}}{{{l{El}}ANj}ALn}{{{f{An}}c}{{Jj{JhJf}}}{{H`{}{{Cb{B@d}}}}}}{{{f{An}}c}{{Jj{JhJf}}}{{H`{}{{Cb{{C`{B@d}}}}}}}}{{{f{An}}cJn}{{Jj{K`Jl}}}{{H`{}{{Cb{ALf}}}}}}{{{f{An}}cJn}{{Jj{K`Jl}}}{{H`{}{{Cb{{C`{ALf}}}}}}}}{{{f{An}}c}{{Jj{KjJl}}}{{H`{}{{Cb{ALj}}}}}}{{{f{An}}c}{{Jj{KjJl}}}{{H`{}{{Cb{{C`{ALj}}}}}}}}{{{B@h{B@f}}Ed}Nj}{{{f{{l{Af}}}}{f{{ANb{An}}}}ANj}{{Bd{ALnBb}}}}{{{Fn{c}}AFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{Fn{c}}AFf}{{AKf{}{{AMh{e}}{AMj{c}}{AMl{g}}}}}{AMn{AN`{e}}}ACf{{Gb{}{{Cb{e}}}}IdHnI`}}{{FfcAFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{FfAFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{An}}dFfANj}ALn}{{{f{An}}Ff}ALl}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{ANd}}Ih}{{f{An}}}}{{{f{{Jj{KfJl}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jj{K`Jl}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jj{KjJl}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jj{KdKb}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jj{JhJf}}}}Ff}{{Bd{IfBb}}}}{{{f{ANh}}Ff}{{Bd{IfBb}}}}{{{f{ALn}}Ff}{{Bd{IfBb}}}}{{{f{ALl}}Ff}{{Bd{IfBb}}}}{{{f{{Jj{KdKb}}}}Ff}If}{{{f{{Jj{KfJl}}}}Ff}If}{{{f{{Jj{K`Jl}}}}Ff}If}{{{f{{Jj{KjJl}}}}Ff}If}{{{f{{Jj{JhJf}}}}Ff}If}{{{f{ANh}}Ff}If}{{{f{ALn}}Ff}If}{{{f{ALl}}Ff}If}{{{f{ANd}}}{{f{{ANb{An}}}}}}{{}Ed}000000000000000000000000{{{f{ANd}}Ih}{{C`{{f{An}}}}}}{{{f{ALn}}}{{f{{Ln{ANd}}}}}}{{{f{Ed}}}{{C`{{Fn{Ff}}}}}}{{{f{If}}}{{C`{{f{An}}}}}}{{{f{B@j}}Ff}If}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{ALn}}{f{ALn}}}}{{{f{ALn}}{f{An}}}}{{{f{ALn}}{f{{l{Af}}}}}}{{{f{ALl}}{f{ALl}}}{{l{Ah}}}}1320{{{f{If}}{f{Clc}}}bACl}{{{f{ANn}}{f{Clc}}}bACl}{{{f{Ed}}{f{Clc}}}bACl}{{{f{Nj}}{f{Clc}}}bACl}{{{f{Jn}}{f{Clc}}}bACl}{{{f{AFf}}{f{Clc}}}bACl}{{{f{AOb}}{f{Clc}}}bACl}{{{f{If}}{f{Clc}}d}bACl}{{{f{{Jj{KjJl}}}}}{{l{Mn}}}}{{{f{{Jj{KfJl}}}}}{{l{Jl}}}}{EdEd}{{}Ff}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{AFf}}}{{C`{{f{AFf}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{ALl}}}}{{B@lEd}{{Bd{LfBb}}}}{{{Jj{K`Jl}}}B`}{{{Jj{JhJf}}}B`}{{{Jj{KdKb}}}B`}{{{Jj{KfJl}}}B`}{{{Jj{KjJl}}}B`}{ALnB`}{ALlB`}{{Lf{f{An}}}B`}{If{{Bd{IfBb}}}}{{{f{Ed}}}d}00{{{f{If}}}d}11{{{f{ALn}}}d}{{{f{ALl}}}d}1323{{{f{ANd}}}d}34440443434344443444434{{{f{AFf}}}d}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{AFn{cgAFl}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{ALl}}}AE`}{{{f{ALn}}}B@n}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{Ed}}}{{f{Ed}}}}{{{f{ANd}}}Ff}{{{f{ALn}}}Ff}{{{f{ALl}}}Ff}{{{f{ALn}}{f{ALn}}}}{{{f{ALn}}{f{An}}}}{{{f{ALn}}{f{{l{Af}}}}}}{{{f{ALl}}{f{ALl}}}{{l{Ah}}}}3210{{{f{ALn}}{f{ALn}}}{{Bd{{Gh{ALnALn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{ANn}}}{{C`{Ed}}}}{{{f{ALn}}}Lf}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClAOf}}{f{{Ln{ANd}}}}}{{Bd{bBb}}}}{{{f{{Jj{KfJl}}}}}{{l{Jl}}}}03{{{f{{Jj{KjJl}}}}}{{l{Mn}}}}1{{{f{{Jj{KdKb}}}}{f{{Jj{KdKb}}}}}}{{{f{{l{Bh}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ALn}}}{{Bd{FfBb}}}}{{{f{ALn}}}{{f{An}}}}{{{f{ALl}}}{{f{{B@h{B@f}}}}}}{{{f{Nj}}}{{f{{B@h{B@f}}}}}}`{{{f{{Jj{KjJl}}}}}{{l{Jf}}}}9{{}c{}}0{{{f{An}}FfANj}AM`}{{{f{An}}c}{{Jj{JhJf}}}{{Hd{{Al{B@d}}}}}}{{{f{An}}c}{{Jj{KjJl}}}{{Hd{{Al{ALj}}}}}}{{{f{An}}c}{{Jj{JhJf}}}{{Hd{{Al{{C`{B@d}}}}}}}}{{{f{An}}c}{{Jj{KjJl}}}{{Hd{{Al{{C`{ALj}}}}}}}}{{{f{An}}c}{{Jj{K`Jl}}}{{Hd{{Al{{C`{ALf}}}}}}}}{{{f{An}}c}{{Jj{KfJl}}}{{Hd{{Al{{C`{B@b}}}}}}}}{{{f{An}}c}{{Jj{K`Jl}}}{{Hd{{Al{ALf}}}}}}{{{f{An}}c}{{Jj{KfJl}}}{{Hd{{Al{B@b}}}}}}{{{Ln{ANd}}}AOf}{{{f{An}}{f{{Al{B`}}}}}{{Bd{ALlBb}}}}{{EdIf}Lf}{{{f{An}}Ed}Nj}{{{l{c}}}{{Jj{ec}}}DbDb}{{{f{ClB@n}}}C`}{{{f{ALn}}{f{An}}}}{{{f{ALn}}{f{{l{Af}}}}}}{{{f{ALn}}{f{ALn}}}}{{{f{ALl}}{f{ALl}}}{{l{Ah}}}}1320{{{f{ALn}}}Ff}{{{f{ALl}}}Ff}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jj{KjJl}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jj{JhJf}}}}{{{f{If}}{f{If}}}{{C`{BA`}}}}{{{f{Jn}}{f{Jn}}}{{C`{BA`}}}}{{{f{ALn}}}{{f{{l{El}}}}}}{{{f{{Jj{KdKb}}}}}{{C`{Ff}}}}{{{f{ClALl}}}b}{{{f{ALl}}}{{f{Nj}}}}{{{f{ClAM`}}{f{An}}}{{Gh{Ihd}}}}{{{f{{l{Bh}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClALl}}{f{An}}}b}{{{f{{Jj{JhJf}}}}{f{{l{Af}}}}{C`{{f{ALh}}}}}{{Bd{{Jj{JhJf}}Bb}}}}{{{f{{Jj{K`Jl}}}}{f{{l{Af}}}}{C`{{f{ALh}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{ALl}}}{{Bd{{l{Eh}}Bb}}}}{{{f{ANd}}{f{ANd}}}d}{{{f{{Jj{KdKb}}}}}Ff}{{{f{{Jj{KjJl}}}}}{{l{Mn}}}}{{{f{{Jj{KfJl}}}}}{{l{Jl}}}}{{{f{ClNj}}{B@h{B@f}}}b}{{{f{Cl{Jj{K`Jl}}}}Jn}b}{{{f{Cl{Jj{KfJl}}}}Jn}b}{{{f{Cl{Jj{K`Jl}}}}JnEf}{{Bd{bBb}}}}{{{f{Cl{Jj{K`Jl}}}}Ef}{{Bd{bBb}}}}{{{f{B@n}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{ALn}}d}ALn}{{{f{ALn}}Ej}ALn}{{{f{{Jj{JhJf}}}}{f{An}}}{{l{Af}}}}{{{f{{Jj{K`Jl}}}}{f{An}}}{{Bd{{l{Af}}Bb}}}}{{{f{{Jj{KjJl}}}}{f{An}}}{{l{Af}}}}{{{f{If}}{f{Ed}}}{{C`{If}}}}{{{f{{Jj{KdKb}}}}{f{{Jj{KdKb}}}}}}{{{f{{l{Bh}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jj{K`Jl}}}}}Jn}{{{f{{Jj{KfJl}}}}}Jn}{{{f{{Jj{K`Jl}}}}}{{f{{C`{Ef}}}}}}{{{f{ALn}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}AFf}{{{f{Nj}}d}AOl}{JnAOb}{{{f{Ed}}{f{An}}d}AOl}{Jn{{f{An}}}}{{{f{ALn}}{f{{ANb{An}}}}BAb}ALn}{{{f{ALn}}}{{Bd{ALnBb}}}}{{{f{ALn}}}ALn}{{{f{AFf}}}{{f{AFf}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{AFf}}}BAd}{{{f{{Jj{K`Jl}}}}{f{An}}}{{Bd{{l{Af}}Bb}}}}{{{f{{Jj{JhJf}}}}{f{An}}}{{l{Af}}}}{{{f{{Jj{KjJl}}}}{f{An}}}{{l{Af}}}}{{{f{c}}}Ef{}}00{{{f{If}}{f{If}}}d}{{{f{ALl}}}Ff}{{{f{{Jj{K`Jl}}}}{C`{{f{ALh}}}}{f{{l{Af}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{{Jj{JhJf}}}}{C`{{f{ALh}}}}{f{{l{Af}}}}}{{Bd{{Jj{JhJf}}Bb}}}}{g{{Bd{AMbe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{AFfg}{{Bd{AMde}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{AOd{{Bd{eg}}}{}{{AMb{c}}AKf}{}}0{{AOdAFf}{{Bd{eg}}}{}{{AMd{c}}AKf}{}}0{{{f{If}}}{{Bd{cBb}}}Ld}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{If}}{f{Ed}}}{{Bd{IfBb}}}}{{{f{Ed}}d}{{Bd{AFfBb}}}}{{{f{c}}}A@l{}}000000000000000000000000000000000000000000{{{f{AFf}}}AFf}{{{f{ALn}}}{{Bd{ALnBb}}}}{ALlBAf}{{{f{ClLf}}If}b}{{{f{ALn}}}d}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}cACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{Lf}}}{{f{If}}}}{{{f{ALn}}}{{Bd{BAfBb}}}}2{{{f{Ed}}If}d}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}gACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{ce{}{}}000000000000000000000000000000000000000000{Ffc{}}0{{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}{C`{Hj}}}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{Ed}}}If}```````````{{{f{ALn}}{f{ALn}}c}{{Bd{ALnBb}}}ANf}{{ANf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{ALn}}{f{ALn}}}{{Bd{{Gh{ALnALn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}BAh}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{{}b}{Ffb}{{{f{ClBAh}}}b}2{cc{}}6{{}Ff}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}{{}d}3``````````````````````````{{{f{BAj}}}{{f{An}}}}>>>===`{{BbBAj}Bb}{BbBb}={{{f{BAj}}}f}>>===;;;`{{{f{BAl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BAj}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Bb}}{f{ClGj}}}{{Bd{bGl}}}}0<{cBAj{{AOj{{Df{An}}}}}}={BAnBb}>{BB`Bb}{BBbBb}{BBdBb}{BBfBb}{BBhBb}{{}{{Fj{{f{An}}BAl}{{Dd{b}}}}}}{{}Ff}00{ce{}{}}00{cBbAKj}````{{{Fj{{f{An}}BAl}{{Dd{b}}}}}b}{cBbBBj}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@l{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClBAf}}{Fn{B`}}{f{BBl}}}{{Bd{bBb}}}}{{{f{BAf}}{f{Dh}}}{{Fn{B`}}}}0{{{f{BAf}}{f{{l{Ah}}}}}{{Bd{BAfBb}}}}{{{f{BAf}}{f{{Al{{B@h{B@f}}}}}}}{{Bd{BAfBb}}}}0{{{f{BAf}}GdFf}BAf}{{{f{ClBAf}}}{{f{ClBAf}}}}{{{f{ClBAf}}{f{An}}e}{{Bd{{f{ClBAf}}Bb}}}BBn{{AA`{{f{B`}}}{{Dd{c}}}}}}{{{f{ClBAf}}Ffe}{{Bd{{f{ClBAf}}Bb}}}BBn{{AA`{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{BAf}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{BAf}}}BAf}{{{f{BC`}}}BC`}{{{f{BCb}}}BCb}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BAf}}{f{An}}}{{Bd{{f{B`}}Bb}}}}{{{f{BAf}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{}BCb}{{}BAf}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{Ffb}0000{{{f{BAf}}{f{An}}}{{Bd{BAfBb}}}}{{{f{ClBAf}}{f{An}}}{{Bd{B`Bb}}}}{{{f{BAf}}{f{{Al{c}}}}}BAf{{Hd{An}}}}{{{f{BAf}}{f{{BCd{{f{An}}Ol}}}}}BAf}{{{f{BAf}}{C`{{f{{Al{c}}}}}}}{{Bd{BAfBb}}}{{Hd{An}}}}{{{f{BAf}}}{{Fn{Ed}}}}9{{{f{BCf}}}BAf}{{{f{BBl}}}BAf}{{{f{BCb}}{f{BCb}}}d}{{{f{BAf}}{f{BAf}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BAf}}}Ff}`{{{f{BAf}}e}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{BAf}}{Fn{B`}}}{{Bd{BAfBb}}}}{{{f{ClBAf}}{f{BAf}}}{{Bd{bBb}}}}{{{f{BAf}}}{{Fn{Nj}}}}{{{f{BAf}}AHb}{{Bd{BAfBb}}}}{{{f{BAf}}{f{{l{Ah}}}}}{{Bd{BAfBb}}}}{{{f{BC`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BCb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BAf}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}0000{ALlBAf}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cBAf{{H`{}{{Cb{B`}}}}}}{{{f{{Al{BCh}}}}}{{Bd{BAfBb}}}}{{{f{{Al{BCh}}}}{f{BBl}}}{{Bd{BAfBb}}}}{{c{f{BBl}}}{{Bd{BAfBb}}}{{Ch{}{{Cb{{f{BCh}}}}}}}}{{{f{BAf}}Ff}{{C`{{Fn{If}}}}}}{{{f{BAf}}{f{An}}}{{C`{Ff}}}}{{{f{BAf}}}{{Fn{{f{An}}}}}}{{{f{BAf}}}{{Fn{{B@h{B@f}}}}}}{{{f{BAf}}}{{f{{Al{B`}}}}}}{{{f{ClBAf}}}{{f{Cl{Fn{B`}}}}}}{{{f{BAf}}Ff}{{Bd{BChBb}}}}{{{f{BAf}}Ff{f{ClBCh}}}{{Bd{bBb}}}}{{{f{BAf}}Ff{f{ClBCh}}}b}{{{f{BAf}}}{{C`{{Bd{EdBb}}}}}}`{{{f{BAf}}e}{{Bd{BCjBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{BAf}}{Fn{B`}}{f{BCl}}}{{Bd{{Gh{B`{Fn{B`}}Bj}}Bb}}}}1{{{f{BAf}}{Fn{B`}}dd}{{Bd{BCjBb}}}}{{{f{BCb}}{f{Clc}}}bACl}{{{f{BAf}}{C`{Ff}}}BAf}{{{f{BAf}}}Ff}{{{f{BAf}}{f{{Al{B`}}}}}{{Bd{BAfBb}}}}{{{f{ClBAf}}{f{{Al{B`}}}}}{{Bd{{f{ClBAf}}Bb}}}}{{{f{ClBAf}}{f{{Al{B`}}}}}{{f{ClBAf}}}}{{{f{BAf}}Ff}f}{{{f{BAf}}{BCn{Ff}}}f}{{{f{BAf}}{BD`{Ff}}}f}{{{f{BAf}}BDb}f}{{{f{BAf}}{f{An}}}f}{{{f{BAf}}{BDd{Ff}}}f}{{{f{BAf}}{Mj{Ff}}}f}{{{f{BAf}}{BDf{Ff}}}f}{{}Ff}0000{{{f{ClBAf}}Ffc}{{Bd{{f{ClBAf}}Bb}}}BBn}{ce{}{}}000000{{BAf{f{An}}}ALl}{{{f{BAf}}}{{Bd{{l{Ah}}Bb}}}}{{{f{BAf}}}d}1{{{f{BAf}}}{{Fh{B`}}}}{{{f{BAf}}}{{`{{Ch{}{{Cb{BAf}}}}}}}}{{{f{BAf}}dd}BDh}{{{f{BAf}}}BDj}{BAfBDl}{{{f{BAf}}}Ff}{{{f{BAf}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BAf}}BC`}{{Bd{{C`{B`}}Bb}}}}122{{{Fn{c}}}{{Bd{BAfBb}}}BBn}{{{Fn{B`}}}BAf}{{{Fn{B`}}}{{Bd{BAfBb}}}}{{{f{ClBDh}}}C`}{{{f{ClBDj}}}C`}{{{f{BAf}}}BAf}{{BAfe}{{Bd{cBb}}}{}{{Dh{BAf}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClBAf}}e}{{Bd{cBb}}}{}{{Dh{{f{ClBAf}}}{{Dd{{Bd{cBb}}}}}}}}{{BAfgc}{{Bd{eBb}}}{}{}{{Dh{BAfc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClBAf}}}{{C`{B`}}}}{{{f{BAf}}{f{BAf}}}d}{{{f{ClBAf}}{f{An}}{f{An}}}{{Bd{{f{ClBAf}}Bb}}}}{{{f{ClBAf}}{f{An}}c}{{Bd{{f{ClBAf}}Bb}}}BBn}{{{f{ClBAf}}Ffc}{{Bd{{f{ClBAf}}Bb}}}BBn}18{{{f{BAf}}{Fn{B`}}{f{BDn}}}{{Bd{{Gh{B`{Fn{B`}}Bj}}Bb}}}}`{{{f{BAf}}{f{B`}}dd{C`{J`}}}{{Bd{BAfBb}}}}0{{{f{BAf}}Ffdd{C`{J`}}}{{Bd{BAfBb}}}}{{{f{BAf}}}BBl}{{{f{BAf}}{f{BAf}}}{{Bd{bBb}}}}{{{f{BAf}}e}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{BAf}}Ff}{{C`{{f{B`}}}}}}{{{f{BAf}}c}{{Bd{BAfBb}}}{{BE`{Ff}}}}2{{{f{BAf}}c}{{Bd{{Fn{B`}}Bb}}}{{BEb{{B@h{B@f}}}}}}{{{f{BAf}}e{f{{Ln{BBl}}}}}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{BAf}}e{f{BBl}}}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{ClBAf}}{f{{Al{c}}}}}{{Bd{bBb}}}{{Hd{An}}}}{{{f{BAf}}}{{Gh{FfFf}}}}{{{f{BAf}}Gd}BAf}{{{f{BAf}}}d}{{{f{ClBAf}}}b}{{{f{BDh}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{BDj}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{BAf}}GdFf}BAf}00{{{f{BAf}}cEn}{{Bd{BAfBb}}}{{BEb{{B@h{B@f}}}}}}{{{f{ClBAf}}cEn}{{Bd{{f{ClBAf}}Bb}}}{{BEb{{B@h{B@f}}}}}}{{{f{BAf}}Gd}{{Gh{BAfBAf}}}}0{{{f{ClBAf}}}{{`{{Ch{}{{Cb{BAf}}}}}}}}{{BAfFfd}{{Fn{BAf}}}}{{{f{BAf}}BC`}{{Bd{{C`{B`}}Bb}}}}{{{f{BAf}}{C`{Ff}}}BAf}{{{f{BAf}}{f{{l{El}}}}}{{Bd{BAfBb}}}}{{{f{BAf}}{f{{l{El}}}}}BAf}{{{f{BAf}}{f{{l{El}}}}d}BAf}{{{f{BAf}}}{{f{BAf}}}}{{{f{BAf}}BEd}{{Bd{{A@f{A@h{A@d{{A@b{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{ClBAf}}{C`{{f{An}}}}{C`{{A@j{Ef{Fn{Ef}}}}}}}{{Bd{BAfBb}}}}{{{f{ClBAf}}{f{An}}e}{{Bd{{f{ClBAf}}Bb}}}BBn{{AA`{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClBAf}}Ffe}{{Bd{{f{ClBAf}}Bb}}}BBn{{AA`{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}000{BEf{{Bd{BAfBb}}}}1{{{Gh{{BEh{{Cf{Cd}}}}{f{{Al{AOl}}}}}}}{{Bd{BAfBb}}}}{{c{f{BBl}}}{{Bd{BAfBb}}}{{Ch{}{{Cb{{Bd{{f{BCh}}Bb}}}}}}}}{{{f{BAf}}{f{An}}}{{Bd{FfBb}}}}44444{{{f{c}}}A@l{}}0000{{{f{BAf}}{C`{{f{{Al{Ef}}}}}}BCb{C`{{Gh{GdFf}}}}}{{Bd{BAfBb}}}}{{{f{BAf}}d{C`{{f{{Al{Ef}}}}}}BCb{C`{{Gh{GdFf}}}}}{{Bd{BAfBb}}}}1{{{f{BAf}}c}{{Bd{BAfBb}}}{{BEb{Ef}}}}{{{f{BAf}}ce}{{Bd{BAfBb}}}{{BEb{{B@h{B@f}}}}}{{BEb{{B@h{B@f}}}}}}{{{f{BAf}}BEj}{{Bd{BAfBb}}}}{{{f{BAf}}c{f{An}}BEl}{{Bd{BAfBb}}}{{BEb{Ef}}}}0{{{f{BAf}}{f{BAf}}}{{Bd{BAfBb}}}}{{{f{ClBAf}}{f{BAf}}}{{Bd{{f{ClBAf}}Bb}}}}{ce{}{}}0000{{{f{BAf}}}Ff}{{{f{ClBAf}}c}{{Bd{{f{ClBAf}}Bb}}}BBn}{{{f{ClBAf}}c{f{BBl}}}{{Bd{{f{ClBAf}}Bb}}}BBn}{{{f{ClBAf}}B`}{{f{ClBAf}}}}{{{f{BAf}}{f{An}}{C`{Ih}}}{{Bd{BAfBb}}}}{{{f{ClBAf}}{f{An}}{C`{Ih}}}{{f{ClBAf}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BEj}}}BEj}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{}BEj}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{BEj}}{f{BEj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BEj}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{BEj}}{f{Clc}}}bACl}`{{}Ff}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BCj}}}{{Bd{BAfBb}}}}`{{{f{BEn}}}{{f{{Al{{BF`{Ih}}}}}}}}{{{f{BCj}}c}{{Bd{BAfBb}}}{{Dn{BAf}{{Dd{{Bd{BAfBb}}}}}}HnI`}}{{{f{Bj}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BEn}}}BEn}{{{f{Bj}}}Bj}{{{f{BCj}}}BCj}{{{f{BFb}}}BFb}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BEn}{{}Bj}{Ff{{f{c}}}{}}00{{{f{BFd}}}f}11111{Ff{{f{Clc}}}{}}0000000`{{BFfc}{}BFh}{Ffb}000{{{f{ClBEn}}}b}1111{{{f{BEn}}{f{BEn}}}d}{{{f{Bj}}{f{Bj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BFj}}}Ih}{{{f{BEn}}}{{f{{Al{Ih}}}}}}{{{f{BCj}}}{{Bd{BAfBb}}}}{{{f{ClBEn}}}{{f{Cl{Fn{Ih}}}}}}{{{f{BEn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Bj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BCj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BFb}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{An}}BFb}Ef}{cc{}}000{{{Fn{{Gh{Ih{BF`{Ih}}}}}}}BEn}{{{Fn{{Fn{{Gh{Ih{BF`{Ih}}}}}}}}}BEn}{{{Fn{{Gh{{Fn{Ih}}{Fn{{BF`{Ih}}}}}}}}}BEn}33{BEnBj}44{BFlBFb}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cBEn{{H`{}{{Cb{{Gh{Ih{BF`{Ih}}}}}}}}}}{cBEn{{Hl{}{{Cb{{Gh{Ih{BF`{Ih}}}}}}}}}}{{{f{Bj}}Ff}BFj}{{{f{BCj}}}{{f{Bj}}}}{{{f{ClBCj}}}{{f{ClBj}}}}{{{f{Bj}}}{{l{El}}}}{{{f{BFn}}dd}{{Bd{BjBb}}}}{{{f{BCj}}}{{Bd{BAfBb}}}}{{{f{ClBj}}}{{f{ClBEn}}}}{{}Ff}0000000{ce{}{}}0000000{BjBEn}1{BEn}{{{f{BEn}}}}310{{{f{BFj}}}d}{{{f{Bj}}}d}{{{f{BEn}}}d}{{{f{BEn}}}{{BGb{{BG`{{Fh{Ih}}}}{Fh{{BF`{Ih}}}}}}}}{{{f{Bj}}}BGd}{{{f{BCj}}}{{Fn{B`}}}}{{{f{BCj}}{C`{{Gh{GdFf}}}}}{{Fn{B`}}}}={{{f{BFj}}}Ff}{{{f{Bj}}}Ff}?????{{{Fn{Ih}}{Fn{{BF`{Ih}}}}d}BEn}{{{f{BAf}}{Fn{B`}}Bj{C`{{Fn{Ef}}}}}BCj}{{{f{ClBGd}}}C`}{{{f{ClBGd}}Ff}C`}{{{f{BCj}}c}{{Bd{BAfBb}}}{{Dh{BAf}{{Dd{{Bd{BAfBb}}}}}}HnI`}}{{{f{c}}}{}{}}{{{f{Bj}}}BFf}{{{f{BCj}}LhO`}{{Bd{BAfBb}}}}{{BCje}BCj{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{Bj}}GdFf}BFd}{{{f{ClBEn}}}b}{{{f{ClBj}}}b}{{{f{BCj}}Aj}{{Bd{BAfBb}}}}{{{f{BCj}}}{{Bd{BAfBb}}}}{Bj{{Fn{Ih}}}}0{BCjBj}{{{f{ClBCj}}}Bj}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}A@l{}}0000000{BjBj}{{{f{Bj}}}{{f{BEn}}}}{{{f{Bj}}}{{f{{Fn{{A@b{Ih}}}}}}}};{ce{}{}}0000000`````{{{f{BEn}}c}B`{{Dh{{Gh{Ih{f{{BF`{Ih}}}}}}}{{Dd{C`}}}}HnI`}}{{{f{BEn}}c}B`{{Dh{{Gh{Ih{f{{BF`{Ih}}}}}}}{{Dd{}}}}HnI`}}{{{f{{Al{{A@b{Ih}}}}}}c}B`{{Dh{{A@b{Ih}}}{{Dd{C`}}}}HnI`}}{{{f{{Al{{A@b{Ih}}}}}}c}B`{{Dh{{A@b{Ih}}}{{Dd{}}}}HnI`}}{{{f{{Al{c}}}}e{C`{{Ln{AFh}}}}}{{AKn{c}}}{BGfBGh}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{Al{c}}}}{f{Hj}}e{C`{{Ln{AFh}}}}}{{AKn{c}}}{BGfBGh}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{l{c}}}}IhIh}{{l{c}}}Db}{{{f{{Fn{{A@b{Ih}}}}}}{f{{Al{{Cf{Cd}}}}}}}d}{{{f{BGj}}{f{Bj}}}B`}{{BGlBGl}BGl}0`{{{f{BGn}}{f{BAf}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BGn}}}{{Bd{{f{An}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBH`}}If}{{C`{b}}}}{{{f{ClBHb}}{f{If}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BH`}}}BH`}{{{f{BHb}}}BHb}{{{f{BCh}}}BCh}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Al{c}}}}}Ed{{Hh{Ed}}}}{{}BCh}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00{Ffb}00{{{f{BCh}}{f{BCh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCh}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{Gh{{f{Ed}}Ff}}}BH`}1{{{Gh{{f{Ed}}Ff}}}BHb}2{{eFf}BBl{{AOj{Ed}}}{{Ch{}{{Cb{{Fn{{Gh{Efc}}}}}}}}}}{{}Ff}00{ce{}{}}00{BH`B`}{BHbB`}{{{f{Ed}}Ff}BH`}{{{f{Ed}}Ff}BHb}{{{Fn{If}}}BCh}{{{f{ClBH`}}Ff}B`}{{{f{ClBHb}}Ff}B`}{{{f{{Al{BCh}}}}{C`{Ff}}}{{Bd{BBlBb}}}}0{{{f{{Al{BCh}}}}{C`{Ff}}}{{Bd{{Fn{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@l{}}00<<<{{{f{{Al{BAf}}}}}{{Bd{BAfBb}}}}0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BAf{f{{Al{{f{An}}}}}}{f{{Al{{f{An}}}}}}{C`{{f{An}}}}{f{BAf}}}BAf}{{BDlc}{{Bd{BAfBb}}}{{Dh{BHd{f{Cl{BHh{BHf}}}}{f{Cl{BHh{BHj}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BHl}}{f{{Al{Ih}}}}dd}BAf}{{{f{BHl}}{f{BAf}}{f{B`}}{f{B`}}BHn}{{Bd{BAfBb}}}}{{{f{An}}{f{An}}}Ef}{{{f{BEf}}Ff}{{Gh{BEfBEf}}}}{{{f{BI`}}{f{{Al{Oh}}}}Kn}BAf}0{{{f{BI`}}{f{{Al{Oh}}}}}BAf}0{{{f{BIb}}{C`{{Fn{{f{An}}}}}}{C`{{f{An}}}}d}{{Bd{BAfBb}}}}{{BDld}BDl}{{{BId{c}}{C`{{Ln{BIf}}}}}{{BId{c}}}BIh}{{{f{B`}}}{{Bd{B`Bb}}}}{BIjBIj}{{{BIl{}{{Dd{c}}}}{f{B`}}}c{}}{{BIjBIj}}{{{f{BEl}}Gd{C`{{f{ALh}}}}}{{Bd{GdBb}}}}0{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}1{{BJ`c}BDl{{Hd{{Al{BIj}}}}}}5`{{BIj{f{An}}}BIj}{{}BIj}{{BIjd}BIj}{c{{Bd{BIjBb}}}{{Hd{{Al{BIj}}}}}}{{{f{{Ln{ce}}}}}{{f{e}}}{}BJb}{{BJdd}BJd}`{{{f{BJf}}}d}00`{{BIjc}BIj{{AOj{BIj}}}}{{{Ln{BJf}}BJh}{{Bd{BDlBb}}}}65{{BIjcd}BIj{{AOj{BIj}}}}{{{f{ClABb}}}b}{{{f{ClABd}}}b}{{{f{ClABb}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClABd}}{C`{c}}}b{}}{{{f{ClABb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClABd}}c}b{}}{{{f{{AGh{}{{AGf{c}}}}}}g}{{AGh{}{{AGf{c}}}}}{}{}{{Dh{{C`{e}}}{{Dd{{C`{c}}}}}}Dj}}{{BJ`c{Ln{BBl}}}BDl{{Dh{BAf}{{Dd{{Bd{BAfBb}}}}}}HnI`}}{{BIjc{BJl{{Ln{BJj}}}}}BIj{{Dh{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BIjBIjc{BJl{{Ln{BJj}}}}}BIj{{Dh{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{{f{BIj}}{f{Clc}}f}{{Bd{BJnBb}}}{{Dn{{f{BIj}}f}{{Dd{{Bd{BJnBb}}}}}}}}{{{f{AGj}}{f{Dh}}}AGj}{{{f{AGj}}{f{Dh}}}{{l{c}}}Db}{{BIjc{f{{Al{BIj}}}}{BJl{{Ln{BJj}}}}}BIj{{Dh{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BIjBK`{f{{Al{BIj}}}}dd}BIj}{{ce{BJl{{Ln{BJj}}}}d}BIj{{Dh{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}{{Hd{{Al{BIj}}}}}}{{{f{{AGh{}{{AGf{c}}}}}}i{f{Cl{Al{g}}}}}b{}{}{}{{Dh{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AGh{}{{AGf{c}}}}}}g}{{AGh{}{{AGf{c}}}}}{}{}{{Dh{e}{{Dd{c}}}}Dj}}{{BIjBIjGdEd}BIj}{BEf{{Ln{Cd}}}}{{{f{BKb}}}{{C`{Ff}}}}{BKdBIj}{BKfBIj}{BIjBIj}3210{{{f{AGl}}Ej}{{l{El}}}}{{BIjEj}BIj}{{{f{BKh}}Ej}{{l{El}}}}{{cEn}BIj{{Hd{{Al{BIj}}}}}}{{{f{AGl}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AGn}}}{{Bd{{l{El}}Bb}}}}6{{{f{BKh}}}{{Bd{{l{El}}Bb}}}}{cBIj{{AOj{BIj}}}}{{{f{BKj}}}{{f{{Al{Nj}}}}}}``{BIjBKd}{eAMb{}{{H`{}{{Cb{c}}}}}}0{{AFfe}AMd{}{{H`{}{{Cb{c}}}}}}0`{{{f{Cl{BKl{c}}}}}{{Bd{BCfBb}}}BKn}{{{f{BJf}}}{{f{AFh}}}}{{{f{BKh}}}{{f{AFh}}}}{{{f{BL`}}}{{f{AFh}}}}{{{f{BEf}}}{{f{AFh}}}}{{{f{ClBKh}}}{{f{ClAFh}}}}{{{f{ClBEf}}}{{f{ClAFh}}}}{{{f{BLb}}}{{f{{l{n}}}}}}{{{f{BLd}}{C`{{f{An}}}}d}{{Bd{{Jj{JhJf}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}}{{Bd{{Jj{JhJf}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}Jndd{C`{{f{Ef}}}}{f{{l{Af}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}Jnd{C`{{f{Ef}}}}{f{{l{Af}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{{Ln{c}}}}}BLf{BLhOf}}{{{f{BLj}}}{{f{{l{j}}}}}}{{{f{{Ln{ce}}}}}{}OfBJb}{{{f{{Ln{c}}}}}NbBLl}{{{f{BLn}}}{{f{BIj}}}}{{{f{{Ln{ce}}}}}{{f{c}}}OfBJb}{{{f{AMf}}}{{f{Ed}}}}{{{f{BM`}}}{{f{B`}}}}{{{f{ClBKh}}}{{Bd{FfBb}}}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{C`{{f{{Al{c}}}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{BMb}}}{{f{{l{Af}}}}}}{{{Fn{BIj}}}BIj}{{{f{BLd}}{C`{{f{An}}}}d}{{Bd{{Jj{KjJl}}Bb}}}}{{{Ln{{Al{{BMd{c}}}}e}}}{{Ln{{Al{c}}e}}}{}BJb}{{{Ln{{BMd{c}}e}}}{{Ln{ce}}}{}BJb}{{{f{An}}}BIj}{{BIj{C`{Ih}}}BIj}{{{f{BMf}}}{{Bd{{l{Af}}Bb}}}}{{{f{BMf}}}{{l{Af}}}}{{{f{{Jj{K`Jl}}}}{f{Jn}}{f{ALh}}}{{Jj{KfJl}}}}`{{{BId{{Cf{BIh}}}}{C`{{Ln{BBl}}}}}{{Bd{BMhBb}}}}{{{BMj{c}}{f{BBl}}}{{Bd{{BMl{c}}Bb}}}BMn}{{{BN`{c}}{f{BBl}}}{{Bd{{BNb{c}}Bb}}}BMn}{{{BNd{c}}Ff}{{Bd{BNfBb}}}BIh}{{{BNh{c}}{f{BBl}}}{{Bd{{BNj{c}}Bb}}}BMn}{{{f{Cl{BId{c}}}}}{{Bd{BNlBb}}}BIh}`{BIjBNn}{{BIjBO`BIj}BIj}{{{f{BKh}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Ln{ce}}}}}{{f{c}}}OfBJb}11111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BDlIhcEn}BDl{{Hd{{Al{BIj}}}}}}{BEf{{Cf{Cd}}}}``{BDlBDl}```{{{f{BOb}}{f{An}}}{{Bd{EfBb}}}}{{BOd{Fn{BIj}}}{{Bd{BIjBb}}}}{{{f{ALn}}{f{ALn}}c}{{Bd{ALnBb}}}ANf}{{{f{BL`}}{f{Cl{Al{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BOf}}B`B`}{{Bd{B`Bb}}}}{{BOd{Fn{BIj}}}BIj}{{{f{BOh}}}b}{{BIjEd}BIj}{{{f{BKh}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BDl{BOj{{f{An}}EdOl}}d}BDl}{{{f{AH`}}{f{Ed}}}{{Bd{B`Bb}}}}3{{{f{ANh}}{f{Ed}}}{{Bd{B`Bb}}}}{{BDlEdd}BDl}2{{{f{AH`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{ANh}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BIjEdFb}BIj}`{BIjBOl}{{{f{{Ln{c}}}}}{{C`{{f{AKj}}}}}{AKjOf}}{BIjBIj}{{{f{BOn}}}{{Bd{B`Bb}}}}1`{{{f{C@`}}}{{Bd{{l{Jf}}Bb}}}}{{{f{BEf}}Ff}d}{{{BNd{c}}{f{BCf}}}{{Bd{{BNd{c}}Bb}}}BIh}{{{f{C@b}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BKh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{C@b}}c}{{Bd{B`Bb}}}Ad}{{{f{BKh}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}``{{{f{BKh}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBKh}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BIjBIjBIj}BIj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BIjBIj}BIj}10{{{f{BOh}}}BOh}{{{f{BDl}}}BDl}{{{f{BJ`}}}BJ`}{{{f{BJh}}}BJh}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{BCl}}}BCl}{{{f{BDn}}}BDn}{{{f{C@n}}}C@n}{{{f{BEl}}}BEl}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{A@n}}}A@n}{{{f{Oh}}}Oh}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{BHn}}}BHn}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{BLn}}}BLn}{{{f{BIj}}}BIj}{{{f{CEj}}}CEj}{{{f{BO`}}}BO`}{{{f{{BJl{c}}}}}{{BJl{c}}}ACf}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{BK`}}}BK`}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{BOd}}}BOd}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{{Ln{ce}}}}}{{Ln{ce}}}Of{BJbACf}}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{Ob}}}Ob}{{{f{BEd}}}BEd}{{{f{BEf}}}BEf}{{{f{BBl}}}BBl}{{{f{AOl}}}AOl}{{{f{BCf}}}BCf}{{{f{O`}}}O`}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{BKh}}}{{Ln{BKh}}}}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CHj}}}{{C`{{f{CHl}}}}}}{{{f{C@d}}}{{C`{{f{CHl}}}}}}````{{{f{BEl}}{f{BEl}}}BA`}{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}BA`{CHnOf}BJb}{{{f{{Al{BIj}}}}}BIj}{{BJdCBj}BJd}{{{f{CBj}}{f{CBn}}}d}`{{{f{{Al{B`}}}}}{{Bd{B`Bb}}}}{{{f{An}}}BIj}{BDl{{Bd{BAfBb}}}}{c{{Bd{{Fn{BAf}}Bb}}}{{Hl{}{{Cb{BDl}}}}}}{AOde{}{{AMb{c}}AKf}}0{{AOdAFf}e{}{{AMd{c}}AKf}}0{{ACn{f{An}}}{{l{c}}}Db}{{AD`{f{{l{c}}}}}{{l{c}}}Db}10{{AD`{f{An}}Ed}{{l{c}}}Db}0{BDl{{Bd{BOhBb}}}}{cBIj{{BEb{Ef}}}}{{{f{CHb}}Ff}CI`}``{{{f{BIb}}{Fn{{f{An}}}}{C`{{f{An}}}}d}{{Bd{BAfBb}}}}`{{{f{c}}{f{e}}}BA`{}{}}0``{{{f{CE`}}}{{Bd{{Ln{BBl}}Bb}}}}{{cCGn}{{Bd{BDlBb}}}{{Hd{{Al{BDl}}}}}}{{{f{BMf}}{f{{l{Af}}}}}{{l{Af}}}}{{ed}{{Bd{BIjBb}}}{{AOj{BIj}}ACf}{{Hd{{Al{c}}}}}}{{{f{CHj}}{Fn{BDl}}}{{Bd{BDlBb}}}}{{{f{C@d}}{Fn{BDl}}}{{Bd{BDlBb}}}}44{e{{Bd{BIjBb}}}{{AOj{BIj}}ACf}{{Hd{{Al{c}}}}}}{{c{f{An}}d}BIj{{Hd{{Al{BIj}}}}}}{{BKdc}BIj{{AOj{BIj}}}}{{{f{CIb}}{f{{Al{Aj}}}}}{{l{Ah}}}}{{{f{BMf}}{f{An}}d}{{Bd{{l{Ah}}Bb}}}}{{BKfc}BIj{{AOj{BIj}}}}{{{f{BBl}}{f{An}}}d}{{{f{CIb}}{f{{l{n}}}}}{{l{Ah}}}}{{{f{BMf}}{f{{l{Af}}}}dd}{{Bd{{l{Ah}}Bb}}}}{{{f{BMf}}{f{An}}}{{Bd{{l{Ah}}Bb}}}}{{{f{Cd}}{f{AFf}}}{{Cf{Cd}}}}{{{f{B`}}Ff}{{Bd{{l{El}}Bb}}}}{BDlBDl}{{{CId{c}}}{{Bd{FfBb}}}BIh}{BIjBIj}{{{f{BMf}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BMf}}{f{{l{Af}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CIf}}Aj{C`{Aj}}{C`{{f{CAn}}}}Ajd}{{Bd{FfBb}}}}{{{ANb{An}}}Ed}{{{f{BHl}}{f{{Al{Oh}}}}d}BAf}{{{f{CIh}}c}{{Cf{CIj}}}BMn}{{{f{CIl}}c}{{Cf{CIj}}}BMn}`{{BDlBDl{C`{Ef}}}BDl}{{{f{CIn}}{f{BAf}}{C`{{f{An}}}}{C`{{Gh{GdFf}}}}}{{Bd{BAfBb}}}}{{{f{CIn}}{f{BAf}}{C`{{Gh{GdFf}}}}d}{{Bd{{Gh{BAfBAf}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BIjd}BIj}{{BIjced}BIj{{Dh{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ACf}{{Hd{{Al{BIj}}}}}}212121{{ce}BIj{{Dh{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ACf}{{Hd{{Al{BIj}}}}}}32{{CJ`BIjFfd}BIj}`{{{f{BEf}}}{{f{AFf}}}}{{{f{AOl}}}{{f{AFf}}}}```{{BIjBIjBElCA`}BIj}`{CFhBIj}`{{BIjBIjBElCA`{C`{Jn}}{C`{Ef}}}BIj}0{ALfGd}00{{{f{CJb}}}{{l{Mn}}}}{{{f{CJd}}}{{l{Mn}}}}{{{f{C@`}}}{{Bd{{l{Mn}}Bb}}}}`{{{f{CJf}}}{{l{Jl}}}}{{{f{BEl}}}Gd}`{{{f{BEl}}}d}```{{}b}{cbBJb}{{}BDl}{{}BJh}{{}C@f}{{}C@j}{{}CIh}{{}BCl}{{}BDn}{{}CIl}{{}CAd}{{}CAh}{{}CAj}{{}CAl}{{}CBb}{{}CBd}{{}CBf}{{}BHn}{{}CBj}{{}CBl}{{}CC`}{{}CCb}{{}CCd}{{}CCf}{{}CCh}{{}CCl}{{}CD`}{{}CDd}{{}CDf}{{}CDh}{{}CE`}{{}BIj}{{}{{BJl{{Ln{BOf}}}}}}{{}{{BJl{{Ln{CJh}}}}}}{{}{{BJl{{Ln{BJj}}}}}}{{}CFh}{{}CFj}{{}CFn}{{}CG`}{{}CGb}{{}CGd}{{}CGh}{{}CGl}{{}CGn}{{}{{Ln{CJj}}}}{{}{{Ln{{Al{c}}}}}{}}{{}{{Ln{An}}}}{{}{{Ln{c}}}CJl}{{}CH`}{{}Ob}{{}BEd}{{}BBl}{{}AOl}{{}BCf}{{}O`}`{{}{{A@j{{Fn{A@n}}{Fn{Oh}}}}}}{Ff{{f{c}}}{}}0{{{f{{ALb{c}}}}}f{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BJl{c}}}}}f{}}22222222222222222222{{{f{{Ln{ce}}}}}{{f{c}}}OfBJb}333333333333333{Ff{{f{Clc}}}{}}00{{{f{Cl{ALb{c}}}}}{{f{Cl}}}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CE`}}}{{Bd{EfBb}}}}{{{f{BDl}}}{{Bd{EfBb}}}}0001{{{f{{Ln{c}}}}}{{f{An}}}{AKjOf}}{{{f{AOl}}{f{CJn}}}{{Bd{CK`Bb}}}}```{{{f{B`}}GdCKb}{{Bd{B`Bb}}}}{{BKfGdCKb}BIj}{{BIjGdCKb}BIj}{{{f{CE`}}}{{Bd{{`{BBj}}Bb}}}}``{{{BIl{}{{Dd{c}}}}{f{B`}}}c{}}{{BIjBIj}}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}{{BIjc}BIj{{AOj{BIj}}}}{{{Ln{AFhc}}}{{Bd{{Ln{ec}}{Ln{AFhc}}}}}BJb{AFhHnI`}}{{{Ln{AFhc}}}{{Ln{ec}}}BJb{AFhHnI`}}{{{f{{Ln{ce}}}}}{{CKd{ce}}}Of{ACfBJb}}{Ffb}0000000{{{f{ClBOh}}}b}{{BDle}BDl{{Hd{An}}}{{H`{}{{Cb{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Ln{ce}}}}}bOfBJb}33333333333333{BIjBIj}2{{BDl{C`{{Fn{BIj}}}}}BDl}1{{{f{BKh}}}B`}{{{f{{Jj{K`Jl}}}}{f{Jn}}{f{ALh}}}{{Jj{KfJl}}}}`{BIjCKf}{{{f{ANh}}}{{f{Ed}}}}{{{f{BKh}}}{{f{Ed}}}}`{{{f{Ed}}}BIj}{cBIj{{Hd{{Al{Ed}}}}}}`{CFjBIj}``{{}CH`}{{{f{c}}}e{}{{CKj{CKh}}}}0`{{{f{CIb}}{f{{Al{Aj}}}}}{{l{Ah}}}}{{{f{CIb}}{f{{l{n}}}}}{{l{Ah}}}}{{BEl{f{Ed}}{f{An}}}{{Bd{bBb}}}}{{BEl{C`{{f{An}}}}{f{An}}}{{Bd{bBb}}}}{{{f{c}}{f{c}}}{{Bd{bBb}}}CKl}{{{f{CKn}}{f{An}}}{{Bd{bBb}}}}`{{{f{C@l}}{f{C@l}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{BDn}}{f{BDn}}}d}{{{f{BEl}}{f{BEl}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{A@n}}{f{A@n}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{BHn}}{f{BHn}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{BLn}}{f{BLn}}}d}{{BIjc}BIj{{AOj{BIj}}}}{{{f{BIj}}{f{BIj}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{BO`}}{f{BO`}}}d}{{{f{{BJl{B`}}}}{f{{BJl{B`}}}}}d}{{{f{{BJl{{Ln{c}}}}}}{f{{BJl{{Ln{c}}}}}}}dOf}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{BK`}}{f{BK`}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{{Ln{CL`}}}}{f{CL`}}}d}{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}d{CLbOf}BJb}{{{f{{Ln{Cd}}}}{f{Cd}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{Ob}}{f{Ob}}}d}{{{f{BEd}}{f{BEd}}}d}{{{f{BEf}}{f{BEf}}}d}{{{f{BEf}}{f{{f{Cd}}}}}d}{{{f{BBl}}{f{BBl}}}d}{{{f{AOl}}{f{AOl}}}d}{{{f{BCf}}{f{BCf}}}d}{{{f{O`}}{f{O`}}}d}{{{f{CHh}}{f{CHh}}}d}{{BIjc}BIj{{AOj{BIj}}}}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CLdBIjd}BIj}``{{BIjc}BIj{{BEb{Ef}}}}{{BIjc}BIj{{Hd{{Al{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BBh}}}{}CLf{}}{{{f{CHj}}d}{{Bd{{Gh{{Ln{{Al{CIf}}}}Ff}}Bb}}}}{{{f{BDl}}d}{{Bd{EfBb}}}}{{BDle}BDl{{AOj{BIj}}ACf}{{Hd{{Al{c}}}}}}{{{f{AHf}}}{{Bd{B`Bb}}}}{BIjBIj}{{{f{AHf}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}`{{BIjBIjBIj}BIj}{{{f{CIh}}}CIf}{{{f{CIl}}}CIf}{{{f{BMf}}{f{{l{Af}}}}Ff}{{Bd{{l{Af}}Bb}}}}{Oh{{Gh{IhIh}}}}{{{f{BMf}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BMf}}{f{{l{Af}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BMf}}{f{An}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{ABb}}}d}``{{{f{BOh}}}{{C`{{Bd{BAfBb}}}}}}{{BDlFf}{{Bd{BAfBb}}}}{{{f{BOh}}}{{Bd{BAfBb}}}}{{{f{ABb}}}{{f{Nj}}}}{{{f{BKh}}}{{Df{Nj}}}}{{CLhGd}BIj}{{CLh{f{An}}}BIj}{{CLh{f{{Al{c}}}}}BIj{{Hd{An}}}}{{{f{BEf}}}{{f{{Al{AOl}}}}}}```{{BDlc}BDl{{AOj{BIj}}}}{{BIjc}BIj{{AOj{BIj}}}}`10{{BIjAHb}BIj}{{{f{AHh}}c}{{Bd{AHhBb}}}{}}{{{f{AHj}}{f{{l{Ah}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BKh}}{f{{l{Ah}}}}}{{Bd{B`Bb}}}}{{BDlBIj}BDl}5{{BCfc}BCf{{Dh{Ff{f{AOl}}}{{Dd{d}}}}}}{{{f{BMf}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BMf}}{f{{l{Af}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BMf}}{f{An}}}{{Bd{{l{El}}Bb}}}}{CLj{{Bd{BAfBb}}}}{{{f{ClCIj}}{f{ClBAf}}}{{Bd{bBb}}}}{ABd{{l{c}}}Db}{{ANf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BJdBDl}{CHj{{Bd{BDlBb}}}}{{{BId{c}}}{{Bd{BAfBb}}}BIh}{C@d{{Bd{BDlBb}}}}{C@h{{Bd{BDlBb}}}}{{{f{Cl{BMj{c}}}}{f{ClBAf}}}{{Bd{bBb}}}BMn}{{{CLl{c}}}{{Bd{BAfBb}}}BIh}{{{BKl{c}}}{{Bd{BAfBb}}}BKn}{{{f{Cl{CLn{c}}}}{f{ClBAf}}}{{Bd{bBb}}}BMn}{{{f{Cl{BN`{c}}}}{f{ClBAf}}}{{Bd{bBb}}}BMn}{{{f{Cl{CM`{c}}}}{f{ClBAf}}}{{Bd{bBb}}}BMn}{{{CMb{c}}}{{Bd{BAfBb}}}BIh}{{{CId{c}}}{{Bd{BAfBb}}}BIh}{{{BNd{c}}}{{Bd{BAfBb}}}BIh}{{{BNh{c}}{f{ClBAf}}}{{Bd{J`Bb}}}BMn}{{{f{ClABb}}}{{l{j}}}}><;{{{CLl{c}}{C`{{Ln{BIf}}}}d}{{Bd{BAfBb}}}BIh}{{{f{BNf}}Ff}d}{{}BIj}{BDlBDl}{BKfBIj}{BIjBIj}`0```{{}{{BJl{{Ln{BJj}}}}}}{{{f{BOn}}}{{Bd{B`Bb}}}}2{{BIjBIj}BIj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Ln{AEl}}}}}{{Bd{bBBh}}}}{{{f{BL`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@l}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BCl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BDn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@n}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BEl}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CA`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{A@n}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Oh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BJf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CB`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CMd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BHn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBn}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CC`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCb}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CCd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CD`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BIj}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CEj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BO`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{{BJl{c}}}}{f{ClGj}}}{{Bd{bGl}}}{}}{{{f{CEl}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CEn}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CF`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CFb}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CFd}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CFf}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{BK`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CFh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CG`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{Ln{ce}}}}{f{ClGj}}}{{Bd{bGl}}}OfBJb}{{{f{{Ln{ce}}}}{f{ClGj}}}{{Bd{bGl}}}{AFjOf}BJb}{{{f{{Ln{ce}}}}{f{ClGj}}}{{Bd{bGl}}}{BBjOf}BJb}{{{f{CK`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CH`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CHb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Ob}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BEd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BEf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BBl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AOl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BCf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{O`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CHd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CHf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CHh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{An}}BFb}Ef}```{{BIjce}BIj{{Dh{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ACf}{{Hd{{Al{BIj}}}}}}{{BJdd}BJd}``{{{f{An}}c}{{Bd{BIjBb}}}{{Hd{{Al{BIj}}}}}}{{BIj{C`{Ih}}}BIj}{cc{}}0000000{CE`BDl}{BJ`BDl}2222222222222222222222222222222222{IhA@n}33333333{{{f{An}}}CAn}444444{CBnBHn}555555555555555555555555555{NhBIj}{GdBIj}{MhBIj}{NbBIj}{IhBIj}{InBIj}{J`BIj}{BLnBIj}{N`BIj}{AjBIj}{{{f{An}}}BIj}{cc{}}{LhBIj}{dBIj}22{CFd{{BJl{{Ln{BL`}}}}}}{CMf{{BJl{{Ln{BL`}}}}}}{CMh{{BJl{{Ln{BL`}}}}}}{CMj{{BJl{{Ln{BL`}}}}}}{BK`{{BJl{{Ln{BL`}}}}}}{CEn{{BJl{{Ln{BL`}}}}}}{CFf{{BJl{{Ln{BL`}}}}}}{CEl{{BJl{{Ln{BL`}}}}}}{CMl{{BJl{{Ln{BL`}}}}}}{CF`{{BJl{{Ln{BL`}}}}}}<<<<<<<<{CFdBK`}{CElBK`}{CEnBK`}{CMjBK`}{cc{}}00000{CGdCGb}1111111{CMn{{Ln{CN`}}}}{{{f{CNb}}}{{Ln{CNb}}}}{{{f{{Al{c}}}}}{{Ln{{Al{c}}}}}ACf}4{CNd{{Ln{CJj}}}}{c{{Ln{c}}}{}}{{{Df{c}}}{{Ln{c}}}{CNfOf}}{Ef{{Ln{An}}}}{{{Fn{ce}}}{{Ln{{Al{c}}e}}}{}{BJbACf}}{{{f{CN`}}}{{Ln{CN`}}}}{{{Ln{An}}}{{Ln{{Al{Aj}}}}}}{CIf{{Ln{CNb}}}}{{{f{An}}}{{Ln{An}}}}{CNhc{}}{{{Cf{ce}}}{{Ln{ce}}}OfBJb}{{{f{CJj}}}{{Ln{CJj}}}}{{{A@b{c}}}{{Ln{{Al{c}}}}}{}}{cc{}}{CNjCK`}11111{CNlBEf}{CNnBEf}3{{{f{BCf}}}BBl}{{{Ln{BCf}}}BBl}{{{f{BCh}}}BBl}{BCfBBl}7{{{f{{Ln{BCf}}}}}BBl}{{{f{{Al{B`}}}}}BBl}9{{{Fn{AOl}}}BCf}:::::{{c{C`{Hj}}}CO`{}}{{{COb{Gd}}{COb{Aj}}{C`{Hj}}}COd}{{{COb{Gd}}{COb{Aj}}{C`{Hj}}}COf}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}00{c{{ALb{{l{Ah}}}}}{{H`{}{{Cb{d}}}}}}{c{{ALb{{l{e}}}}}{{H`{}{{Cb{}}}}}A`}{e{{Ln{{Al{c}}}}}{}{{H`{}{{Cb{c}}}}}}{eBBl{{AOj{Nj}}}{{H`{}{{Cb{c}}}}}}{{gFf}{{COh{Gd}}}Hd{{H`{}{{Cb{{C`{c}}}}}}}{{H`{}{{Cb{{C`{e}}}}}}}}0{e{{COh{Gd}}}{{H`{}{{Cb{{C`{d}}}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}{{{f{An}}e}ACj{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gAFf}{{COh{Gd}}}BGh{{H`{}{{Cb{{C`{c}}}}}}}{{H`{}{{Cb{{C`{e}}}}}}}}763{{{f{An}}e}ACj{}{{Ch{}{{Cb{c}}}}}}{c{{ALb{{l{e}}}}}{{Hl{}{{Cb{}}}}}A`}{e{{Ln{{Al{c}}}}}Hn{{Hl{}{{Cb{c}}}}}}`{c{{Bd{{CId{AEl}}Bb}}}{{AOj{CIf}}}}{{}{{Ln{c}}}Of}{c{{Ln{ec}}}BJbOf}{{{f{An}}{f{{Al{c}}}}}ACj{}}{{{f{An}}{f{{Al{{C`{c}}}}}}}ACj{}}{{{f{An}}}{{Bd{COj}}}}{c{{ALb{{l{e}}}}}{{Id{}{{Cb{}}}}}A`}{c{{ALb{{l{Ah}}}}}{{Id{}{{Cb{d}}}}}}{Ed{{BJl{{Ln{BJj}}}}}}{{{f{An}}c}COl{}}{{{Fn{c}}AFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{Fn{c}}AFf}{{AKf{}{{AMh{e}}{AMj{c}}{AMl{g}}}}}{AMn{AN`{e}}}ACf{{Gb{}{{Cb{e}}}}IdHnI`}}`{{{f{An}}cFf}AHl{}}{{FfcAFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{}CH`}{{BDlBDlcc}BDl{{AOj{BIj}}}}{{{f{COn}}{f{BAf}}ee}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{An}}Ff}AHn}{{FfAFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}``{{BIjc{BJl{{Ln{BJj}}}}D@`}BIj{{Dh{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}`{{BIjc}BIj{{AOj{BIj}}}}{{BIjFfFf}BIj}{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}d{D@bOf}BJb}{{{f{BKh}}Ff}{{Bd{IfBb}}}}{{BKdBIjd}BIj}{{BKfBIjd}BIj}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}6{{{f{BBl}}{f{An}}}{{C`{{f{Ed}}}}}}{{{f{AI`}}Ff}{{Bd{IfBb}}}}{{{f{ANh}}Ff}{{Bd{IfBb}}}}{{{f{AI`}}Ff}If}{{{f{ANh}}Ff}If}{{{f{BBl}}Ff}{{C`{{Gh{{f{{B@h{B@f}}}}{f{Ed}}}}}}}}{{{f{ClBBl}}Ff}{{C`{{Gh{{f{Cl{B@h{B@f}}}}{f{ClEd}}}}}}}}{BOlBIj}{{{f{BDl}}}CGh}{{{f{CGj}}}Ed}{{}Ed}{{{f{CAf}}GdCA`{C`{{f{ALh}}}}}{{Bd{C@nBb}}}}00{{{f{CJh}}{f{BBl}}D@d{f{Nj}}{f{Nj}}}{{C`{Nj}}}}{{{f{BJj}}{f{BBl}}D@d{f{{Al{Nj}}}}}{{Bd{NjBb}}}}{{{f{BBl}}{f{An}}}{{C`{Nj}}}}{{{f{AFf}}}{{f{{Al{AOl}}}}}}{{{f{BKj}}}Ff}{{{f{BBl}}{f{An}}}{{C`{{Gh{Ff{f{{B@h{B@f}}}}{f{Ed}}}}}}}}{{{f{Cl{BNd{c}}}}}{{Bd{{f{{Ln{CHb}}}}Bb}}}BIh}{{{f{BKh}}}{{C`{{Mb{M`}}}}}}{{{f{Cl{Ln{ce}}}}}{{C`{{f{Clc}}}}}OfBJb}{{{f{Cl{Ln{ce}}}}}{{f{Clc}}}OfBJb}{{{f{D@f}}}{{Fn{{f{An}}}}}}{{{f{BBl}}}{{Fn{{f{An}}}}}}{{{f{BCf}}}{{Fn{{f{An}}}}}}{{{f{{CKl{}{{D@h{c}}}}}}}{{Fn{{Gh{{f{An}}c}}}}}{AFjCLb}}{{{f{BBl}}}{{Fn{{Gh{{f{An}}}}}}}}{{{f{BCf}}}{{Fn{{Gh{{f{An}}}}}}}}{{{f{BKh}}Ff}{{C`{{f{Il}}}}}}{{{f{BKh}}FfFf}{{C`{{f{Il}}}}}}{{{f{BL`}}}{{C`{{BJl{{Ln{BJj}}}}}}}}{{{f{CAf}}C@nCA`Jn{C`{{f{ALh}}}}CAd}{{Bd{D@jBb}}}}{{{f{CAh}}}{{Ln{CAj}}}}{{{f{Clc}}}{{Bd{D@lBb}}}{BKnBIhOf}}{{{f{CMd}}{f{BBl}}}{{Bd{{Ln{BBl}}Bb}}}}{{cFf}{{Fn{{Gh{FfFf}}}}}{{Ch{}{{Cb{Ff}}}}}}{{{f{B@j}}Ff}If}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{BKh}}Ff}If}{{{f{CHj}}}d}{{{f{C@d}}}d}`{{BDle}BJ`{{AOj{BIj}}ACf}{{Hd{{Al{c}}}}}}{{{f{D@n}}{Fn{B`}}{f{BCl}}}{{Bd{{Gh{B`{Fn{B`}}Bj}}Bb}}}}{{BDlBIjcBCl}BJ`{{Hd{{Al{BIj}}}}}}2{{BElBEl{f{{Al{Gd}}}}CA`Jn{C`{ALh}}}{{Bd{{Fn{{A@b{Ih}}}}Bb}}}}{{CAf{f{{Al{Gd}}}}CA`Jn{f{{C`{Ef}}}}ddCAd}{{Gh{{Fn{{A@b{Ih}}}}{Fn{Gd}}{Fn{Gd}}}}}}{{{f{BFn}}dd}{{Bd{BjBb}}}}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}{{BIjc}BIj{{AOj{BIj}}}}{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}d{D@bOf}BJb}21`{{{f{BKh}}}d}{{{f{DA`}}}d}{{{f{BCl}}{f{Clc}}}bACl}{{{f{BDn}}{f{Clc}}}bACl}{{{f{BEl}}{f{Clc}}}bACl}{{{f{CA`}}{f{Clc}}}bACl}{{{f{CAb}}{f{Clc}}}bACl}{{{f{CAd}}{f{Clc}}}bACl}{{{f{CAh}}{f{Clc}}}bACl}{{{f{CAj}}{f{Clc}}}bACl}{{{f{CAl}}{f{Clc}}}bACl}{{{f{CAn}}{f{Clc}}}bACl}{{{f{CB`}}{f{Clc}}}bACl}{{{f{CBb}}{f{Clc}}}bACl}{{{f{CBd}}{f{Clc}}}bACl}{{{f{CBf}}{f{Clc}}}bACl}{{{f{BHn}}{f{Clc}}}bACl}{{{f{CBh}}{f{Clc}}}bACl}{{{f{CBj}}{f{Clc}}}bACl}{{{f{CBl}}{f{Clc}}}bACl}{{{f{CBn}}{f{Clc}}}bACl}{{{f{CC`}}{f{Clc}}}bACl}{{{f{CCb}}{f{Clc}}}bACl}{{{f{CCd}}{f{Clc}}}bACl}{{{f{CCf}}{f{Clc}}}bACl}{{{f{CCh}}{f{Clc}}}bACl}{{{f{CCj}}{f{Clc}}}bACl}{{{f{CCl}}{f{Clc}}}bACl}{{{f{CCn}}{f{Clc}}}bACl}{{{f{CD`}}{f{Clc}}}bACl}{{{f{CDb}}{f{Clc}}}bACl}{{{f{CDd}}{f{Clc}}}bACl}{{{f{CDf}}{f{Clc}}}bACl}{{{f{CDh}}{f{Clc}}}bACl}{{{f{CDj}}{f{Clc}}}bACl}{{{f{CDl}}{f{Clc}}}bACl}{{{f{CDn}}{f{Clc}}}bACl}{{{f{BLn}}{f{Clc}}}bACl}{{{f{BIj}}{f{Clc}}}bACl}{{{f{CEj}}{f{Clc}}}bACl}{{{f{BO`}}{f{Clc}}}bACl}{{{f{CEl}}{f{Clc}}}bACl}{{{f{CEn}}{f{Clc}}}bACl}{{{f{CF`}}{f{Clc}}}bACl}{{{f{CFb}}{f{Clc}}}bACl}{{{f{CFd}}{f{Clc}}}bACl}{{{f{CFf}}{f{Clc}}}bACl}{{{f{BK`}}{f{Clc}}}bACl}{{{f{CFl}}{f{Clc}}}bACl}{{{f{CFn}}{f{Clc}}}bACl}{{{f{CG`}}{f{Clc}}}bACl}{{{f{CGb}}{f{Clc}}}bACl}{{{f{CGd}}{f{Clc}}}bACl}{{{f{CGf}}{f{Clc}}}bACl}{{{f{CGj}}{f{Clc}}}bACl}{{{f{CGl}}{f{Clc}}}bACl}{{{f{CGn}}{f{Clc}}}bACl}{{{f{{Ln{ce}}}}{f{Clg}}}b{DAbOf}BJbACl}{{{f{CH`}}{f{Clc}}}bACl}{{{f{BEd}}{f{Clc}}}bACl}{{{f{BBl}}{f{Clc}}}bACl}{{{f{AOl}}{f{Clc}}}bACl}{{{f{O`}}{f{Clc}}}bACl}{{{f{CHh}}{f{Clc}}}bACl}{{{f{DAd}}{f{B`}}CCbd}{{Bd{{Gh{{Gh{{Fn{Ih}}{Fn{Ih}}}}d}}Bb}}}}{{{f{DAd}}{f{B`}}CCbd}{{Bd{{Gh{{AKn{Ih}}{AKn{Ih}}}}Bb}}}}{{BJ`{C`{Ff}}}BDl}{{BKfBIj}BIj}{{BIj{C`{Ff}}}BIj}{{{f{BMf}}}{{Bd{{l{Af}}Bb}}}}{{{f{BMf}}}{{l{Af}}}}``{{{f{{Al{{f{{l{Af}}}}}}}}{f{An}}d}{{Bd{{l{Af}}Bb}}}}{{{f{DAf}}}{{l{Mn}}}}{{{f{CJd}}}{{l{Mn}}}}{{{f{C@`}}}{{Bd{{l{Mn}}Bb}}}}`{{{f{CJf}}}{{l{Jl}}}}`{{BJdCBn}BJd}`{{{f{A@n}}}Ih}`{{{f{{Jj{K`Jl}}}}{f{{l{Af}}}}CHh{Fj{Gd}{{Dd{ALf}}}}{Fj{ALf}{{Dd{Gd}}}}{f{ALh}}{f{ALh}}}{{Bd{{l{Jl}}Bb}}}}{{{f{{Jj{K`Jl}}}}{C`{{f{An}}}}{Fj{Gd}{{Dd{ALf}}}}{Fj{ALf}{{Dd{Gd}}}}{f{ALh}}{f{ALh}}}{{Bd{{l{Jl}}Bb}}}}{BIjBIj}{{{f{ALf}}}d}{{{BMj{c}}d}{{BMj{c}}}BMn}``0`{{}b}{cb{ACfBJb}}`{cBIj{{Hd{{Al{Gd}}}}}}``{{{f{D@f}}{f{An}}}{{C`{Ff}}}}{{{f{BBl}}{f{An}}}{{C`{Ff}}}}{{{f{BCf}}{f{An}}}{{C`{Ff}}}}{{{f{{Al{Ih}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{D@l}}Aj{C`{Ff}}d{C`{{f{BBl}}}}FfFf{C`{{f{CAn}}}}{C`{Aj}}Aj{C`{{f{CB`}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gh{BBlFfFf}}Bb}}}}{{{CMb{c}}{C`{{DAh{Ff}}}}}{{CMb{c}}}BIh}{{{CId{c}}{C`{{DAh{Ff}}}}}{{CId{c}}}BIh}``{{}Ff}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClABb}}}{{Cf{Cd}}}}{{BDlBDlcc}BDl{{AOj{BIj}}}}{{{f{COn}}{f{BAf}}ee}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{ClOh}}}{{f{ClJ`}}}}`{{{f{ClBBl}}Ff{B@h{B@f}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BIjBIjGdEd}BIj}{{BIjBIjBIj}BIj}``{{{f{B`}}CCn}B`}{{BIjCCn}BIj}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BIjBIj}BIj}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEf{{Gh{{Fn{AOl}}{Fn{{Cf{Cd}}}}{C`{Hj}}}}}}{{{ALb{c}}}c{}}{{{Ln{ce}}}{{C`{c}}}{}BJb}33{{{f{BIj}}}}{{{f{BEf}}}}{BBl}{DAjBKf}{BKfBKf}{{{Ln{ce}}}{}OfBJb}{{{Ln{ce}}}{{Gh{e}}}OfBJb}{{CAhc}{{BId{c}}}BIh}{{B@lEd}{{Bd{LfBb}}}}{BBnB`}{{{Ln{BKh}}}B`}{CHbDAl}{BEb{{Fn{c}}}{}}{c{{Fn{{B@h{B@f}}}}}{}}{c{{Fn{Ef}}}{}}{{{f{CBn}}}d}{{{f{B`}}{f{B`}}{f{B`}}CD`}{{Bd{{l{Ah}}Bb}}}}{{BIjccCD`}BIj{{AOj{BIj}}}}{cd{{Hd{CNb}}}}{{{f{{Al{Aj}}}}}d}{{{f{BEl}}{C`{{f{An}}}}}d}{{{f{CH`}}}d}{{{f{BKh}}}d}{{{f{BBl}}}d}{{{f{BCf}}}d}{{{f{BNf}}}d}{BIjBIj}{{{f{B`}}}{{Bd{{l{Ah}}Bb}}}}{{{f{AIb}}}{{Bd{{l{Ah}}Bb}}}}27{{{f{BEl}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{Ah}}Bb}}}}{{BIjc}BIj{{AOj{BIj}}}}54{{{f{AId}}}{{Bd{{l{Ah}}Bb}}}}6{{{f{CJb}}}{{l{Ah}}}}{{{f{CJd}}}{{l{Ah}}}}{{{f{C@`}}}{{Bd{{l{Ah}}Bb}}}}999{{{f{BKh}}}{{l{Ah}}}}::0{{{f{Oh}}}d};{{{f{A@n}}}d}`{{{f{B`}}}d}{{{f{{Ln{AEl}}}}}d}{{}d}{{{f{CKn}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CCb}}{f{CBn}}}{{Bd{bBb}}}}4?{{{f{CJb}}}{{l{Jf}}}}{{{f{CJd}}}{{l{Jf}}}}{{{f{C@`}}}{{Bd{{l{Jf}}Bb}}}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{AFn{cgAFl}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{BEf}}}{{AFn{{Fn{{Cf{CL`}}}}DAnAFl}}}}{{{f{BBl}}}{{`{{Ch{}{{Cb{{Gh{{f{{B@h{B@f}}}}{f{Ed}}}}}}}}}}}}{{{f{BBl}}}{{`{Kh}}}}{{{f{ClBBl}}}{{`{Kh}}}}11{{BKdBIjd}BIj}{{BDlBDlccBHn}BDl{{Hd{{Al{BIj}}}}}}{{BKfBIjd}BIj}{{{f{COn}}{f{BAf}}eeBHn}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{{f{DB`}}{f{BAf}}{f{An}}{f{An}}eeCCh{C`{If}}}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{BDlBJd}{{{f{DBb}}{f{An}}d}{{Bd{{l{Af}}Bb}}}}{{{f{DBb}}{f{{l{Af}}}}d}{{Bd{{l{Af}}Bb}}}}{{BJdd}BJd}`{CLhBIj}{DBdBIj}{{{f{CHb}}}{{f{{C`{{Fn{DBf}}}}}}}}``{{}BIj}{BDlBDl}{BKfBIj}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{BIjBIj}{DBhBDl}4{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}d{D@bOf}BJb}`{{BDlBDlcc}BDl{{AOj{BIj}}}}{{{f{COn}}{f{BAf}}ee}{{Bd{BAfBb}}}{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{BJdc}BJd{{Hd{{Al{BIj}}}}}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}c}e{}{}{}}{{c{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}<{{{f{BKh}}}Ff};9{{{f{BEf}}}Ff}{{{f{BBl}}}Ff}{{{f{BCf}}}Ff}{{BDlIh}BDl}{{{f{BKh}}Ff}B`}{{{f{BNf}}}d}`{BIjBKf}{cBIjDBj}{DBjBIj}{BElBIj}{DBlBIj}{CGjBIj}{{BIjc}BIj{{AOj{BIj}}}}0``{{C@hd}C@h}{{{CId{c}}d}{{CId{c}}}BIh}```{BIjBIj}{{{f{DBb}}}{{l{El}}}}0{{{f{DBb}}{f{{Al{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{DBb}}GdCKb}{{Bd{{l{j}}Bb}}}}{{{f{DBb}}Gdd}{{Bd{B`Bb}}}}{{{f{DBb}}{f{{l{Af}}}}d}{{Bd{{l{Af}}Bb}}}}4{{{f{DBb}}}{{Bd{B`Bb}}}}{{{f{DBb}}}B`}01{{{f{DBb}}}{{Bd{{l{El}}Bb}}}}{{{f{DBb}}}{{l{j}}}}{{{f{DBb}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{DBb}}GdFf}{{l{j}}}}{{{f{DBb}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{DBb}}Aj}B`}7{{{f{DBb}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}{{BIjc}BIj{{AOj{BIj}}}}{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}d{D@bOf}BJb}21``````{{{f{ALn}}{f{ALn}}}{{Bd{{Gh{ALnALn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Ln{ce}}}}}{{f{Clc}}}{DBnOf}{BJbACf}}{{BDlcCGh{C`{{Ln{CMd}}}}{C`{{f{An}}}}}BDl{{Dh{BAf}{{Dd{{Bd{BAfBb}}}}}}HnI`}}{{DBdc}BIj{{Dh{{f{An}}}{{Dd{{Bd{EfBb}}}}}}HnI`}}{{BIjc{BJl{{Ln{BJj}}}}}BIj{{Dh{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BIjBIjc{BJl{{Ln{BJj}}}}}BIj{{Dh{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BIj{f{Clc}}{f{Cl}}}{{Bd{BIjBb}}}{{Dn{BIj{f{Cl}}}{{Dd{{Bd{BIjBb}}}}}}}}{{{f{BKj}}{C`{{f{Ef}}}}}{{Bd{NjBb}}}}{{{f{BKj}}c}{{Bd{NjBb}}}{{AA`{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BJl{{Ln{BJj}}}}}{{Dh{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}HnI`}}{c{{BJl{{Ln{BJj}}}}}{{Dh{{f{{Al{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}HnI`}}{{BIjc}BIj{{Dn{BIj}{{Dd{BIj}}}}}}{c{{BJl{{Ln{BJj}}}}}{{Dh{{f{Nj}}}{{Dd{{Bd{NjBb}}}}}}HnI`}}{{DBd{Ln{Dh}}}BIj}{c{{BJl{{Ln{BJj}}}}}{{Dh{{f{{Al{Nj}}}}}{{Dd{{Bd{NjBb}}}}}}HnI`}}:{{ce{BJl{{Ln{BJj}}}}}BIj{{Dh{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}{{Hd{{Al{BIj}}}}}}{{BIjc{f{{Al{BIj}}}}{BJl{{Ln{BJj}}}}}BIj{{Dh{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BIjBK`{f{{Al{BIj}}}}dd}BIj}2{{{f{BKj}}}{{Bd{NjBb}}}}{{CAhc}CAh{{Dh{CAj}{{Dd{CAj}}}}}}1111{CGjCGj}{{{C`{{f{{Al{Ff}}}}}}{f{BCf}}{C`{{f{{Al{B`}}}}}}{C`{{f{DC`}}}}}BAf}{{{C`{{f{{Al{Ef}}}}}}{f{BBl}}{C`{{f{{Al{B`}}}}}}d}{{C`{{Fn{Ff}}}}}}{{{f{An}}}BIj}{BKdBIj}{BDlBDl}{BKfBIj}{{{f{AIf}}}{{C`{c}}}{}}{BIjBIj}{{{f{DCb}}}Lf}{{{f{BKh}}}{{Bd{LfBb}}}}``754{{{f{AIf}}}{{C`{Lh}}}}3{{{f{BKh}}}{{C`{Lh}}}}9876{{{f{AIh}}}{{C`{c}}}{}}51{{{f{DCd}}}Lf}4``{{{CLl{c}}{C`{CIf}}}{{CLl{c}}}BIh}{{{f{ClBBl}}BBl}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBBl}}{f{BBl}}}b}````{{{f{CJf}}}{{l{Jl}}}}`{{{f{C@`}}}{{Bd{{l{Jf}}Bb}}}}1`{{{f{An}}}BIj}{BKdBIj}{BDlBDl}{BKfBIj}{{{f{AIf}}}{{C`{c}}}{}}{BIjBIj}{{{f{AIf}}}{{C`{{Gh{cc}}}}}{}}```{{{f{DCb}}}Lf}{{{f{BKh}}}{{Bd{LfBb}}}}``{{{f{DAf}}}{{l{Mn}}}}{{{f{CJd}}}{{l{Mn}}}}{{{f{C@`}}}{{Bd{{l{Mn}}Bb}}}}`=```6{{{f{CJb}}}{{l{Mn}}}}21`{{{f{BEl}}}Gd}{{{f{BEl}}}d}{{{BIl{}{{Dd{c}}}}{f{B`}}}c{}}{{BElGd}BEl}{{BIjBIj}}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BKh}}}Ff}{{{f{CHj}}}{{C`{Ff}}}}{{{f{C@d}}}{{C`{Ff}}}}{{{f{C@h}}}{{C`{Ff}}}}`````{{{BMj{c}}Ff}{{BMj{c}}}BMn}`{BKdBIj}{BKfBIj}{{{f{AGn}}}{{Bd{FfBb}}}}{BIjBIj}{{{f{BKh}}}{{Bd{FfBb}}}}{{{f{BKh}}}{{f{An}}}}{BIjDBd}````33`{{{f{DAf}}}{{l{Jf}}}}{{{f{CJd}}}{{l{Jf}}}}{{{f{C@`}}}{{Bd{{l{Jf}}Bb}}}}{{{f{CJf}}}{{l{Jl}}}}{{{f{BEl}}}Gd}`{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}d{CLbOf}BJb}{{{f{CCb}}}d}{BEl}{BIj}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{BEl}}}d}{{DCfFf}{{C`{Ff}}}}{{BIjc}BIj{{AOj{BIj}}}}0{{{f{BKj}}}{{Bd{NjBb}}}}{{}c{}}{cCLjBKn}{cCIjBMn}2{{{f{An}}c}DCh{}}{c{{ALb{c}}}{}}{BDlBJd}{c{{BId{c}}}BIh}{cC@d{{Hd{CNb}}}}{cC@h{{Hd{CNb}}}}{c{{BMj{c}}}BMn}{{{f{{Al{Nj}}}}}BKj}{c{{CLl{c}}}BIh}{c{{BKl{c}}}BKn}{c{{CLn{c}}}BMn}{{}CIh}{c{{BN`{c}}}BMn}{{}CIl}{GdBEl}{c{{CM`{c}}}BMn}{c{{CMb{c}}}BIh}{{BElBElBEl}CAf}{c{{CId{c}}}BIh}{{DCj{Ln{CHb}}{Ln{BCf}}Ff{C`{{Fn{Ff}}}}{C`{{Ln{BIf}}}}{C`{DC`}}Ffd{C`{{Fn{B`}}}}CCl}{{Bd{BNfBb}}}}{c{{BNd{c}}}BIh}{c{{BNh{c}}}{BMnBMn}}{CBnBHn}{c{{BJl{c}}}{}}{{BIjBIjBIj}CFh}{{}CFj}{{{f{An}}{Fn{Nj}}{BJl{{Ln{BJj}}}}c}BOdBL`}{c{{Ln{c}}}{}}{{AFf{Fn{{Cf{Cd}}}}{C`{Hj}}}BEf}{{}BBl}{{cAFfd}AOl{{AOj{Ef}}}}{e{{Ln{c}}}{}{{AA`{{f{{CKd{c}}}}}{{Dd{c}}}}}}{AFfBEf}{{{f{AIj}}FfFf}{{l{c}}}Db}{{{f{BKh}}FfFf}B`}{{{f{An}}}CAn}{{ce}{{Ln{ce}}}{}BJb}{{{f{BBl}}Ff{B@h{B@f}}Ed}{{Bd{BBlBb}}}}{{Gd{f{An}}}{{Bd{B`Bb}}}}{EfCAn}{{AFfFf}BEf}{{{Ln{{Al{CIf}}}}}C@d}{{{Ln{{Al{CIf}}}}}C@h}{AjCAn}``{{}{{Ln{{BMd{c}}}}}{}}{c{{Ln{{BMd{e}}c}}}BJb{}}{Ff{{Ln{{Al{{BMd{c}}}}}}}{}}{{Ffc}{{Ln{{Al{{BMd{e}}}}c}}}BJb{}}3210{{{f{ClDCl}}}C`}{{{f{ClD@j}}}C`}{{{f{ClBNl}}Ff}{{Bd{{C`{{Fn{BAf}}}}Bb}}}}{{{f{ClBMh}}Ff}{{Bd{{C`{{Fn{BAf}}}}Bb}}}}{{{f{ClBNf}}Ff}{{Bd{{C`{{Fn{BAf}}}}Bb}}}}{{{f{BIj}}{f{Cl{BF`{{f{BIj}}}}}}}b}{{BIj{f{Cl{BF`{BIj}}}}}b}{BIjBIj}0{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}0{GdBIj}`{{}A@n}{{}Oh}`{{{f{BKh}}}Ff}{BDlBDl}6`````{{{f{Cl{BNd{c}}}}}{{Bd{FfBb}}}BIh}````{{{f{AHf}}}{{Bd{{Gf{Gd}}Bb}}}}{{BJdc}BJd{{Hd{{Al{BIj}}}}}}`{{BDl{f{Cl{BHh{BHf}}}}{f{Cl{BHh{BHj}}}}}{{Bd{BHdBb}}}}`{{BIjc}BIj{{AOj{BIj}}}}{{{f{CJb}}}{{l{Nf}}}}{{{f{CJd}}}{{l{Nf}}}}{{{f{C@`}}}{{Bd{{l{Nf}}Bb}}}}{{{f{C@`}}}{{Bd{{l{Jf}}Bb}}}}{{CEdc}BIj{{AOj{BIj}}}}{{CEhc}BIj{{AOj{BIj}}}}`{{BIje}BIj{{AOj{BIj}}ACf}{{Hd{{Al{c}}}}}}{{BIje{C`{{Gh{eEj}}}}CGd}BIj{{AOj{BIj}}ACf}{{Hd{{Al{c}}}}}}```{{{f{An}}}BEl}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jj{JhJf}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jj{KjJl}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}Jn}{{Jj{K`Jl}}}}``{{{f{BEl}}{f{BEl}}}{{C`{BA`}}}}{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}{{C`{BA`}}}{D@bOf}BJb}`{{{f{CHj}}}{{f{{Al{CIf}}}}}}{{{f{C@d}}}{{f{{Al{CIf}}}}}}{{{f{C@h}}}{{f{{Al{CIf}}}}}}``{{}BIj}{c{{DCn{{Ln{c}}}}}{}}{{ce}{{DCn{{Ln{ce}}}}}{}BJb}````{{BIjc}BIj{{AOj{BIj}}}}```{{DBd{f{An}}}BIj}0{{{f{BAf}}{f{BAf}}d}{{Bd{{Gh{{A@j{{Fn{Ih}}{Fn{Oh}}}}{A@j{{Fn{A@n}}{Fn{Oh}}}}}}Bb}}}}`{{{f{DCb}}}Lf}{BIjBIj}{BDl{{Bd{{Gh{BAfBAf}}Bb}}}}```{{{f{{Ln{c}}}}{f{ClDD`}}}b{AKjOf}}{{{f{{Ln{ce}}}}{f{{Ln{ce}}}}}dOfBJb}{{{f{An}}BIjO`}BIj}{{BDlBIjO`}BDl}{{{f{AIh}}LhO`}{{Bd{{C`{c}}Bb}}}{}}{{BIjBIjO`}BIj}{{{f{DCd}}LhO`}{{Bd{LfBb}}}}{{{f{BKh}}LhO`}{{Bd{LfBb}}}}{{{f{CJb}}}{{l{Mn}}}}{{{f{CJd}}}{{l{Mn}}}}{{{f{C@`}}}{{Bd{{l{Mn}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BBh}}}{}CLf{}}````{{{f{DDb}}CDf{C`{J`}}}B`}{{BIjCDf{C`{J`}}}BIj}{{{f{Cl{Ln{AEl}}}}{f{Cl{Al{Aj}}}}}{{Bd{FfBBh}}}}{{{f{Cl{Ln{AEl}}}}DDd}{{Bd{bBBh}}}}{{{BNd{c}}CCl}{{BNd{c}}}BIh}{{{f{Cl{Ln{AEl}}}}{f{Cl{Fn{Aj}}}}}{{Bd{FfBBh}}}}{{{f{Cl{Ln{AEl}}}}{f{ClEf}}}{{Bd{FfBBh}}}}{{{f{Clc}}}{{Bd{eBBh}}}{}DDf}{{{f{Cl{Ln{AEl}}}}{f{Cl{Al{DDh}}}}}{{Bd{FfBBh}}}}{{{f{CHj}}}d}{{{f{BKh}}}B`}{{{f{C@d}}}d}{{{f{C@h}}}d}````{{ce}BIj{{Dh{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ACf}{{Hd{{Al{BIj}}}}}}{{{f{AIl}}}B`}0{{{BIl{}{{Dd{c}}}}{f{B`}}}c{}}{{BIjBIj}}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBBl}}{f{An}}}{{C`{Ed}}}}{{{f{ClBKh}}{f{An}}}b}{{BDlei}BDl{{Hd{An}}}{{H`{}{{Cb{c}}}}}{{Hd{An}}}{{H`{}{{Cb{g}}}}}}{{{f{ClBBl}}{f{An}}{B@h{B@f}}}{{C`{{B@h{B@f}}}}}}{{CLh{Fn{Ef}}}BIj}{{cBIj}BIj{{AOj{BIj}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BIjc}BIj{{AOj{BIj}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BMf}}{f{An}}{f{An}}}{{Bd{{l{Af}}Bb}}}}{{BIjcc}BIj{{AOj{BIj}}}}1{{{f{BKj}}{C`{Ed}}}{{Bd{NjBb}}}}{{{f{BMf}}{f{An}}{f{An}}Ff}{{Bd{{l{Af}}Bb}}}}3{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{BIjcc{C`{c}}{C`{Ed}}}BIj{{AOj{BIj}}}}{{{f{{Jj{K`Jl}}}}{C`{{f{An}}}}{f{{l{Af}}}}CHh}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{ClBBl}}Ff}b}{{BIj{f{{Al{Gd}}}}CGf}BIj}{{{f{CNb}}}CIf}`{{{f{AIn}}}AIn}{{{f{BKh}}}B`}{BKdBIj}{BDlBDl}{BKfBIj}{BIjBIj}`{{BJdc}BJd{{Hd{{Al{BIj}}}}}}{{{f{D@n}}{Fn{B`}}{f{BDn}}}{{Bd{{Gh{B`{Fn{B`}}Bj}}Bb}}}}{{BDlBIjcBDn}BJ`{{Hd{{Al{BIj}}}}}}{{BIjBDn}BIj}{{{f{AJ`}}{f{Dh}}Ob}{{Bd{B`Bb}}}}{{BIj{Ln{Dh}}{BJl{{Ln{BJj}}}}Ob}BIj}{{{f{BKh}}{f{Dh}}Ob}{{Bd{B`Bb}}}}{{BIjFfc}BIj{{Dn{{f{Cl{l{Eb}}}}}{{Dd{{C`{Lh}}}}}}HnI`Dj}}{{{f{DDj}}Ob}{{Bd{B`Bb}}}}{{BIjOb}BIj}{{{f{DDj}}{f{B`}}C@l}{{Bd{B`Bb}}}}{{BIjBIjC@l}BIj}32102032103{{BIjO`LhOb}BIj}2{{BIjBIjO`LhC@l}BIj}543254325432{{{f{DDl}}{f{{l{Af}}}}{C`{{f{ALh}}}}}{{Bd{DDlBb}}}}{{{f{BOn}}Ih}{{Bd{B`Bb}}}}{{BIjIh}BIj}{{{f{CAf}}Gd{C`{{f{ALh}}}}}{{Bd{GdBb}}}}0{{{f{BOn}}Nb}{{Bd{B`Bb}}}}{{BIjNb}BIj}2````{{{f{CHj}}}{{C`{{f{DC`}}}}}}{{{f{C@d}}}{{C`{{f{DC`}}}}}}{{{f{C@h}}}{{C`{{f{DC`}}}}}}``````{{{f{DBb}}{l{j}}}{{l{j}}}}{{}{{BJl{{Ln{BJj}}}}}}{{BIjBIjdd{C`{J`}}}BIj}0`{{{f{BJf}}DDn}{{Bd{BAfBb}}}}{{cC@f}{{Bd{BDlBb}}}{{Hd{CNb}}}}{{{Ln{{Al{CIf}}}}C@f}{{Bd{BDlBb}}}}{{cC@j}{{Bd{BDlBb}}}{{Hd{CNb}}}}{{{Ln{{Al{CIf}}}}C@j}{{Bd{BDlBb}}}}{{DE`{f{{Al{Ih}}}}e}{{Bd{B`Bb}}}Dj{{H`{}{{Cb{{C`{c}}}}}}}}{{{f{AJb}}c{C`{e}}}{{Bd{AJbBb}}}{{H`{}{{Cb{Ih}}}}}{}}{{{f{AJb}}ci}{{Bd{AJbBb}}}{{H`{}{{Cb{Ih}}}}}{}{}{{Dh{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{ClBDl}}}{{Bd{{Ln{BBl}}Bb}}}}{{{f{Cl{CLl{c}}}}}{{Bd{{Ln{BCf}}Bb}}}BIh}{{{f{Cl{BKl{c}}}}}{{Bd{BBlBb}}}BKn}{{{f{BNf}}}{{f{{Ln{BCf}}}}}}{{{f{Cl{BNd{c}}}}}{{Bd{{Ln{BCf}}Bb}}}BIh}{{{f{BJf}}{C`{Ff}}}{{Bd{{Ln{BBl}}Bb}}}}{{{f{CHb}}}{{f{DEb}}}}``````{{{f{ClBDl}}{f{Cl{BHh{BHf}}}}{f{Cl{BHh{BHj}}}}}{{Bd{{Ln{BBl}}Bb}}}}`{{{f{DAf}}}{{l{Mn}}}}{{{f{CJd}}}{{l{Mn}}}}{{{f{C@`}}}{{Bd{{l{Mn}}Bb}}}}`{{{f{CJf}}}{{l{Jl}}}}`{{{f{Cl{Ln{AEl}}}}DEd}{{Bd{J`BBh}}}}{{BDlc}BDl{{Hd{{Al{BIj}}}}}}0````{{{f{AJb}}{f{{l{Ah}}}}{C`{c}}}{{Bd{AJbBb}}}{}}{{{f{BDl}}{BHh{BHf}}{BHh{BHj}}}b}{{{f{ClBBl}}{f{An}}Ed}{{C`{Ed}}}}{{{f{ClBBl}}FfEd}{{C`{Ed}}}}{{{BNd{c}}d}{{BNd{c}}}BIh}{{{BNh{c}}d}{{BNh{c}}}BMn}{{{CLl{c}}d}{{CLl{c}}}BIh}{{{BKl{c}}d}{{BKl{c}}}BKn}{{{CMb{c}}d}{{CMb{c}}}BIh}4{{CLjd}CLj}{{BIjKn}BIj}{{{f{ClBEf}}{C`{Hj}}}b}{{{f{AJd}}Gd}{{l{c}}}Db}{{{f{BKh}}Gd}B`}{{BKdBIj}BIj}{{BDlc}BDl{{AOj{BIj}}}}{{BKfBIj}BIj}{{BIjBIj}BIj}{{{f{AJf}}Gdc}{{l{e}}}{}Db}{{BDlce}BDl{{AOj{BIj}}}{{AOj{BIj}}}}{{BIjce}BIj{{AOj{BIj}}}{{AOj{BIj}}}}{{{f{ClBBl}}{f{An}}}{{C`{Ed}}}}{{{f{ClBBl}}Ff}{{C`{{Gh{{B@h{B@f}}Ed}}}}}}{{{f{BHn}}}d}{BIjBIj}{{{f{ClABd}}}b}{{{f{ClBKh}}}b}{{BIj{C`{J`}}}BIj}``{{BDlcCBb}{{Bd{bBb}}}{{Hd{CNb}}}}{{BDlcCBl}{{Bd{bBb}}}{{Hd{CNb}}}}{{BDlcCCd}{{Bd{bBb}}}{{Hd{CNb}}}}{{BDlcCDd}{{Bd{bBb}}}{{Hd{CNb}}}}`````{{{f{BKh}}GdFf}B`}{{BDlGdIh}BDl}{{BKfBIjBIj}BIj}>{{{f{ClBEf}}FfFf}b}0```{{{f{AJh}}FfFf}AJh}{{{f{c}}FfFf}e{}{}}1022{{BEfFfFf}BEf}0`{{{f{AGl}}d}{{l{c}}}Db}{{BKdEj}BIj}{{BDlcEn}BDl{{BEb{{B@h{B@f}}}}}}{{BKfEj}BIj}{{BIjEj}BIj}{{BIjeEn}BIj{{AOj{BIj}}ACf}{{Hd{{Al{c}}}}}}{{BDlcEn}BDl{{Hd{{Al{BIj}}}}}}{{{f{AGl}}Ej}{{l{c}}}Db}{{{f{BKh}}Ej}{{Bd{B`Bb}}}}{{{f{{Ln{c}}}}}{{C`{{f{AKj}}}}}{AKjOf}}{{{f{BMf}}{f{{l{Af}}}}}{{l{j}}}}{{{f{BKh}}Gd}{{Gh{B`B`}}}}{{{f{BEf}}Ff}{{Gh{{Cf{Cd}}{Cf{Cd}}}}}}0{{{f{BMf}}{f{{l{Af}}}}Ff}{{Bd{ALlBb}}}}0{{{f{{l{Af}}}}{f{{l{Af}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Dd{c}}}}}}4{{{f{{l{Af}}}}{f{{l{Af}}}}Ffed}{{Bd{ALlBb}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Dd{c}}}}}}2{BIjBIj}`{{{f{CIb}}{f{{Al{Aj}}}}}{{l{Ah}}}}{{{f{CIb}}{f{{l{n}}}}}{{l{Ah}}}}`{{BKdAj}BIj}{{BDlAj}BDl}{{BKfAj}BIj}{{{f{AJj}}Aj}{{C`{Lh}}}}{{BIjAj}BIj}{{{f{BKh}}Aj}{{C`{Lh}}}}{{{f{DEf}}Aj}Lf}{{{f{BKh}}Aj}{{Bd{LfBb}}}}{{IhIh}Oh}{BIjDEh}{{{f{BMf}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{Af}}}}{f{An}}d}{{l{Af}}}}{{{f{BMf}}}{{l{El}}}}0{{{f{BMf}}}{{l{Af}}}}{{{f{BMf}}{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}4````{{{f{C@`}}{f{An}}}{{Bd{B`Bb}}}}`{{BIjEd}BIj}`{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}707070{{{f{BMf}}{f{{l{Af}}}}}{{l{Af}}}}10{{{f{{Ln{ce}}}}}FfOfBJb}{BIjCLh}{{{BIl{}{{Dd{c}}}}{f{B`}}}c{}}{{BIjBIj}}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}{{BJdc}BJd{{Hd{An}}}}{{DBd{f{An}}}BIj}{{{f{BHn}}}{{f{An}}}}`1{{{f{An}}}BIj}{BKdBIj}{BDlBDl}{BKfBIj}{{{f{AIf}}}{{C`{c}}}{}}{BIjBIj}{{{f{DCb}}}Lf}{{{f{BKh}}}{{Bd{LfBb}}}}{{}{{BJl{{Ln{BJj}}}}}}{{{f{Clc}}i}{{Bd{gBBh}}}{}{}{}{{AA`{{f{Cle}}}{{Dd{g}}}}}}{{BDlIh}BDl}{{BJ`{C`{Ff}}}BDl}{{BKfBIj}BIj}{{BIj{C`{Ff}}}BIj}{{{f{AJl}}{f{c}}}{{Bd{AJlBb}}}Of}{{{f{BKh}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DEj}}{f{{Al{Oh}}}}Kn}DEj}{{{f{DEj}}{f{{Al{Oh}}}}}DEj}{{{f{BKh}}{f{{Al{Ih}}}}}{{Bd{B`Bb}}}}{{{f{BKh}}{f{{Al{Ih}}}}}B`}{{{f{AJn}}{f{c}}}AJnOf}{{{f{BKh}}{f{{l{El}}}}}B`}{{{f{ClBEf}}}{{C`{Hj}}}}{{BIjBIjBIj}BIj}{{CEbc}CEd{{AOj{BIj}}}}{{CEfc}CEh{{AOj{BIj}}}}`{{BIjBIjBElCA`}BIj}```{{{f{C@`}}Jn}{{Bd{{l{Jl}}Bb}}}}{BDl{{Bd{DElBb}}}}{CE`{{Bd{DElBb}}}}1{{{f{CGj}}}{{C`{If}}}}{{BKfFf}BIj}{{{f{BBl}}d}BCf}{{{f{BEf}}}{{Cf{Cd}}}}{{{f{AK`}}}{{Fn{{f{{Al{Aj}}}}}}}}{{{f{BDl}}d}{{Bd{EfBb}}}}{{{f{DEn}}{C`{{f{An}}}}d}{{Bd{BAfBb}}}}{{{f{BIb}}{C`{{f{An}}}}d}{{Bd{BAfBb}}}}{{{f{BIj}}{f{BBl}}D@d}{{Bd{NjBb}}}}{{{f{BMf}}{f{{l{El}}}}d}{{Bd{{l{Jl}}Bb}}}}{BKdBIj}{{{f{BMf}}}{{l{Af}}}}{DBdBIj}{{{f{A@n}}}{{C`{Ih}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BIjBIj}{{{f{BKj}}}{{Bd{NjBb}}}}{{{f{C@`}}{f{An}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}000000000000{{{f{ClBBl}}{f{BBl}}}{{Bd{dBb}}}}`887{{{f{CDd}}c}{{BNh{c}}}BMn}``{{BDlIhcEn}BDl{{Hd{{Al{BIj}}}}}}{{{f{BEf}}{f{BEf}}}Hj}{{{f{BEf}}f}Hj}10{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}g{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}c}g{}{}{}}{{c{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}g{}{}{}}{{{f{DF`}}{C`{{f{ALh}}}}{f{{l{Af}}}}}{{Bd{DF`Bb}}}}{{{f{BEl}}Gd{C`{{f{ALh}}}}ceg}{{Bd{GdBb}}}{{Dh{Gd}{{Dd{Gd}}}}}{{Dh{Gd}{{Dd{ALf}}}}}{{Dh{ALf}{{Dd{Gd}}}}}}{{{f{BEl}}Gd{C`{{f{ALh}}}}}{{Bd{GdBb}}}}{{{f{CAf}}Gd{C`{{f{ALh}}}}}{{Bd{GdBb}}}}10`10{g{{Bd{AMbe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{AFfg}{{Bd{AMde}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{AOd{{Bd{eg}}}{}{{AMb{c}}AKf}{}}0{{AOdAFf}{{Bd{eg}}}{}{{AMd{c}}AKf}{}}0{{ACn{f{An}}}{{Bd{{l{c}}e}}}Db{}}{{AD`{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{AD`{f{An}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{If{{Bd{CGjBb}}}}1111{{{Ln{{Al{c}}e}}}{{Bd{{Ln{{A@b{c}}e}}}}}{}BJb}22222222222222{DAl{{Bd{CHbBBb}}}}{{{f{BBl}}{f{An}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BBl}}Ff}{{Bd{{Gh{{f{{B@h{B@f}}}}{f{Ed}}}}Bb}}}}{{{f{BBl}}{f{An}}}{{Bd{NjBb}}}}{{{f{BBl}}{f{An}}}{{Bd{{Gh{Ff{f{{B@h{B@f}}}}{f{Ed}}}}Bb}}}}{{{f{ClBBl}}{f{An}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{D@f}}{f{An}}}{{Bd{FfBb}}}}99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{CAh{C`{CIf}}}{{Bd{{BId{AEl}}Bb}}}}{{{f{BKj}}c}{{Bd{NjBb}}}{{AA`{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BKj}}c}{{Bd{NjBb}}}{{AA`{{f{{Al{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BIjc}{{Bd{BIjBb}}}{{Dn{BIj}{{Dd{{Bd{BIjBb}}}}}}}}{{{f{BKj}}c}{{Bd{NjBb}}}{{AA`{{f{Nj}}}{{Dd{{Bd{NjBb}}}}}}}}{{DCfFf}{{Bd{FfBb}}}}{Aj{{Bd{CDjBb}}}}{Ih{{Bd{CDlBb}}}}{Nb{{Bd{CDnBb}}}}{c{{Bd{{Ln{c}}DFb}}}{}}{{AFf{Fn{{Cf{Cd}}}}{C`{Hj}}}{{Bd{BEfBb}}}}{{ce}{{Bd{{Ln{ce}}DFb}}}{}BJb}{{}{{Bd{{Ln{{BMd{c}}}}DFb}}}{}}{c{{Bd{{Ln{{BMd{e}}c}}DFb}}}BJb{}}10`{c{{Bd{{DCn{{Ln{c}}}}DFb}}}{}}{{ce}{{Bd{{DCn{{Ln{ce}}}}DFb}}}{}BJb}{{{f{BCf}}{f{{Al{Ff}}}}}{{Bd{BCfBb}}}}{{{f{BL`}}{f{Cl{Fn{Aj}}}}}{{Bd{bBb}}}}{{{Ln{ce}}}{{Bd{c{Ln{ce}}}}}{}BJb}``{{{f{c}}}A@l{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{An}}}}`{{{f{AGn}}}{{Bd{AGnBb}}}}{BKdBIj}{{BDl{C`{{Fn{Ef}}}}BCb}BDl}{BKfBIj}{BIjBIj}{{{f{BKh}}}{{Bd{B`Bb}}}}4321{{BDle}BDl{{Hd{An}}}{{H`{}{{Cb{c}}}}}}{{BDlBEj}BDl}{{{Ln{{AFb{c}}}}}{{Bd{cb}}}Hn}{{{Ln{ce}}}cACfBJb}{{{f{ClCAh}}{f{DFd}}}b}6{{{f{DFf}}c{f{An}}BEl}{{Bd{BAfBb}}}{{BEb{Ef}}}}0{{{BNd{c}}d}{{BNd{c}}}BIh}```{{BJdCCb}BJd}`{{{f{BEf}}}{{C`{{f{Hj}}}}}}0{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}cACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{CKn}}ddEfd}{{Bd{BAfBb}}}}{{BIjddEfd}BIj}`2{{{f{BEf}}}{{f{{Al{{Cf{Cd}}}}}}}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}gACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{BEf}}}DAn}{{BKdAj}BIj}{{BDlAj}BDl}{{BKfAj}BIj}{{{f{AJj}}Aj}{{C`{Lh}}}}{{BIjAj}BIj}{{{f{BKh}}Aj}{{C`{Lh}}}}{{{f{DEf}}Aj}Lf}{{{f{BKh}}Aj}{{Bd{LfBb}}}}`{{{f{DFh}}Ol{f{Cl{Fn{J`}}}}}{{Bd{bBb}}}}{{{f{DFh}}Ol{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}`{{{f{{Ln{{AFb{c}}}}}}g}{{Bd{eb}}}Hn{}{{AA`{{f{c}}}{{Dd{e}}}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Ln{ce}}}}}FfOfBJb}{{{f{CJb}}}{{l{Mn}}}}{{{f{CJd}}}{{l{Mn}}}}{{{f{C@`}}}{{Bd{{l{Mn}}Bb}}}}210{{{f{CAd}}}{{C`{Ih}}}}{{{f{BEl}}}Gd}`{{{f{BEl}}}d}`{cCEb{{AOj{BIj}}}}{{CEdc}CEf{{AOj{BIj}}}}{{CEhc}CEf{{AOj{BIj}}}}```{{BJdBDl}BJd}{{CFhBIj}CFh}{{C@h{C`{{DAh{Ff}}}}}C@h}{{{BMj{c}}{DAh{Ff}}}{{BMj{c}}}BMn}{{{CMb{c}}{DAh{Ff}}}{{CMb{c}}}BIh}{{C@dd}C@d}{Ffc{}}0{FfBBl}{{{CId{c}}{C`{{DAh{Ff}}}}}{{CId{c}}}BIh}{{CAhFf}CAh}{{C@d{C`{CHl}}}C@d}{{BDld}BDl}{{BHnCBj}BHn}{{BDlBIj}BDl}{{{f{ClBBl}}{B@h{B@f}}Ed}{{C`{Ed}}}}{{BDlc}BDl{{Hd{{Al{BIj}}}}}}{{{CLl{c}}{C`{{Fn{Ef}}}}}{{CLl{c}}}BIh}{{{BKl{c}}{C`{{Fn{Ef}}}}}{{BKl{c}}}BKn}{{{BNd{c}}{C`{{Fn{Ef}}}}}{{BNd{c}}}BIh}{{CAh{C`{{Ln{{Al{Ef}}}}}}}CAh}`4{{C@d{C`{{f{An}}}}}C@d}{{CAj{C`{c}}}CAj{{AOj{CAn}}}}{{{CLn{c}}{C`{CC`}}}{{CLn{c}}}{}}{{CIh{C`{CC`}}}CIh}{{{BN`{c}}{C`{CC`}}}{{BN`{c}}}BMn}{{CIl{C`{CC`}}}CIl}{{{BNh{c}}CDh}{{BNh{c}}}BMn}{{BDlc}BDl{{Hd{{Al{BDl}}}}}}{{{BNh{c}}{C`{Ff}}}{{BNh{c}}}BMn}{{{BMj{c}}{C`{Ef}}}{{BMj{c}}}BMn}0{{CFhBIj}CFh}{{CFjBIj}CFj}{{C@dd}C@d}{{CAjd}CAj}{{{f{BKj}}Ed}{{Bd{NjBb}}}}{{C@d{C`{{Ln{BBl}}}}}C@d}{{CAh{C`{{Ln{{Fn{Ed}}}}}}}CAh}{{C@dCAl}C@d}{{CAjCAl}CAj}{{C@dAj}C@d}{{CAjAj}CAj}{{CIhCIf}CIh}{{CIlCIf}CIl}{{CLh{Fn{BIj}}}BIj}{{{BMj{c}}{C`{Ff}}}{{BMj{c}}}BMn}{{{BMj{c}}{C`{d}}}{{BMj{c}}}BMn}{{CFjBIjBIjBIj}CFj}>>{{CAhd}CAh}{{{CLl{c}}{C`{{Fn{B`}}}}}{{CLl{c}}}BIh}{{{BNd{c}}{C`{{Fn{B`}}}}}{{BNd{c}}}BIh}{{CFhBIjBIjBIj}CFh}4{{CFhBIj}CFh}{{CFjBIj}CFj}{{C@dd}C@d}{{C@hd}C@h}{{{CMb{c}}d}{{CMb{c}}}BIh}{{{CId{c}}d}{{CId{c}}}BIh}9{{C@d{C`{Ff}}}C@d}{{C@h{C`{{DAh{Ff}}}}}C@h}{{CAh{C`{Ff}}}CAh}{{{CM`{c}}DFj}{{CM`{c}}}BMn}{{{CMb{c}}DFj}{{CMb{c}}}BIh}{{{BMj{c}}Ef}{{BMj{c}}}BMn}9?{{AOl{DFl{EfEf}}}AOl}{{BCf{DFl{EfEf}}}BCf}=<<=<;{{CAjd}CAj}>{{CHjc}CHj{{AOj{{C`{Ff}}}}}}9{{C@dc}C@d{{AOj{{C`{Ff}}}}}}{{C@h{C`{Ff}}}C@h}{{C@hc}C@h{{AOj{{C`{Ff}}}}}}{{{CLl{c}}{C`{Ff}}}{{CLl{c}}}BIh}{{{BKl{c}}{C`{Ff}}}{{BKl{c}}}BKn}{{{CId{c}}{C`{Ff}}}{{CId{c}}}BIh}{{{BNd{c}}{C`{Ff}}}{{BNd{c}}}BIh}>1>{{CFjBIj}CFj}{{BDld}BDl}={{C@d{C`{CB`}}}C@d}{{CAj{C`{CB`}}}CAj}{{BDlCGh}BDl}{{CAhCAj}CAh}{{{CId{c}}{C`{e}}}{{CId{c}}}BIh{{AOj{CIf}}}}{{CAh{C`{c}}}CAh{{AOj{CIf}}}}{{CHj{Ln{{Al{CIf}}}}}CHj}{{C@d{Ln{{Al{CIf}}}}}C@d}{{C@h{Ln{{Al{CIf}}}}}C@h}{{{CLn{c}}d}{{CLn{c}}}{}}{{{BN`{c}}d}{{BN`{c}}}BMn}{{{CId{c}}{C`{{Ln{BIf}}}}}{{CId{c}}}BIh}{{{BNd{c}}{C`{{Ln{BIf}}}}}{{BNd{c}}}BIh}={{{CLl{c}}{C`{{Fn{Ff}}}}}{{CLl{c}}}BIh}{{{BKl{c}}{C`{{Fn{Ff}}}}}{{BKl{c}}}BKn}{{{CMb{c}}{C`{{Fn{Ef}}}}}{{CMb{c}}}BIh}{{{CId{c}}{C`{{Ln{{Al{Ef}}}}}}}{{CId{c}}}BIh}{{{BNd{c}}{C`{{Fn{Ff}}}}}{{BNd{c}}}BIh}{{CAh{C`{{Ln{{Fn{Ff}}}}}}}CAh}{{BDld}BDl}{{C@d{C`{Aj}}}C@d}{{{BMj{c}}Aj}{{BMj{c}}}BMn}{{CAj{C`{Aj}}}CAj}{{{BMj{c}}CBf}{{BMj{c}}}BMn}{{C@dd}C@d}{{CAhd}CAh}{{CHjd}CHj}2{{C@hd}C@h}{{{CId{c}}d}{{CId{c}}}BIh}39{{{BNh{c}}{C`{Ff}}}{{BNh{c}}}BMn}{{CHjc}CHj{{AOj{{C`{DC`}}}}}}{{BDl{f{An}}{C`{Ih}}}BDl}{{C@d{C`{DC`}}}C@d}{{C@dc}C@d{{AOj{{C`{DC`}}}}}}{{C@hc}C@h{{AOj{{C`{DC`}}}}}}{{C@h{C`{DC`}}}C@h}{{{CLl{c}}{C`{DC`}}}{{CLl{c}}}BIh}{{{BKl{c}}{C`{DC`}}}{{BKl{c}}}BKn}{{{CId{c}}{C`{{f{ClDC`}}}}}{{CId{c}}}BIh}{{{BNd{c}}{C`{DC`}}}{{BNd{c}}}BIh}{{CAh{C`{DC`}}}CAh}{{{f{BKj}}}{{Bd{NjBb}}}}{{CAhFf}CAh}{{C@d{C`{{Ln{BBl}}}}}C@d}{{C@h{C`{{Ln{BBl}}}}}C@h}{{{CMb{c}}{Ln{BBl}}}{{CMb{c}}}BIh}{{{CId{c}}{Ln{BBl}}}{{CId{c}}}BIh}{{CAh{C`{{Ln{BBl}}}}}CAh}{{C@dc}{{Bd{C@dBb}}}{{Dh{BBl}{{Dd{{Bd{BBlBb}}}}}}}}{{{CMb{c}}{f{BBl}}}{{CMb{c}}}BIh}{{{CId{c}}{f{BBl}}}{{CId{c}}}BIh}3{{CFhBIj}CFh}{{CFjBIj}CFj}{{C@dAj}C@d}{{{BMj{c}}Aj}{{BMj{c}}}BMn}{{CAjAj}CAj}{{BDld}BDl}{{C@dFf}C@d}?0?1{{{BNh{c}}CH`}{{BNh{c}}}BMn}2{{BHn{C`{Ef}}}BHn}{{{BMj{c}}{C`{Ef}}}{{BMj{c}}}BMn}{{CFhJn}CFh}{{CFh{C`{Ef}}}CFh}{{C@dd}C@d}{{CAjd}CAj}108{{BEf{C`{Hj}}}BEf}{{{f{BEf}}{C`{Hj}}}{{Cf{Cd}}}}{{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}{C`{Hj}}}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}?{{CFhBIj}CFh}{BDlBDl}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}{{{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}c}e{}{}{}}10{{c{AAh{}{{AAb{c}}{AAd{e}}{AAf{g}}}}}e{}{}{}}210213210210{{{f{Cl{Ln{AEl}}}}{f{{Al{Aj}}}}}{{Bd{FfBBh}}}}{{{f{Clc}}e}{{Bd{FfBBh}}}{}DDf}{{{f{Cl{Ln{AEl}}}}{f{{Al{DFn}}}}}{{Bd{FfBBh}}}}{{BIjc}BIj{{AOj{BIj}}}}{{{f{CJb}}}{{l{Jf}}}}{{{f{CJd}}}{{l{Jf}}}}{{{f{C@`}}}{{Bd{{l{Jf}}Bb}}}}``{{{f{AKb}}{f{{l{Ah}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BEn}}c}B`{{Dh{{Gh{Ih{f{{BF`{Ih}}}}}}}{{Dd{C`}}}}HnI`}}{{{f{BEn}}c}B`{{Dh{{Gh{Ih{f{{BF`{Ih}}}}}}}{{Dd{}}}}HnI`}}{{{f{{Al{{A@b{Ih}}}}}}c}B`{{Dh{{A@b{Ih}}}{{Dd{C`}}}}HnI`}}{{{f{{Al{{A@b{Ih}}}}}}c}B`{{Dh{{A@b{Ih}}}{{Dd{}}}}HnI`}}{{{f{{Al{c}}}}e{C`{{Ln{AFh}}}}}{{AKn{c}}}{BGfBGh}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{Al{c}}}}{f{Hj}}e{C`{{Ln{AFh}}}}}{{AKn{c}}}{BGfBGh}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{l{c}}}}IhIh}{{l{c}}}Db}{{{f{{Fn{{A@b{Ih}}}}}}{f{{Al{{Cf{Cd}}}}}}}d}{{{f{BGj}}{f{Bj}}}B`}{{BGlBGl}BGl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Dh{ff}{{Dd{}}}}}{{Dh{f}{{Dd{}}}}}{{Dh{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Dh{}{{Dd{}}}}}{{Dh{}{{Dd{}}}}}{{Dh{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AKd{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDb{CdAKf}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AKh{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAKj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DbDbCdAKj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAKj{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAKf}AKj{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AKl{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAKlDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAKf}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}0``{{{f{DG`}}}{{l{El}}}}0{{{f{DG`}}{f{{l{Jl}}}}d}{{Bd{B`Bb}}}}{{{f{DG`}}{f{{l{Af}}}}d}{{Bd{B`Bb}}}}{{{f{DG`}}}B`}{{{f{DG`}}}{{Bd{B`Bb}}}}1{{{f{DG`}}}{{Bd{{l{El}}Bb}}}}{{{f{DG`}}}{{l{Bh}}}}{{{f{DG`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DG`}}Ej}{{Bd{{l{Bh}}Bb}}}}{{{f{DG`}}Aj}{{Bd{B`Bb}}}}5{{{f{DG`}}}{{Bd{{l{j}}Bb}}}}01{{{f{DGb}}}{{f{{l{Bh}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BNnBIj}BIj}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}3{cc{}}{{}Ff}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}2`````````````````````{{{f{ClDGd}}{f{{Al{Aj}}}}ddd}{{Bd{bBb}}}}{{{f{ClDGd}}d}b}<<<<;;;;999988887777{{{f{DGd}}}Ed}77776666{{{f{{Al{Ff}}}}Ff{f{BBl}}{C`{Aj}}CAld}{{Bd{{Fn{DGd}}Bb}}}}6666{DGd{{Bd{B`Bb}}}}6666666655557777```````````{{{f{BLd}}{C`{{f{An}}}}d}{{Bd{{Jj{JhJf}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}}{{Bd{{Jj{JhJf}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}Jndd{C`{{f{Ef}}}}{f{{l{Af}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}Jnd{C`{{f{Ef}}}}{f{{l{Af}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}d}{{Bd{{Jj{KjJl}}Bb}}}}`{{{f{CJb}}}{{l{Mn}}}}{{{f{CJd}}}{{l{Mn}}}}{{{f{CJf}}}{{l{Jl}}}}`{{{f{DAf}}}{{l{Mn}}}}21{{{f{CJb}}}{{l{Ah}}}}{{{f{CJd}}}{{l{Ah}}}}{{{f{CJb}}}{{l{Jf}}}}{{{f{CJd}}}{{l{Jf}}}}55`46576{{{f{DAf}}}{{l{Jf}}}}16{{{f{CJb}}}{{l{Nf}}}}{{{f{CJd}}}{{l{Nf}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jj{JhJf}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jj{KjJl}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}Jn}{{Jj{K`Jl}}}}=<{{{f{DDj}}Ob}{{Bd{B`Bb}}}}{{{f{DDj}}{f{B`}}C@l}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BLd}}{C`{{f{An}}}}d}{{Bd{{Jj{JhJf}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}}{{Bd{{Jj{JhJf}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}Jndd{C`{{f{Ef}}}}{f{{l{Af}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{BLd}}{C`{{f{An}}}}Jnd{C`{{f{Ef}}}}{f{{l{Af}}}}}{{Bd{{Jj{K`Jl}}Bb}}}}{{{f{DGf}}}{{f{{l{Af}}}}}}{{{f{BLd}}{C`{{f{An}}}}d}{{Bd{{Jj{KjJl}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGh}}}DGh}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DGh}}{f{DGh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DGh}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DGh}}{f{Clc}}}bACl}`{{}Ff}{ce{}{}}{{{f{DGh}}{f{An}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DGj{c}}}}}{{DGj{c}}}{ACfA`}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{cc{}}{{{f{An}}}{{C`{DGh}}}}{{}Ff}{ce{}{}}`{{{f{Cl{DGj{c}}}}{f{An}}}C`A`}{{{f{ClDGl}}{f{{Al{Aj}}}}{C`{Jn}}}{{C`{c}}}{}}{{{f{Cl{DGj{Jl}}}}{f{{Al{Aj}}}}{C`{Jn}}}{{C`{Gd}}}}{{{f{Cl{DGj{Jf}}}}{f{{Al{Aj}}}}{C`{Jn}}}{{C`{Nb}}}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{c{C`{Jn}}}{{Bd{{DH`{}{{DGn{e}}}}Bb}}}{}{}}{{DGh{C`{Jn}}}{{Bd{{DGj{Jf}}Bb}}}}{{DGh{C`{Jn}}}{{Bd{{DGj{Jl}}Bb}}}}3{{{f{c}}}A@l{}}:```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CHl}}}CHl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{}CHl}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{Ffb}0{{{f{CHl}}{f{CHl}}}d}{{{f{DHb}}{f{DHb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CHl}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}0{{{f{An}}}{{Bd{DHb}}}}{{{f{An}}g}{{Bd{CHlBb}}}{{Hd{An}}}{{AOj{Ef}}}{{H`{}{{Cb{{Gh{ce}}}}}}}}{{{f{CHl}}{f{Clc}}}bACl}{{}Ff}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}A@l{}}033```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMb{}{{H`{}{{Cb{c}}}}}}0{{AFfe}AMd{}{{H`{}{{Cb{c}}}}}}0{{{f{AMf}}}{{f{Ed}}}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{C`{{f{{Al{c}}}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{ALn}}{f{ALn}}c}{{Bd{ALnBb}}}ANf}{{{f{ANh}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{ANh}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{AOde{}{{AMb{c}}AKf}}0{{AOdAFf}e{}{{AMd{c}}AKf}}0{{{ANb{An}}}Ed}{{{f{ANh}}}{{f{Ed}}}}`{{ANf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fn{c}}AFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{Fn{c}}AFf}{{AKf{}{{AMh{e}}{AMj{c}}{AMl{g}}}}}{AMn{AN`{e}}}ACf{{Gb{}{{Cb{e}}}}IdHnI`}}{{FfcAFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{FfAFf}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{ANh}}Ff}{{Bd{IfBb}}}}{{{f{ANh}}Ff}If}{{}Ed}{{{f{B@j}}Ff}If}4{{B@lEd}{{Bd{LfBb}}}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{AFn{cgAFl}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}{{C`{c}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{{{f{ALn}}{f{ALn}}}{{Bd{{Gh{ALnALn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{AMbe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{AFfg}{{Bd{AMde}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{AOd{{Bd{eg}}}{}{{AMb{c}}AKf}{}}0{{AOdAFf}{{Bd{eg}}}{}{{AMd{c}}AKf}{}}0{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}Ff}cACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}0{{{f{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}}}gACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}{Ffc{}}0{{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}{C`{Hj}}}{{AKf{}{{AMh{c}}{AMj{e}}{AMl{g}}}}}ACf{AMn{AN`{c}}}{{Gb{}{{Cb{c}}}}IdHnI`}}```````````{{{f{ALn}}{f{ALn}}c}{{Bd{ALnBb}}}ANf}{{ANf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jj{K`Jl}}}}{f{{l{Af}}}}CHh{Fj{Gd}{{Dd{ALf}}}}{Fj{ALf}{{Dd{Gd}}}}{f{ALh}}{f{ALh}}}{{Bd{{l{Jl}}Bb}}}}{{{f{{Jj{K`Jl}}}}{C`{{f{An}}}}{Fj{Gd}{{Dd{ALf}}}}{Fj{ALf}{{Dd{Gd}}}}{f{ALh}}{f{ALh}}}{{Bd{{l{Jl}}Bb}}}}{{{f{{Jj{K`Jl}}}}{C`{{f{An}}}}{f{{l{Af}}}}CHh}{{Bd{{Jj{K`Jl}}Bb}}}}```{{c{C`{Hj}}}CO`{}}{{{COb{Gd}}{COb{Aj}}{C`{Hj}}}COd}{{{COb{Gd}}{COb{Aj}}{C`{Hj}}}COf}`{CKfBIj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CKfJn}BIj}3{{CKfBIjJn}BIj}{{CKfEf}BIj}555{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}8{cc{}}9{{}Ff}{ce{}{}};;;;;;;;;;{{CKf{C`{Ef}}BIjCHh}BIj}{{CKfBIj}BIj}={{CKf{f{An}}}BIj}>;0>>>>>>>1{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}5{CKfBIj}0>0`{{{f{BGn}}{f{BAf}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BGn}}}{{Bd{{f{An}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DHd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{DHd{C`{{f{AFf}}}}}{{Bd{ADlBb}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DHd}}}d}{{FfFf}DHd}{{{f{ClDHd}}{Cf{Cd}}}b}{{{f{ClDHd}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}6`{{{f{{l{c}}}}}FfA`}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DHf}}}DHf}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DHf}}{f{DHf}}}d}{{{f{DHf}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DHf}}{f{Clc}}}bACl}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DHh}}}DHh}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DHh}}{f{DHh}}}d}{{{f{DHh}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DHh}}{f{Clc}}}bACl}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}4{{KnKn}Kn}{{{f{{l{El}}}}Ih}{{Bd{bBb}}}}{{{f{{AKn{Ih}}}}Ih}{{Bd{bBb}}}}```{{{f{B`}}CCn}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bj}}}B`}0{{{f{B`}}{f{An}}}B`}0`{{{f{c}}h}b{}}{{{f{DHj}}}{{f{AFh}}}}{{{f{ClDHj}}}{{Cf{Cd}}}}{{{f{ClDHj}}}{{f{ClAFh}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DHj}}}DHj}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{{f{DHj}}}{{f{AFf}}}}{{}DHj}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{ClDHj}}Ff}b}{{{f{DHj}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DHj}}}Ff}{FfDHj}{{{f{ClDHj}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}{{{f{DHj}}}{{C`{{f{DHl}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFd}}}DFd}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{}DFd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{{BCd{EdOl}}}}}Ed}{{{f{DFd}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DFd}}}Ff}{{{f{DFd}}}{{Ln{BBl}}}}{{{f{An}}dd}Ed}{{{f{D@l}}Aj{C`{Ff}}d{C`{{f{BBl}}}}FfFf{C`{{f{CAn}}}}{C`{Aj}}Aj{C`{{f{CB`}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gh{BBlFfFf}}Bb}}}}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{D@l}}{f{CAh}}}{{Bd{DFdBb}}}}1{{{f{c}}}A@l{}}4{{DFd{Ln{BBl}}}DFd}````{{{f{{l{c}}}}eAL`d}{{Fn{Ih}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{Al{f}}}}cIhe}{{Fn{Ih}}}{{Ch{}{{Cb{C`}}}}}{{Dh{fFff}{{Dd{d}}}}}}``{{{f{DHn}}}{{f{B`}}}}{{{f{C@`}}}{{Bd{{l{Jf}}Bb}}}}{{{f{C@`}}}{{Bd{{l{Mn}}Bb}}}}0{{{f{C@`}}}{{Bd{{l{Ah}}Bb}}}}22112{{{f{C@`}}}{{Bd{{l{Nf}}Bb}}}}322{{{f{C@`}}{f{An}}}{{Bd{B`Bb}}}}{{{f{C@`}}Jn}{{Bd{{l{Jl}}Bb}}}}1445`{{{f{AJh}}FfFf}AJh}0`{{Ff{f{Cl{Fn{d}}}}}b}```11{{Ff{f{{Al{B`}}}}{f{ClEn}}}{{Bd{{ALb{{l{El}}}}Bb}}}}{{{f{{Al{B`}}}}{f{{Al{d}}}}{f{{Al{d}}}}}{{Bd{ALdBb}}}}{{{f{An}}{f{{Al{B`}}}}{f{{Al{d}}}}{f{{Al{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{An}}{f{{Al{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Al{B`}}}}}{{Bd{ALdBb}}}}{{{f{{Al{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````88```{{{f{BMb}}}{{f{{l{Af}}}}}}{{{f{BMf}}}{{Bd{{l{Af}}Bb}}}}{{{f{BMf}}}{{l{Af}}}}{{{f{BMf}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{BMf}}{f{An}}d}{{Bd{{l{Ah}}Bb}}}}{{{f{BMf}}{f{{l{Af}}}}dd}{{Bd{{l{Ah}}Bb}}}}{{{f{BMf}}{f{An}}}{{Bd{{l{Ah}}Bb}}}}{{{f{BMf}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BMf}}{f{{l{Af}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BMf}}{f{{l{Af}}}}Ff}{{Bd{{l{Af}}Bb}}}}{{{f{BMf}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BMf}}{f{{l{Af}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BMf}}{f{An}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BMf}}{f{{l{Af}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BMf}}{f{An}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{Al{{f{{l{Af}}}}}}}}{f{An}}d}{{Bd{{l{Af}}Bb}}}}{{{f{BMf}}{f{An}}{f{An}}}{{Bd{{l{Af}}Bb}}}}0{{{f{BMf}}{f{An}}{f{An}}Ff}{{Bd{{l{Af}}Bb}}}}1{{{f{BMf}}{f{{l{Af}}}}}{{l{j}}}}{{{f{BMf}}{f{{l{Af}}}}Ff}{{Bd{ALlBb}}}}0{{{f{{l{Af}}}}{f{{l{Af}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Dd{c}}}}}}2{{{f{{l{Af}}}}{f{{l{Af}}}}Ffed}{{Bd{ALlBb}}}{{Ch{}{{Cb{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Dd{c}}}}}}2{{{f{BMf}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{Af}}}}{f{An}}d}{{l{Af}}}}{{{f{BMf}}}{{l{El}}}}0{{{f{BMf}}}{{l{Af}}}}{{{f{BMf}}{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}4{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}505050{{{f{BMf}}{f{{l{Af}}}}}{{l{Af}}}}10{{{f{BMf}}{f{{l{El}}}}d}{{Bd{{l{Jl}}Bb}}}}444````````{{eFfFf}{{DI`{Gd}}}{{Hd{An}}}{{Ch{}{{Cb{c}}}}}}{{eFfFf}{{DIb{Gd}}}{{Hd{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}``````````````{{{f{c}}h}b{}}0{{{f{An}}{Fn{{Cf{Cd}}}}{f{AFf}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Cf{Cd}}}}{f{AFf}}{C`{{f{{DFl{EfEf}}}}}}}{{Bd{B`Bb}}}}{{B`c}{}{AbLd}}{{{f{B`}}c}{}{AbLd}}{{B`B`}}{{{f{B`}}{f{B`}}}}`{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Ff}}}}0{{{f{BKh}}Ej}{{l{El}}}}{{{f{BKh}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bh}}}}Bb}}}}{{{f{B`}}Ff}{{f{{Cf{Cd}}}}}}{{{f{BKh}}}{{f{AFh}}}}{{{f{ClBKh}}}{{f{ClAFh}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBKh}}}{{f{Cl{l{c}}}}}Db}{{{f{BKh}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BKh}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBKh}}}{{Bd{FfBb}}}}{{{f{ClB`}}}{{Bd{FfBb}}}}{{{f{B`}}}{{Bd{{f{{l{n}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eh}}}}Bb}}}}{{{f{BKh}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{Ah}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{{{f{BKh}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{ALn}}Bb}}}}7{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Ad}{{{f{BKh}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}{{{f{B`}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{BKh}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBKh}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kn}}}Kn}1{{{f{BKh}}}{{Ln{BKh}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{c}}}b{}}00{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jj{JhJf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jj{K`Jl}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jj{KdKb}}}}Bb}}}}{{}B`}{Ff{{f{c}}}{}}00{{{f{B`}}}f}1{Ff{{f{Clc}}}{}}000{{B`B`}}{{B`c}{}{AbLd}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AbLd}}{Ffb}000{{{f{BKh}}}B`}{{{f{BKh}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jj{KfJl}}}}Bb}}}}{{{f{Kn}}{f{Kn}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Ah}}Bb}}}}{{{f{B`}}{f{An}}}{{Bd{{l{Ah}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Ah}}Bb}}}AOh}32{{{f{B`}}c}{}AOh}{{{f{B`}}{f{An}}}}66{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Ff}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IfFf}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{BKh}}}{{Df{Nj}}}}{{{f{B`}}AHb}{{Bd{B`Bb}}}}{{{f{BKh}}{f{{l{Ah}}}}}{{Bd{B`Bb}}}}{{{f{Kn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{B`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{B`}}}Ef}{cc{}}00{{{Jj{JhJf}}}B`}{{{l{c}}}B`Db}2{{{Jj{KfJl}}}B`}{{{Jj{K`Jl}}}B`}{{{Jj{KjJl}}}B`}{{{f{An}}{f{{Al{If}}}}d}{{Bd{B`Bb}}}}{{{f{An}}{f{{Al{If}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{An}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cB`{{H`{}{{Cb{{f{Gd}}}}}}}}{cB`{{H`{}{{Cb{Ih}}}}}}{cB`{{H`{}{{Cb{{f{An}}}}}}}}{cB`{{H`{}{{Cb{{f{Nb}}}}}}}}{cB`{{H`{}{{Cb{Nb}}}}}}{cB`{{H`{}{{Cb{{f{d}}}}}}}}{cB`{{H`{}{{Cb{{C`{Aj}}}}}}}}{cB`{{H`{}{{Cb{{C`{Gd}}}}}}}}{cB`{{H`{}{{Cb{Gd}}}}}}{cB`{{H`{}{{Cb{{f{In}}}}}}}}{cB`{{H`{}{{Cb{N`}}}}}}{cB`{{H`{}{{Cb{{f{Nh}}}}}}}}{cB`{{H`{}{{Cb{{f{Ih}}}}}}}}{cB`{{H`{}{{Cb{Lh}}}}}}{cB`{{H`{}{{Cb{{f{J`}}}}}}}}{cB`{{H`{}{{Cb{{C`{d}}}}}}}}{cB`{{H`{}{{Cb{In}}}}}}{cB`{{H`{}{{Cb{Nh}}}}}}{cB`{{H`{}{{Cb{Ef}}}}}}{cB`{{H`{}{{Cb{{C`{J`}}}}}}}}{cB`{{H`{}{{Cb{J`}}}}}}{cB`{{H`{}{{Cb{{C`{Nb}}}}}}}}{cB`{{H`{}{{Cb{{C`{Nh}}}}}}}}{cB`{{H`{}{{Cb{{f{Mh}}}}}}}}{cB`{{H`{}{{Cb{{f{Lh}}}}}}}}{cB`{{H`{}{{Cb{{C`{Mh}}}}}}}}{cB`{{H`{}{{Cb{d}}}}}}{cB`{{H`{}{{Cb{{C`{In}}}}}}}}{cB`{{H`{}{{Cb{{C`{N`}}}}}}}}{cB`{{H`{}{{Cb{{C`{Lh}}}}}}}}{cB`{{H`{}{{Cb{{C`{Ih}}}}}}}}{cB`{{H`{}{{Cb{Mh}}}}}}{cB`{{H`{}{{Cb{{f{N`}}}}}}}}{cB`{{H`{}{{Cb{{f{Aj}}}}}}}}{cB`{{H`{}{{Cb{Aj}}}}}}{{{f{An}}{Fn{Ih}}}B`}{{{f{An}}{Fn{Md}}}B`}{{{f{An}}{Fn{In}}}B`}{{{f{An}}{Fn{Mh}}}B`}{{{f{An}}{Fn{Lh}}}B`}{{{f{An}}{Fn{Aj}}}B`}{{{f{An}}{Fn{N`}}}B`}{{{f{An}}{Fn{Nb}}}B`}{{{f{An}}{Fn{Gd}}}B`}{{{f{An}}{Fn{Nh}}}B`}{{{f{An}}{Fn{J`}}}B`}{{{f{An}}Ff{f{Ed}}}B`}{{{f{B`}}FfFf}B`}{{{f{BKh}}Ff}{{Bd{IfBb}}}}{{{f{B`}}}Ff}{{{f{B`}}}Ij}{{{f{B`}}}B`}{{{f{BKh}}}{{C`{{Mb{M`}}}}}}{{{f{BKh}}Ff}{{C`{{f{Il}}}}}}{{{f{BKh}}FfFf}{{C`{{f{Il}}}}}}{{{f{BKh}}Ff}If}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Ah}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Ah}}Bb}}}AOh}{{{f{B`}}{f{An}}}{{Bd{{l{Ah}}Bb}}}}312{{{f{B`}}{f{An}}}}{{{f{BKh}}}d}{{{f{Kn}}{f{Clc}}}bACl}{{{f{B`}}{C`{Ff}}}B`}{{{f{B`}}}{{Bd{{f{{l{Nf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jl}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mn}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Ff}000{ce{}{}}000{B`BAf}1{BBnB`}{B`B`}={{{f{B`}}}{{Bd{{l{Ah}}Bb}}}}000{{{f{BKh}}}{{l{Ah}}}}0{{}d}0{{{f{B`}}}Kn}{{{f{B`}}}DId}{{{f{B`}}}{{`{{Ch{}{{Cb{B`}}}}}}}}{{{f{BKh}}}Ff}{{{f{B`}}}Ff}{{{f{BKh}}Ff}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BIj}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{Ah}}Bb}}}AOh}{{{f{B`}}{f{B`}}}{{Bd{{l{Ah}}Bb}}}}{{{f{B`}}{f{An}}}}3120{{{f{B`}}}{{Bd{{C`{c}}Bb}}}Ld}{{{f{BKh}}}{{Bd{LfBb}}}}{{{f{BKh}}}{{C`{Lh}}}}{{{f{B`}}}Lf}1232{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AbLd}}{{B`B`}}{{B`c}{}{AbLd}}{{{f{BKh}}}Ff}{{{f{B`}}}Ff}{{{f{BKh}}}{{Bd{FfBb}}}}{{{f{BKh}}}{{f{An}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Nb}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{d}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Lh}}}}}}}}{{{f{An}}{Mj{Ih}}}B`}{{{f{An}}c}B`{{Hd{{Al{{Df{{Al{Aj}}}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Gd}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Md}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{In}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{ALf}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{{f{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{If}}}}}}{{{f{An}}c}B`{{Hd{{Al{N`}}}}}}{{{f{An}}c}B`{{Hd{{Al{ALf}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Ef}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Ih}}}}}}}}{{{f{An}}{Mj{Nb}}}B`}{{{f{An}}c}B`{{Hd{{Al{{Df{An}}}}}}}}{{{f{An}}{Mj{Gd}}}B`}{{{f{An}}c}B`{{Hd{{Al{{C`{B`}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{J`}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{N`}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{B@d}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{{Df{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Nb}}}}}}{{{f{An}}c}B`{{Hd{{Al{{Fn{Aj}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{f{An}}}}}}}}{{{f{An}}{Mj{J`}}}B`}{{{f{An}}c}B`{{Hd{{Al{ALj}}}}}}{{{f{An}}{f{B`}}}B`}{{{f{An}}c}B`{{Hd{{Al{{f{{Al{Aj}}}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{d}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{{Fn{Aj}}}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Mh}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Mh}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{J`}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Gd}}}}}}{{{f{An}}c}B`{{Hd{{Al{Nh}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Nh}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Ih}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Md}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Aj}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{B@b}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Ef}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{ALj}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{{f{An}}}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{Lh}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{{Df{An}}}}}}}}}}{{{f{An}}c}B`{{Hd{{Al{B@d}}}}}}{{{f{An}}c}B`{{Hd{{Al{In}}}}}}{{{f{An}}c}B`{{Hd{{Al{{C`{Aj}}}}}}}}{{{f{An}}c}B`BBn}{{{f{An}}c}B`{{Hd{{Al{B`}}}}}}{{{f{An}}c}B`{{Hd{{Al{B@b}}}}}}{{{f{An}}{f{Ed}}}B`}{{{f{BKh}}FfFf}B`}{{{f{An}}Ff}B`}{{{f{ClDId}}}C`}{{{f{{AHd{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{Ah}}Bb}}}AOh}{{{f{B`}}{f{An}}}{{Bd{{l{Ah}}Bb}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Ah}}Bb}}}}3{{{f{B`}}{f{An}}}}1{{{f{B`}}c}{}AOh}{{{f{B`}}}{{Bd{{f{ACh}}Bb}}}}{{{f{BKh}}}Ff}`{{{f{B`}}}{{Cf{Kh}}}}{{{f{B`}}}{{Bd{LfBb}}}}{{{f{BKh}}LhO`}{{Bd{LfBb}}}}{{{f{BKh}}}B`}{{{f{B`}}{f{B`}}}}{{B`c}{}{AbLd}}{{{f{B`}}c}{}{AbLd}}{{{f{ClBKh}}{f{An}}}b}{{{f{ClB`}}{f{An}}}{{f{ClB`}}}}{{{f{B`}}{f{{Al{Gd}}}}}{{Bd{B`Bb}}}}06{KnKn}{{{f{BKh}}{f{Dh}}Ob}{{Bd{B`Bb}}}}{{{f{B`}}Lhdd{C`{J`}}}{{Bd{B`Bb}}}}{{{f{B`}}Ffdd{C`{J`}}}{{Bd{B`Bb}}}}{{{f{B`}}Ff}B`}{{{f{ClB`}}Kn}b}{{{f{BKh}}Gd}B`}{{{f{ClBKh}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{J`}}}B`}{{{f{DId}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{BKh}}GdFf}B`}{{{f{B`}}GdFf}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BKh}}Ej}{{Bd{B`Bb}}}}{{{f{BKh}}Gd}{{Gh{B`B`}}}}{{{f{B`}}Gd}{{Gh{B`B`}}}}{{{f{BKh}}Aj}{{C`{Lh}}}}{{{f{BKh}}Aj}{{Bd{LfBb}}}}{{{f{B`}}}{{Bd{{f{{l{Af}}}}Bb}}}}{{{f{B`}}Ff}{{Bd{{Df{An}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{ALl}}Bb}}}}{{{f{B`}}c}{}{AbLd}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{B`c}{}{AbLd}}{{{f{B`}}}{{Bd{cBb}}}Ld}{{{f{BKh}}}{{Bd{LfBb}}}}{{{f{B`}}}{{Bd{LfBb}}}}{{{f{B`}}{C`{Ff}}}B`}{{{f{BKh}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{Al{Oh}}}}Kn}B`}{{{f{B`}}{f{{Al{Oh}}}}}B`}{{{f{BKh}}{f{{Al{Ih}}}}}{{Bd{B`Bb}}}}{{{f{BKh}}{f{{Al{Ih}}}}}B`}{{{f{BKh}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{Al{Ih}}}}}B`}{{{f{B`}}}{{Bd{{f{{Jj{KjJl}}}}Bb}}}}{{{f{B`}}Ffd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{An}}}}d}{{Bd{BAfBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Df{B`}}}}{{{f{c}}}Ef{}}{{B`B`}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}00{{{Gh{{f{AOl}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}1{{{Gh{{f{An}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gh{{f{AOl}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gh{{f{An}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}44445{{{f{ClB`}}{Jb{c}}}dDb}6{{{f{c}}}A@l{}}000{{{f{B`}}}{{Bd{{f{{l{Mf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ml}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Nd}}}}Bb}}}}{{{f{BKh}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BKh}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{BKh}}Aj}{{C`{Lh}}}}{{{f{BKh}}Aj}{{Bd{LfBb}}}}{ce{}{}}000{{B`{f{An}}}B`}{{{f{B`}}c}B`{AbLd}}{{{f{B`}}{f{{l{Ah}}}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{c}}h}b{}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}{{{f{Dl}}}B`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{cc{}}{{}Ff}{ce{}{}}{{{DIf{B`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}5{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Dh{{f{Dl}}}{{Dd{c}}}}}}````{{{f{B`}}{f{B`}}c}{{Bd{B`Bb}}}{{Dn{{f{B`}}{f{B`}}}{{Dd{{Bd{B`Bb}}}}}}}}{{{BIl{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{C@b}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{C@b}}c}{{Bd{B`Bb}}}Ad}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Ad}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CKb}}}CKb}{{{f{c}}{f{Cle}}}b{}{}}{{{f{c}}}b{}}0{{}CKb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{CKb}}{f{CKb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CKb}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{CKb}}{f{Clc}}}bACl}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@l{}}3","D":"AEJbALd","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11310],[5,"ListType",1989,11311],[5,"ChunkedArray",17,11312],[5,"BinaryType",1989,11311],[10,"PolarsNumericType",1989,11311],[10,"Num",11313],[10,"ToPrimitive",11314],[5,"StringType",1989,11311],[5,"BooleanType",1989,11311],[1,"u8"],[1,"slice"],[1,"str"],[5,"Series",10797,11315],[6,"PolarsError",3472,11316],[6,"Result",11317],[10,"NumOpsDispatchInner",11255,11318],[5,"FixedSizeListType",1989,11311],[6,"GroupsProxy",3861,11319],[5,"ObjectType",1989,11311],[10,"PolarsObject",1544,11320],[6,"Option",11321],[17,"Item"],[10,"Array",11322],[5,"Box",11323],[10,"Iterator",11324],[5,"AmortizedListIter",11325],[0,"mut"],[17,"IsNested"],[5,"FalseT",1989,11311],[10,"PolarsDataType",1989,11311],[17,"Output"],[6,"Cow",11326],[10,"Fn",11327],[10,"Copy",11328],[5,"AmortSeries",11231,11329],[10,"FnMut",11327],[5,"Float32Type",1989,11311],[5,"Float64Type",1989,11311],[6,"DataType",1989,11330],[5,"String",11331],[5,"BinaryOffsetType",1989,11311],[5,"SortOptions",1672,11332],[5,"UInt32Type",1989,11311],[5,"SortMultipleOptions",1672,11332],[10,"PolarsIntegerType",1989,11311],[6,"CastOptions",1134,11333],[10,"NumOpsDispatchCheckedInner",11276,11334],[1,"usize"],[5,"Iter",11335],[1,"fn"],[5,"Map",11336],[5,"Vec",11337],[5,"MetadataProperties",1256,11338],[10,"DoubleEndedIterator",11339],[1,"i64"],[5,"OffsetsBuffer",11340],[1,"tuple"],[5,"Formatter",11341],[5,"Error",11341],[17,"Array"],[10,"IntoIterator",11342],[10,"FallibleIterator",11343],[10,"AsRef",11344],[10,"PolarsAsRef",11345],[10,"Borrow",11346],[5,"Bitmap",11347],[10,"IntoParallelIterator",11348],[10,"Send",11328],[10,"Sync",11328],[10,"NoOption",11349],[10,"TrustedLen",11350],[6,"AnyValue",1989,11351],[1,"u32"],[5,"MetadataFlags",1256,11338],[10,"PolarsObjectSafe",1544,11320],[1,"f32"],[1,"u64"],[5,"Metadata",1256,11338],[5,"RwLockWriteGuard",11352],[5,"Int32Type",1989,11311],[5,"DateType",1989,11311],[5,"Logical",1989,11353],[5,"Int64Type",1989,11311],[6,"TimeUnit",1989,11354],[5,"DatetimeType",1989,11311],[5,"Int128Type",1989,11311],[5,"DecimalType",1989,11311],[5,"DurationType",1989,11311],[10,"ExactSizeIterator",11355],[5,"TimeType",1989,11311],[10,"PolarsFloatType",1989,11311],[6,"IsSorted",10797,11356],[10,"PolarsIterator",1184,11357],[6,"ChunkedArrayLayout",17,11312],[10,"NumCast",11314],[5,"Scalar",1989,11351],[1,"f64"],[6,"MetadataReadGuard",1256,11358],[5,"IMMetadata",1256,11359],[5,"Arc",4232,11360],[10,"MetadataTrait",1256,11361],[5,"RwLockReadGuard",11352],[1,"i128"],[5,"UInt16Type",1989,11311],[1,"u16"],[5,"Range",11362],[5,"UInt64Type",1989,11311],[5,"Int8Type",1989,11311],[1,"i8"],[1,"i32"],[5,"UInt8Type",1989,11311],[5,"Int16Type",1989,11311],[1,"i16"],[5,"Field",1989,11363],[10,"ParallelIterator",11348],[10,"IndexedParallelIterator",11348],[6,"QuantileInterpolOptions",4232,11364],[5,"RollingOptionsFixedWindow",4232,11365],[10,"PolarsOpsNumericType",11366],[10,"Sized",11328],[5,"ChunkId",4232,11367],[17,"HasViews"],[5,"RandomState",11368],[5,"BytesHash",11369],[5,"ViewRepr",11370],[1,"array"],[5,"Dim",11371],[5,"ArrayBase",11370],[5,"OwnedRepr",11372],[6,"Either",11373],[5,"TypeId",11374],[5,"NullableIdxSize",4232,11367],[10,"FnOnce",11327],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",828,11375],[5,"AnonymousListBuilder",856,11376],[5,"AnonymousOwnedListBuilder",856,11376],[5,"ListBooleanChunkedBuilder",856,11377],[5,"ListPrimitiveChunkedBuilder",856,11378],[10,"ListBuilderTrait",856,11379],[10,"ChunkedBuilder",856,11380],[5,"ListStringChunkedBuilder",856,11381],[5,"ListBinaryChunkedBuilder",856,11381],[5,"ListNullChunkedBuilder",856,11382],[5,"BinViewChunkedBuilder",856,11383],[10,"ViewType",11384],[5,"BooleanChunkedBuilder",856,11385],[5,"NullChunkedBuilder",856,11386],[5,"PrimitiveChunkedBuilder",856,11387],[10,"Clone",11388],[5,"NullChunked",11389],[10,"NewChunkedArray",856,11380],[10,"Hasher",11390],[10,"ChunkedCollectInferIterExt",1164,11391],[10,"ChunkedCollectIterExt",1164,11391],[10,"Canonical",1178,11392],[10,"ChunkedCollectParIterExt",1180,11393],[10,"FromParIterWithDtype",1180,11393],[5,"BooleanArray",11394],[5,"BoolIterNoNull",1184,11357],[5,"FixedSizeListArray",11395],[5,"FixedSizeListIterNoNull",1184,11357],[5,"StructIter",1184,11357],[5,"SomeIterator",1184,11357],[5,"MetadataEnv",1256,11396],[10,"MetadataCollectable",1256,11397],[5,"Iter",11398],[5,"IterNames",11398],[5,"File",11399],[5,"Mutex",11400],[6,"MetadataMerge",1256,11338],[5,"RwLock",11352],[5,"ObjectArray",1544,11320],[6,"ArrowDataType",1989,11401],[10,"Any",11374],[10,"Debug",11341],[5,"BitmapIter",11402],[6,"ZipValidity",11403],[5,"ObjectChunkedBuilder",1621,11404],[10,"AnonymousObjectBuilder",1644,11405],[5,"ObjectRegistry",1644,11405],[17,"FuncRet"],[10,"ChunkApply",1672,11406],[10,"ChunkApplyKernel",1672,11406],[10,"ChunkSort",1672,11406],[10,"ChunkUnique",1672,11406],[10,"ChunkCast",1672,11406],[6,"FillNullStrategy",1672,11406],[10,"ChunkCompare",10797,11406],[10,"ChunkExplode",1672,11406],[10,"ChunkFillNullValue",1672,11406],[10,"ChunkFilter",1672,11406],[10,"ChunkFull",1672,11406],[10,"ChunkFullNull",1672,11406],[10,"ChunkAnyValue",1672,11406],[10,"IsFirstDistinct",1672,11406],[10,"IsLastDistinct",1672,11406],[10,"ChunkAgg",1672,11406],[10,"ChunkQuantile",1672,11406],[10,"ChunkExpandAtIndex",1672,11406],[10,"Reinterpret",1672,11406],[10,"ChunkReverse",1672,11406],[10,"ChunkRollApply",1672,11406],[10,"ChunkSet",1672,11406],[10,"ChunkShift",1672,11406],[10,"ChunkShiftFill",1672,11406],[10,"SlicedArray",1672,11407],[10,"ChunkVar",1672,11406],[10,"ChunkTake",1672,11406],[10,"ChunkTakeUnchecked",1672,11406],[10,"ChunkBytes",1672,11406],[10,"ChunkZip",1672,11406],[10,"BinaryFnMut",1879,11408],[10,"StaticArray",1989,11409],[10,"TernaryFnMut",1879,11408],[10,"Error",11410],[10,"UnaryFnMut",1879,11408],[5,"PrimitiveArray",11411],[6,"SearchSortedSide",1919,11412],[5,"NoNull",4232,11413],[5,"RowsEncoded",11414],[5,"NaiveDateTime",11415],[6,"Tz",11416],[5,"NaiveTime",11417],[5,"StructChunked",1989,11418],[5,"CategoricalChunked",1989,11419],[5,"CategoricalChunkedBuilder",1989,11420],[10,"ArrayFromIter",1989,11421],[10,"ArrayFromIterDtype",1989,11421],[10,"AsRefDataType",1989,11330],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11422],[10,"From",11344],[5,"BinaryViewArrayGeneric",11384],[6,"RevMapping",1989,11423],[10,"CategoricalMergeOperation",1989,11424],[10,"LogicalType",1989,11353],[6,"CategoricalOrdering",1989,11423],[5,"OwnedObject",1989,11351],[6,"UnknownKind",1989,11330],[5,"CategoricalType",1989,11311],[6,"ArrowTimeUnit",1989],[10,"ArrayCollectIterExt",1989,11421],[5,"GlobalRevMapMerger",1989,11424],[10,"NumericNative",1989,11311],[10,"Into",11344],[5,"ArrowField",4232],[6,"IntegerType",11425],[6,"PrimitiveType",11426],[5,"TimeDelta",11427],[5,"NaiveDate",11428],[5,"LazyCompact",11429],[5,"SmartString",11430],[10,"GetAnyValue",1989,11351],[10,"IntoScalar",1989,11431],[5,"CatIter",1989,11419],[6,"Ordering",11432],[1,"u128"],[6,"PhysicalType",11425],[5,"DataFrame",3567,11433],[5,"StringCacheHolder",3451,11434],[5,"ErrString",3472,11316],[6,"PolarsWarning",3472,11435],[5,"Error",11436],[6,"Error",11437],[6,"ParquetError",11438],[5,"TryReserveError",11439],[5,"Utf8Error",11440],[5,"Error",11441],[10,"Display",11341],[5,"Schema",4232,11442],[10,"IntoSeries",10797,11443],[6,"NullStrategy",3567,11433],[6,"UniqueKeepStrategy",3567,11433],[5,"HashSet",11444],[5,"ArrowSchema",4232,11445],[5,"Row",4120,11446],[5,"GroupBy",3861,11447],[5,"DynamicGroupOptions",4232,11448],[5,"RangeFrom",11362],[5,"RangeTo",11362],[5,"RangeFull",11362],[5,"RangeToInclusive",11362],[5,"RangeInclusive",11362],[5,"RecordBatchIter",3567,11433],[5,"PhysRecordBatchIter",3567,11433],[5,"LazyFrame",4232,11449],[5,"RollingGroupOptions",4232,11448],[10,"RangeBounds",11362],[10,"IntoVec",4232,11413],[6,"IndexOrder",4232,11450],[5,"StructArray",4232,11451],[5,"RecordBatchT",11452],[5,"UnpivotArgs",3831,11453],[5,"Duration",4232,11454],[5,"GroupsIdx",3861,11319],[5,"UnitVec",11455],[6,"GroupByMethod",3861,11447],[5,"SlicedGroups",3861,11319],[5,"GroupsProxyParIter",3861,11319],[10,"UnindexedConsumer",11456],[6,"GroupsIndicator",3861,11319],[6,"IRAggExpr",11457],[10,"IntoGroupsProxy",3861,11458],[5,"Copied",11459],[5,"Zip",11460],[5,"GroupsProxyIter",3861,11319],[10,"IsFloat",11461],[10,"NativeType",11462],[10,"AggList",4104,11463],[10,"TakeExtremum",4104,11464],[10,"PhysicalAggExpr",4117,11465],[6,"AnyValueBuffer",4120,11466],[6,"AnyValueBufferTrusted",4120,11466],[5,"Node",11467],[6,"IR",11468],[5,"Arena",11467],[6,"AExpr",11457],[10,"JoinDispatch",4232,11469],[5,"JoinArgs",4232,11470],[10,"DfTake",4232,11471],[10,"DataFrameOps",4232,11472],[5,"CsvReader",4232,11473],[10,"PhysicalIoExpr",11474],[10,"MmapBytesReader",11475],[6,"Expr",4232,11476],[10,"LhsNumOps",11255,11318],[10,"NumOpsDispatch",11255,11318],[5,"LazyGroupBy",4232,11449],[10,"Allocator",11477],[5,"JoinBuilder",4232,11449],[10,"AnonymousScan",4232,11478],[5,"ScanArgsAnonymous",4232,11479],[10,"FunctionOutputField",4232,11480],[5,"SpecialEq",4232,11480],[6,"VisitRecursion",11481],[6,"FunctionExpr",4232,11482],[10,"ArgAgg",4232,11483],[5,"ArrayNameSpace",4232,11484],[5,"ListNameSpace",4232,11485],[10,"SeriesTrait",10797,11356],[5,"FieldsMapper",4232,11486],[5,"IpcStreamReader",4232,11487],[10,"Read",11488],[10,"SeriesUdf",4232,11480],[10,"AsBinary",4232,11489],[10,"StringMethods",9746,11490],[5,"BorrowedFd",11491],[10,"AsFd",11491],[10,"AsList",4232,11492],[10,"AsRawFd",11493],[6,"AggExpr",4232,11476],[10,"SeriesSealed",4232,11494],[10,"AsString",4232,11495],[20,"MaybeUninit",11496],[10,"StringNameSpaceImpl",4232,11497],[5,"OwnedBatchedCsvReader",4232,11498],[5,"CsvWriter",4232,11499],[5,"BatchedWriter",11499],[10,"Write",11488],[5,"IpcWriter",4232,11500],[5,"BatchedWriter",11500],[5,"ParquetReader",4232,11501],[5,"BatchedParquetReader",4232,11502],[5,"ParquetWriter",4232,11503],[5,"BatchedWriter",11504],[5,"BatchedCsvReader",4232,11498],[5,"BinaryNameSpace",9652,11505],[6,"Operator",4232,11476],[10,"RenameAliasFn",4232,11480],[5,"UserDefinedFunction",4232,11506],[10,"SeriesBinaryUdf",4232,11480],[5,"InProcessQuery",4232,11507],[5,"HashMap",11508],[5,"CategoricalNameSpace",4232,11509],[10,"RoundSeries",4232,11510],[10,"TemporalMethods",10680,11511],[10,"NumOpsDispatchChecked",11276,11334],[5,"LazyCsvReader",4232,11512],[5,"ScanArgsIpc",4232,11513],[5,"LazyJsonLineReader",4232,11514],[5,"ScanArgsParquet",4232,11515],[5,"RollingOptionsDynamicWindow",4232,11516],[5,"Bounds",4232,11517],[6,"ClosedWindow",4232,11518],[6,"Label",4232,11518],[6,"StartBy",4232,11518],[5,"Window",4232,11519],[5,"CsvReadOptions",4232,11520],[5,"CsvParseOptions",4232,11520],[6,"CsvEncoding",4232,11520],[6,"CommentPrefix",4232,11520],[6,"NullValues",4232,11520],[5,"CsvWriterOptions",4232,11521],[5,"SerializeOptions",4232,11521],[6,"QuoteStyle",4232,11521],[5,"IpcScanOptions",4232,11522],[6,"JoinCoalesce",4232,11470],[5,"IpcWriterOptions",4232,11500],[6,"JoinType",4232,11470],[6,"IpcCompression",4232,11500],[6,"JoinValidation",4232,11470],[5,"JsonWriterOptions",4232,11523],[5,"AsOfOptions",4232,11524],[6,"AsofStrategy",4232,11524],[5,"ParquetOptions",4232,11525],[6,"ParallelStrategy",4232,11525],[6,"InterpolationMethod",4232,11526],[6,"ClosedInterval",4232,11527],[6,"RankMethod",4232,11528],[5,"ParquetWriteOptions",4232,11529],[5,"RankOptions",4232,11528],[6,"ParquetCompression",4232,11529],[5,"GzipLevel",4232,11529],[5,"BrotliLevel",4232,11529],[5,"ZstdLevel",4232,11529],[6,"DslPlan",4232,11530],[5,"When",4232,11531],[5,"Then",4232,11531],[5,"ChainedWhen",4232,11531],[5,"ChainedThen",4232,11531],[6,"Excluded",4232,11476],[6,"BooleanFunction",4232,11532],[6,"CategoricalFunction",4232,11533],[6,"TemporalFunction",4232,11534],[6,"PowFunction",4232,11535],[6,"StringFunction",4232,11536],[6,"StructFunction",4232,11537],[5,"DatetimeArgs",4232,11538],[5,"DurationArgs",4232,11538],[5,"RollingCovOptions",4232,11539],[5,"StrptimeOptions",4232,11539],[5,"JoinOptions",4232,11539],[6,"WindowType",4232,11539],[6,"WindowMapping",4232,11539],[6,"NestedType",4232,11539],[5,"OptState",4232,11540],[6,"LiteralValue",4232,11541],[5,"AnonymousScanOptions",4232,11542],[5,"UnionArgs",4232,11542],[5,"StatisticsOptions",4232,11543],[5,"FileMetaData",4232,11544],[5,"RollingVarParams",4232,11545],[5,"RollingQuantileParams",4232,11545],[6,"NonExistent",4232,11546],[10,"LazyFileListReader",4232,11547],[5,"CloudOptions",9884,11548],[10,"Ord",11432],[6,"ColumnOrder",11549],[10,"BinaryNameSpaceImpl",4232,11550],[5,"JsonLineReader",4232,11551],[5,"PathBuf",11552],[5,"IpcStreamWriterOption",4232,11487],[10,"SerWriter",4232,11553],[5,"IpcWriterOption",4232,11500],[10,"CrossJoin",4232,11554],[10,"ExprEvalExtension",4232,11555],[10,"DateMethods",9746,11556],[10,"DatetimeMethods",9746,11557],[10,"DurationMethods",9746,11558],[10,"BinaryUdfOutputField",4232,11480],[5,"CStr",11559],[10,"Default",11560],[5,"RowGroupMetaData",11561],[5,"ParquetStatistics",4232],[6,"NullBehavior",11282,11562],[5,"Weak",11360],[5,"DateLikeNameSpace",10246,11563],[1,"char"],[10,"FromIterator",11342],[10,"SchemaNamesAndDtypes",4232,11442],[10,"SeriesMethods",4232,11564],[10,"Scalar",11565],[10,"PartialEq",11432],[10,"ListNameSpaceExtension",4232,11566],[10,"Command",11567],[5,"StructNameSpace",4232,11568],[10,"SerReader",4232,11553],[5,"IpcReader",4232,11522],[5,"IpcStreamWriter",4232,11487],[5,"JsonWriter",4232,11523],[5,"JsonReader",4232,11523],[10,"UdfSchema",4232,11569],[6,"RangeFunction",11570],[6,"ListFunction",11571],[6,"BinaryFunction",11572],[6,"ArrayFunction",11573],[5,"OsString",11574],[5,"OsStr",11574],[5,"Path",11552],[5,"CString",11575],[10,"ToOwned",11326],[1,"never"],[5,"MutableStatistics",11576],[5,"GrowableStruct",11577],[5,"MutableStructArray",11578],[10,"FromData",10240,11579],[5,"Buffer",11580],[10,"FromDataUtf8",10240,11579],[10,"FromDataBinary",10240,11579],[5,"ListArray",11581],[6,"Ambiguous",4232,11546],[10,"NamedFromOwned",4232,11582],[10,"DataFrameJoinOps",4232,11583],[5,"FunctionOptions",11542],[10,"PartialOrd",11432],[6,"Context",11530],[10,"IndexOfSchema",4232,11442],[17,"DataType"],[5,"BoundsIter",4232,11519],[6,"ReaderBytes",11475],[10,"PolarsTemporalGroupby",4232,11448],[10,"PolarsArray",4232,11584],[10,"Hash",11390],[10,"SeriesJoin",4232,11585],[10,"TimeMethods",9746,11586],[5,"NonZero",11587],[10,"IntoListNameSpace",4232,11566],[5,"FileMetaData",11588],[5,"StructValueIter",11589],[10,"AsofJoinBy",4232,11590],[10,"ListNameSpaceImpl",4232,11591],[5,"ExprNameNameSpace",4232,11592],[5,"KeyValue",11588],[10,"IntoLazy",4232,11449],[10,"Literal",4232,11541],[5,"Null",4232,11541],[10,"CloneToUninit",11388],[5,"RowIndex",11593],[10,"ChunkAggSeries",4232,11594],[10,"QuantileAggSeries",4232,11595],[10,"IndexToUsize",4232,11596],[10,"NamedFrom",4232,11582],[6,"RowGroupFetcher",11502],[5,"SplitNChars",4232,11597],[5,"Pin",11598],[5,"Request",11410],[10,"SeriesRank",4232,11528],[5,"BorrowedCursor",11599],[10,"VarInt",11600],[5,"IoSliceMut",11488],[10,"SeriesOpsTime",9746,11601],[10,"PolarsRound",4232,11602],[5,"AnonymousScanArgs",4232,11478],[10,"ChunkedSet",4232,11366],[5,"SchemaDescriptor",11603],[6,"SeekFrom",11488],[10,"VarAggSeries",4232,11604],[5,"StringNameSpace",11605],[10,"TakeChunked",4232,11471],[5,"IRPlan",11468],[10,"ToDummies",4232,11606],[10,"PolarsTruncate",4232,11607],[5,"AllocError",11477],[5,"SchemaInferenceResult",10647,11608],[10,"PolarsUpsample",4232,11609],[10,"VecHash",4232,11610],[6,"JsonFormat",4232,11523],[5,"BTreeMap",11611],[5,"IoSlice",11488],[10,"ArrayNameSpace",9633,11612],[10,"AsArray",9633,11613],[6,"Buffer",9668,11614],[10,"AsString",9813,11490],[6,"Pattern",9813,11615],[5,"DatetimeInfer",9853,11616],[10,"StrpTimeParser",9853,11616],[17,"Error"],[10,"TryFromWithUnit",9853,11616],[6,"CloudType",9884,11548],[5,"AnonymousBuilder",10301,11617],[6,"RollingFunction",10543,11618],[6,"RollingFunctionBy",10573,11619],[5,"MutableNullArray",10616,11620],[5,"MutableBitmap",11621],[10,"AsSeries",10680,11511],[5,"Utf8Array",11622],[5,"BinaryArray",11623],[5,"SeriesIter",10797,11624],[5,"Rc",11625],[8,"FillNullLimit",1672],[10,"InitHashMaps",1989],[10,"InitHashMaps2",1989],[5,"TrueT",1989],[8,"PolarsResult",3472],[15,"IO",9565],[15,"Context",9565],[15,"Count",9559],[15,"Slice",9560],[8,"ChunkJoinOptIds",4232],[8,"DynArgs",4232],[8,"AllowedOptimizations",4232],[10,"ListFromIter",4232],[15,"Quantile",9438],[15,"Min",9438],[15,"Max",9438],[15,"IsBetween",10496],[15,"Any",10496],[15,"All",10496],[15,"GroupBy",9448],[15,"Union",9448],[15,"Sort",9448],[15,"Cache",9448],[15,"ExtContext",9448],[15,"DataFrameScan",9448],[15,"IR",9448],[15,"Select",9448],[15,"HStack",9448],[15,"Scan",9448],[15,"MapFunction",9448],[15,"Filter",9448],[15,"Distinct",9448],[15,"Slice",9448],[15,"Sink",9448],[15,"Join",9448],[15,"HConcat",9448],[15,"SortBy",9502],[15,"Filter",9502],[15,"Cast",9502],[15,"Sort",9502],[15,"Gather",9502],[15,"RenameAlias",9502],[15,"Ternary",9502],[15,"Function",9502],[15,"Window",9502],[15,"AnonymousFunction",9502],[15,"Slice",9502],[15,"BinaryExpr",9502],[15,"Round",10499],[15,"RoundSF",10499],[15,"Clip",10499],[15,"BackwardFill",10499],[15,"ForwardFill",10499],[15,"Random",10499],[15,"GatherEvery",10499],[15,"ValueCounts",10499],[15,"Rank",10499],[15,"ReplaceStrict",10499],[15,"CumCount",10499],[15,"CumSum",10499],[15,"CumProd",10499],[15,"CumMin",10499],[15,"CumMax",10499],[15,"Range",9562],[15,"ConcatHorizontal",10521],[15,"ConcatVertical",10521],[15,"ExtractGroups",10521],[15,"SplitExact",10521],[15,"Contains",10521],[15,"Find",10521],[15,"Replace",10521],[15,"DatetimeFunction",10535],[5,"Utf8Field",9668],[5,"CategoricalField",9668],[5,"DatetimeField",9668],[15,"Datetime",9742],[10,"Utf8FromIter",10793],[10,"BinaryFromIter",10793],[6,"BitRepr",10797]],"r":[[1,11626],[2,11626],[3,11626],[4,11626],[6,11434],[7,11626],[8,11626],[9,11626],[13,11626],[14,11626],[16,11434],[17,11312],[18,11312],[19,11312],[112,11312],[135,11312],[136,11312],[162,11312],[164,11312],[217,11312],[270,11312],[413,11312],[462,11312],[565,11312],[568,11312],[703,11312],[828,11375],[856,11376],[857,11376],[858,11383],[859,11383],[860,11385],[861,11380],[862,11381],[863,11377],[864,11379],[865,11382],[866,11378],[867,11381],[868,11380],[869,11386],[870,11387],[871,11383],[1008,11380],[1024,11379],[1052,11380],[1117,11376],[1118,11376],[1119,11381],[1120,11377],[1121,11379],[1122,11382],[1123,11378],[1124,11381],[1132,11379],[1134,11333],[1164,11391],[1165,11391],[1178,11392],[1180,11393],[1181,11393],[1184,11357],[1185,11357],[1186,11357],[1187,11357],[1188,11357],[1234,11357],[1254,11627],[1255,11627],[1261,11359],[1266,11338],[1267,11397],[1268,11396],[1269,11338],[1270,11338],[1271,11338],[1272,11358],[1273,11361],[1544,11320],[1545,11320],[1546,11320],[1547,11320],[1559,11320],[1589,11320],[1590,11628],[1621,11404],[1644,11405],[1645,11405],[1646,11405],[1647,11405],[1659,11405],[1660,11405],[1661,11405],[1664,11405],[1666,11405],[1673,11406],[1674,11406],[1675,11406],[1676,11406],[1677,11406],[1678,11406],[1679,11406],[1680,11406],[1681,11406],[1682,11406],[1683,11406],[1684,11406],[1685,11406],[1686,11406],[1687,11406],[1688,11406],[1689,11406],[1690,11406],[1691,11406],[1692,11406],[1693,11406],[1694,11406],[1695,11406],[1696,11406],[1697,11406],[1698,11406],[1699,11406],[1702,11406],[1703,11406],[1712,11406],[1713,11407],[1715,11332],[1716,11332],[1729,11406],[1776,11406],[1779,11406],[1788,11406],[1791,11406],[1834,11406],[1840,11406],[1877,11406],[1879,11408],[1883,11408],[1884,11408],[1885,11408],[1886,11408],[1887,11408],[1888,11408],[1889,11408],[1890,11408],[1891,11408],[1892,11408],[1893,11408],[1894,11408],[1895,11408],[1896,11408],[1897,11408],[1898,11408],[1899,11408],[1900,11408],[1901,11408],[1902,11408],[1903,11408],[1904,11408],[1905,11408],[1906,11408],[1907,11408],[1908,11408],[1909,11408],[1910,11408],[1911,11408],[1912,11408],[1913,11408],[1914,11629],[1915,11629],[1916,11630],[1917,11630],[1918,11630],[1922,11412],[1924,11412],[1944,11412],[1950,11407],[1951,11631],[1952,11631],[1953,11631],[1954,11631],[1957,11632],[1958,11633],[1959,11633],[1960,11633],[1961,11633],[1962,11633],[1963,11633],[1964,11633],[1965,11407],[1966,11332],[1967,11332],[1978,11634],[1979,11635],[1980,11635],[1981,11635],[1982,11634],[1983,11634],[1984,11636],[1985,11634],[1986,11635],[1987,11635],[1988,11635],[1990,11351],[1994,11311],[1995,11421],[1996,11421],[1997,11421],[1998,11401],[2000,11330],[2004,11311],[2006,11311],[2007,11311],[2009,11311],[2014,11311],[2015,11311],[2016,11419],[2019,11419],[2020,11420],[2021,11424],[2022,11423],[2023,11311],[2024,11330],[2025,11330],[2026,11330],[2031,11637],[2032,11311],[2035,11638],[2036,11311],[2041,11639],[2042,11311],[2047,11640],[2048,11311],[2052,11311],[2053,11363],[2054,11363],[2057,11311],[2063,11311],[2064,11311],[2068,11311],[2069,11311],[2070,11351],[2072,11424],[2076,11641],[2077,11596],[2078,11641],[2079,11641],[2080,11642],[2081,11641],[2083,11311],[2084,11311],[2088,11311],[2089,11311],[2093,11311],[2094,11311],[2098,11311],[2099,11311],[2103,11311],[2104,11311],[2106,11431],[2115,11311],[2116,11311],[2118,11353],[2119,11353],[2131,11311],[2134,11311],[2136,11311],[2137,11351],[2141,11642],[2142,11642],[2143,11641],[2144,11642],[2145,11642],[2146,11311],[2147,11311],[2148,11311],[2149,11311],[2151,11423],[2152,11351],[2155,11409],[2159,11311],[2161,11311],[2165,11418],[2171,11643],[2172,11311],[2173,11354],[2174,11330],[2177,11311],[2181,11311],[2182,11311],[2186,11311],[2187,11311],[2191,11311],[2192,11311],[2196,11311],[2197,11311],[2201,11330],[2371,11424],[2385,11353],[2532,11330],[3058,11424],[3059,11424],[3063,11330],[3428,11419],[3429,11419],[3430,11420],[3431,11424],[3432,11423],[3434,11424],[3438,11423],[3439,11424],[3441,11424],[3442,11424],[3443,11419],[3444,11419],[3445,11423],[3450,11423],[3451,11434],[3457,11434],[3460,11434],[3468,11434],[3478,11316],[3485,11316],[3486,11316],[3487,11435],[3503,11316],[3516,11316],[3532,11435],[3539,11316],[3540,11316],[3541,11316],[3542,11316],[3543,11316],[3544,11435],[3545,11316],[3564,11644],[3565,11644],[3566,11644],[3568,11433],[3573,11433],[3574,11433],[3576,11433],[3577,11433],[3652,11433],[3684,11433],[3748,11433],[3831,11453],[3861,11319],[3864,11447],[3865,11447],[3867,11319],[3868,11319],[3869,11319],[3870,11319],[3871,11319],[3872,11319],[3875,11319],[3877,11458],[3889,11319],[3898,11447],[3970,11447],[3980,11447],[4104,11463],[4105,11464],[4106,11464],[4107,11464],[4108,11464],[4109,11464],[4110,11464],[4111,11464],[4112,11464],[4113,11464],[4117,11465],[4122,11466],[4123,11466],[4143,11446],[4177,11446],[4198,11446],[4212,11446],[4213,11446],[4214,11446],[4230,11645],[4231,11645],[4234,11476],[4241,11540],[4243,11546],[4246,11478],[4247,11478],[4248,11542],[4254,11351],[4255,11360],[4256,11483],[4259,11375],[4264,11311],[4265,11421],[4267,11421],[4268,11421],[4269,11484],[4270,11322],[4271,11401],[4273,11445],[4275,11489],[4276,11492],[4278,11524],[4279,11330],[4280,11495],[4282,11524],[4283,11590],[4284,11524],[4287,11646],[4293,11498],[4294,11502],[4299,11311],[4300,11383],[4303,11550],[4305,11311],[4306,11311],[4308,11311],[4309,11480],[4316,11311],[4317,11385],[4318,11532],[4319,11311],[4320,11319],[4323,11517],[4324,11519],[4326,11529],[4331,11419],[4335,11419],[4336,11420],[4337,11533],[4338,11424],[4339,11509],[4340,11423],[4341,11311],[4345,11531],[4346,11531],[4347,11406],[4348,11594],[4349,11406],[4350,11406],[4351,11406],[4352,11406],[4353,11406],[4354,11406],[4355,11406],[4356,11406],[4357,11406],[4358,11406],[4359,11406],[4360,11406],[4361,11367],[4362,11470],[4363,11406],[4364,11406],[4365,11406],[4366,11406],[4367,11406],[4368,11406],[4369,11406],[4370,11406],[4371,11406],[4372,11406],[4373,11406],[4374,11406],[4375,11312],[4376,11380],[4377,11391],[4378,11391],[4379,11366],[4381,11527],[4382,11518],[4390,11520],[4402,11554],[4403,11520],[4404,11520],[4405,11520],[4406,11473],[4407,11499],[4408,11521],[4415,11330],[4416,11330],[4417,11433],[4418,11583],[4419,11472],[4423,11330],[4431,11637],[4432,11556],[4434,11311],[4438,11538],[4439,11638],[4441,11557],[4442,11311],[4449,11639],[4450,11311],[4452,11471],[4459,11530],[4463,11454],[4469,11538],[4470,11640],[4471,11558],[4472,11311],[4473,11545],[4474,11448],[4483,11476],[4486,11476],[4487,11555],[4488,11592],[4495,11646],[4496,11646],[4497,11311],[4498,11363],[4502,11363],[4503,11486],[4504,11592],[4505,11544],[4506,11647],[4508,11406],[4509,11406],[4519,11311],[4527,11311],[4528,11311],[4533,11311],[4534,11311],[4542,11579],[4543,11579],[4544,11579],[4548,11482],[4549,11480],[4553,11351],[4555,11480],[4557,11424],[4558,11447],[4560,11447],[4562,11319],[4563,11319],[4564,11319],[4565,11319],[4566,11319],[4567,11319],[4572,11529],[4582,11641],[4583,11646],[4589,11596],[4590,11641],[4591,11319],[4592,11367],[4593,11641],[4596,11507],[4598,11442],[4599,11450],[4600,11596],[4601,11642],[4602,11641],[4604,11470],[4607,11311],[4608,11311],[4613,11311],[4614,11311],[4619,11311],[4620,11311],[4625,11311],[4626,11311],[4631,11311],[4632,11311],[4635,11526],[4637,11458],[4638,11449],[4639,11566],[4640,11431],[4641,11443],[4642,11413],[4644,11500],[4645,11522],[4646,11522],[4647,11487],[4648,11487],[4649,11487],[4650,11500],[4651,11500],[4652,11500],[4655,11406],[4659,11406],[4671,11470],[4672,11449],[4673,11470],[4674,11469],[4675,11539],[4677,11470],[4678,11470],[4681,11523],[4682,11551],[4684,11523],[4685,11523],[4686,11523],[4690,11518],[4692,11648],[4694,11648],[4695,11648],[4701,11512],[4702,11547],[4703,11449],[4704,11449],[4705,11514],[4712,11470],[4717,11318],[4724,11381],[4725,11377],[4726,11379],[4727,11311],[4729,11584],[4730,11485],[4731,11566],[4732,11591],[4733,11378],[4734,11381],[4735,11311],[4736,11541],[4738,11541],[4740,11353],[4743,11353],[4791,11541],[4796,11582],[4797,11582],[4809,11539],[4811,11380],[4813,11413],[4814,11546],[4826,11541],[4834,11520],[4835,11367],[4836,11367],[4837,11318],[4838,11334],[4839,11311],[4842,11311],[4844,11311],[4849,11476],[4850,11540],[4858,11498],[4859,11351],[4861,11646],[4862,11525],[4863,11529],[4864,11525],[4865,11501],[4867,11529],[4868,11503],[4869,11547],[4872,11642],[4873,11642],[4874,11641],[4875,11642],[4876,11642],[4878,11584],[4879,11311],[4880,11316],[4881,11311],[4882,11311],[4883,11357],[4884,11311],[4885,11320],[4886,11316],[4887,11602],[4888,11448],[4889,11607],[4891,11609],[4893,11535],[4895,11387],[4898,11595],[4899,11364],[4901,11521],[4909,11528],[4910,11528],[4911,11406],[4913,11480],[4921,11423],[4931,11539],[4934,11448],[4935,11516],[4936,11365],[4937,11545],[4938,11649],[4939,11545],[4943,11510],[4944,11650],[4949,11351],[4952,11479],[4953,11513],[4954,11515],[4955,11442],[4958,11442],[4959,11442],[4960,11412],[4965,11553],[4966,11553],[4967,11521],[4968,11315],[4970,11480],[4971,11585],[4972,11564],[4973,11601],[4974,11528],[4975,11494],[4976,11356],[4977,11480],[4990,11407],[4991,11319],[4999,11332],[5000,11332],[5001,11480],[5005,11597],[5007,11518],[5009,11409],[5010,11543],[5018,11434],[5020,11311],[5021,11383],[5023,11536],[5024,11490],[5025,11497],[5027,11311],[5034,11539],[5038,11451],[5039,11418],[5042,11537],[5043,11568],[5052,11471],[5054,11534],[5055,11511],[5057,11531],[5065,11643],[5066,11586],[5068,11311],[5069,11354],[5070,11330],[5074,11606],[5088,11311],[5095,11311],[5096,11311],[5101,11311],[5102,11311],[5107,11311],[5108,11311],[5113,11311],[5114,11311],[5115,11569],[5119,11542],[5121,11433],[5124,11330],[5125,11453],[5128,11506],[5137,11604],[5138,11610],[5142,11531],[5144,11519],[5147,11539],[5148,11539],[5158,11529],[5250,11651],[5254,11651],[5263,11652],[5273,11447],[5275,11653],[5277,11654],[5288,11654],[5299,11655],[5305,11656],[5308,11657],[5321,11658],[5326,11658],[5329,11406],[5335,11659],[5359,11660],[5363,11661],[5367,11662],[5375,11656],[5377,11531],[5628,11663],[5636,11424],[5641,11661],[5652,11656],[5667,11664],[5670,11665],[5672,11665],[5674,11665],[5992,11666],[6001,11654],[6005,11667],[6006,11653],[6008,11668],[6020,11653],[6031,11668],[6033,11669],[6036,11668],[6037,11668],[6038,11669],[6039,11669],[6048,11584],[6049,11670],[6055,11671],[6056,11330],[6064,11672],[6066,11654],[6067,11672],[6069,11672],[6071,11672],[6073,11654],[6074,11672],[6081,11626],[6083,11657],[6084,11659],[6085,11538],[6087,11657],[6088,11657],[6089,11635],[6090,11635],[6091,11635],[6158,11584],[6159,11469],[6418,11576],[6420,11626],[6422,11673],[6565,11674],[6566,11656],[6571,11653],[6572,11653],[6574,11538],[6583,11454],[6584,11454],[6585,11442],[6851,11447],[6877,11406],[6915,11656],[6919,11584],[6923,11406],[6928,11675],[7026,11447],[7030,11654],[7034,11669],[7251,11406],[7260,11656],[7262,11406],[7306,11646],[7308,11646],[7319,11518],[7320,11518],[7401,11676],[7412,11677],[7413,11677],[7415,11678],[7424,11653],[7430,11596],[7431,11608],[7565,11657],[7566,11657],[7568,11679],[7569,11526],[7571,11679],[7572,11680],[7717,11527],[7719,11646],[7720,11681],[7728,11682],[7733,11683],[7736,11684],[7744,11661],[7747,11661],[7753,11670],[7787,11656],[7802,11656],[7814,11541],[7861,11424],[7862,11424],[7867,11655],[7878,11656],[7881,11656],[7889,11685],[7890,11646],[7891,11661],[7901,11661],[7907,11661],[7920,11330],[7931,11661],[7952,11659],[7990,11659],[8001,11686],[8002,11687],[8050,11688],[8073,11661],[8077,11656],[8078,11584],[8130,11316],[8131,11316],[8132,11316],[8133,11316],[8140,11583],[8150,11661],[8181,11654],[8192,11689],[8193,11690],[8195,11691],[8202,11691],[8203,11691],[8205,11677],[8208,11646],[8300,11663],[8303,11406],[8316,11664],[8356,11584],[8374,11406],[8391,11597],[8393,11597],[8411,11676],[8424,11659],[8425,11692],[8427,11692],[8429,11692],[8431,11692],[8433,11692],[8445,11661],[8468,11531],[8472,11657],[9040,11656],[9062,11584],[9222,11531],[9436,11406],[9585,11463],[9586,11464],[9587,11464],[9588,11464],[9589,11464],[9590,11464],[9591,11464],[9592,11464],[9593,11464],[9594,11464],[9598,11408],[9602,11408],[9603,11408],[9604,11408],[9605,11408],[9606,11408],[9607,11408],[9608,11408],[9609,11408],[9610,11408],[9611,11408],[9612,11408],[9613,11408],[9614,11408],[9615,11408],[9616,11408],[9617,11408],[9618,11408],[9619,11408],[9620,11408],[9621,11408],[9622,11408],[9623,11408],[9624,11408],[9625,11408],[9626,11408],[9627,11408],[9628,11408],[9629,11408],[9630,11408],[9631,11408],[9632,11408],[9633,11612],[9634,11613],[9652,11505],[9669,11614],[9671,11614],[9674,11614],[9688,11614],[9720,11614],[9745,11509],[9746,11556],[9747,11557],[9748,11558],[9749,11516],[9750,11601],[9751,11490],[9752,11586],[9805,11693],[9813,11490],[9819,11615],[9820,11490],[9844,11490],[9853,11616],[9855,11616],[9856,11616],[9867,11616],[9886,11548],[9887,11548],[9922,11694],[9934,11548],[9935,11548],[9941,11351],[9945,11311],[9946,11421],[9947,11421],[9948,11421],[9949,11401],[9951,11330],[9955,11311],[9957,11311],[9958,11311],[9960,11311],[9965,11311],[9966,11311],[9967,11419],[9970,11419],[9971,11420],[9972,11424],[9973,11423],[9974,11311],[9975,11330],[9976,11330],[9977,11330],[9982,11637],[9983,11311],[9986,11638],[9987,11311],[9992,11639],[9993,11311],[9998,11640],[9999,11311],[10003,11311],[10004,11363],[10005,11363],[10008,11311],[10014,11311],[10015,11311],[10019,11311],[10020,11311],[10021,11351],[10023,11424],[10027,11641],[10028,11596],[10029,11641],[10030,11641],[10031,11642],[10032,11641],[10034,11311],[10035,11311],[10039,11311],[10040,11311],[10044,11311],[10045,11311],[10049,11311],[10050,11311],[10054,11311],[10055,11311],[10057,11431],[10066,11311],[10067,11311],[10069,11353],[10070,11353],[10082,11311],[10085,11311],[10087,11311],[10088,11351],[10092,11642],[10093,11642],[10094,11641],[10095,11642],[10096,11642],[10097,11311],[10098,11311],[10099,11311],[10100,11311],[10102,11423],[10103,11351],[10106,11409],[10110,11311],[10112,11311],[10116,11418],[10122,11643],[10123,11311],[10124,11354],[10125,11330],[10128,11311],[10132,11311],[10133,11311],[10137,11311],[10138,11311],[10142,11311],[10143,11311],[10147,11311],[10148,11311],[10152,11330],[10165,11424],[10168,11353],[10173,11330],[10190,11424],[10191,11424],[10192,11330],[10210,11419],[10211,11419],[10212,11420],[10213,11424],[10214,11423],[10216,11424],[10220,11423],[10221,11424],[10223,11424],[10224,11424],[10225,11419],[10226,11419],[10227,11423],[10232,11423],[10233,11434],[10234,11434],[10235,11434],[10236,11434],[10237,11677],[10238,11677],[10239,11677],[10240,11579],[10241,11579],[10242,11579],[10246,11563],[10298,11465],[10301,11617],[10321,11629],[10322,11629],[10337,11532],[10340,11533],[10379,11482],[10422,11535],[10454,11536],[10462,11537],[10467,11534],[10492,11482],[10493,11482],[10494,11482],[10495,11482],[10537,11533],[10541,11535],[10547,11618],[10577,11619],[10603,11630],[10604,11630],[10605,11630],[10606,11526],[10609,11526],[10610,11680],[10611,11695],[10612,11696],[10613,11696],[10614,11696],[10615,11696],[10616,11620],[10647,11608],[10658,11608],[10663,11608],[10664,11608],[10677,11412],[10678,11412],[10679,11412],[10680,11511],[10681,11511],[10702,11407],[10705,11407],[10706,11631],[10707,11631],[10708,11631],[10709,11631],[10712,11632],[10713,11633],[10714,11633],[10715,11633],[10716,11633],[10717,11633],[10718,11633],[10719,11633],[10720,11407],[10721,11332],[10722,11332],[10733,11495],[10734,11597],[10735,11497],[10754,11676],[10762,11597],[10764,11597],[10767,11676],[10773,11692],[10775,11692],[10777,11692],[10779,11692],[10781,11692],[10787,11506],[10793,11697],[10794,11697],[10798,11356],[10799,11406],[10801,11443],[10802,11356],[10806,11315],[10807,11624],[10808,11624],[10809,11356],[10819,11315],[10825,11315],[11014,11315],[11136,11315],[11231,11329],[11232,11329],[11255,11318],[11256,11318],[11257,11318],[11259,11318],[11263,11318],[11276,11334],[11277,11334],[11284,11562]],"b":[[26,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[27,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[28,"impl-Add-for-ChunkedArray%3CStringType%3E"],[29,"impl-Add-for-%26ChunkedArray%3CT%3E"],[30,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[31,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[32,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[33,"impl-Add-for-ChunkedArray%3CT%3E"],[34,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[35,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[37,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[39,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[40,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[41,"impl-AggList-for-ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[43,"impl-AggList-for-ChunkedArray%3CListType%3E"],[44,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[48,"impl-ChunkedArray%3CFixedSizeListType%3E"],[49,"impl-ChunkedArray%3CListType%3E"],[50,"impl-ChunkedArray%3CListType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[56,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[57,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[58,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[59,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[60,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[62,"impl-ChunkedArray%3CFixedSizeListType%3E"],[63,"impl-ChunkedArray%3CListType%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[69,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[70,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[71,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[72,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[75,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[77,"impl-ChunkedArray%3CT%3E"],[78,"impl-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CListType%3E"],[83,"impl-ChunkedArray%3CFixedSizeListType%3E"],[84,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[85,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[86,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[87,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[88,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[89,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[90,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[94,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[95,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[98,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[99,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[100,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[101,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[102,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[104,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[105,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[115,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[123,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[124,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[125,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[126,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[127,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-Container-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkedArray%3CT%3E"],[174,"impl-Div-for-%26ChunkedArray%3CT%3E"],[175,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[176,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[177,"impl-Div-for-ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[188,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[189,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[195,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[200,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[201,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[202,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[203,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[205,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[208,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[209,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[210,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[211,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[212,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[213,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[214,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[215,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[218,"impl-Debug-for-ChunkedArray%3CListType%3E"],[219,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-Debug-for-ChunkedArray%3CT%3E"],[221,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[222,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[223,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[224,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[226,"impl-ChunkedArray%3CFixedSizeListType%3E"],[227,"impl-ChunkedArray%3CListType%3E"],[236,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[237,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[238,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[239,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[240,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[241,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[242,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[243,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[244,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[245,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[246,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[248,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[249,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[250,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[251,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[252,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[253,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[254,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[255,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[256,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[257,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[259,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[261,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[263,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[264,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[265,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[266,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[267,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[268,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[269,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[271,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[272,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[274,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[275,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[277,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[278,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[281,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[282,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[283,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[284,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[287,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[288,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[289,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[290,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[291,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[294,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[295,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[296,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[298,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[299,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[300,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[301,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[306,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[307,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[311,"impl-ChunkedArray%3CFixedSizeListType%3E"],[312,"impl-ChunkedArray%3CListType%3E"],[314,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[330,"impl-ChunkedArray%3CFixedSizeListType%3E"],[331,"impl-ChunkedArray%3CListType%3E"],[335,"impl-ChunkedArray%3CFixedSizeListType%3E"],[336,"impl-ChunkedArray%3CListType%3E"],[342,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[343,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[345,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[346,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[347,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[348,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[349,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[350,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[351,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[352,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[353,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[355,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[357,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[359,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[360,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[361,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[362,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[363,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[364,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[366,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[368,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[369,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[378,"impl-ChunkedArray%3CListType%3E"],[379,"impl-ChunkedArray%3CFixedSizeListType%3E"],[388,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[389,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[390,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[391,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[392,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[393,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[394,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[395,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[397,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[398,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-Container-for-ChunkedArray%3CT%3E"],[424,"impl-ChunkedArray%3CT%3E"],[429,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[430,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[431,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[432,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[433,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[434,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[435,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[436,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[437,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[438,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[439,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[440,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[441,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[442,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[443,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[444,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[446,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[447,"impl-ChunkedArray%3CBooleanType%3E"],[448,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[450,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[451,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[452,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[453,"impl-ChunkedArray%3CBooleanType%3E"],[454,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[455,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[456,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[457,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[458,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[459,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[460,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[468,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkedArray%3CBooleanType%3E"],[471,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[472,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[473,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[474,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[475,"impl-ChunkedArray%3CBooleanType%3E"],[476,"impl-ChunkedArray%3CT%3E"],[477,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[478,"impl-Mul-for-ChunkedArray%3CT%3E"],[479,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[480,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[483,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[484,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[485,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[487,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[488,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[489,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[490,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[491,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[492,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[493,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[494,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[495,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[496,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[497,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[498,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[500,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[504,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[507,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[508,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[509,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[510,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[511,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[513,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[514,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[519,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[520,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[523,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[526,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[527,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[530,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[531,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[532,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[533,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[534,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[535,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[536,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[537,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[544,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[545,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[547,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[548,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[549,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[550,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[551,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[552,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[553,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[554,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[555,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[556,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[557,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[558,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[559,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[560,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[561,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[562,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[566,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[567,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[569,"impl-ChunkedArray%3CListType%3E"],[570,"impl-ChunkedArray%3CStringType%3E"],[571,"impl-ChunkedArray%3CStringType%3E"],[572,"impl-ChunkedArray%3CListType%3E"],[575,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[576,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[577,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[578,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[579,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[580,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[594,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[595,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[596,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[597,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[598,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[609,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[610,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[611,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[612,"impl-Rem-for-ChunkedArray%3CT%3E"],[615,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[616,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[617,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[618,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[619,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[620,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[621,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[622,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[627,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[628,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[629,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[630,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[631,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[632,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[633,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[634,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[635,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[636,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[637,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[638,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[639,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[640,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[641,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[647,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[648,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[649,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[650,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[651,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[652,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[653,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[654,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[655,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[656,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[657,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[658,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[659,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[660,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[661,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[662,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[664,"impl-Container-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkedArray%3CT%3E"],[666,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[667,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[668,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[669,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[670,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[671,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[672,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[673,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[674,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[675,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[676,"impl-Container-for-ChunkedArray%3CT%3E"],[677,"impl-ChunkedArray%3CT%3E"],[679,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[680,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[681,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[682,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[683,"impl-Sub-for-ChunkedArray%3CT%3E"],[684,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[685,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[687,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[690,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[691,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[693,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[694,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[697,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[699,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[700,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[701,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[702,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[707,"impl-ChunkedArray%3CListType%3E"],[708,"impl-ChunkedArray%3CFixedSizeListType%3E"],[709,"impl-ChunkedArray%3CT%3E"],[710,"impl-ChunkedArray%3CListType%3E"],[715,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[716,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[717,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[718,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[719,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[720,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[722,"impl-ChunkedArray%3CListType%3E"],[723,"impl-ChunkedArray%3CFixedSizeListType%3E"],[736,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[737,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[738,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[739,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[740,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[745,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[746,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[747,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[748,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[749,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[750,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[751,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[752,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[753,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[754,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[755,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[756,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[757,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[758,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[759,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[760,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[761,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[762,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[763,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[764,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[765,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[766,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[767,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[768,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[770,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[771,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[773,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[774,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[789,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[805,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[806,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[807,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[808,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[809,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[810,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1003,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1004,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1294,"impl-Flags-for-MetadataProperties"],[1295,"impl-MetadataProperties"],[1296,"impl-Flags-for-MetadataFlags"],[1297,"impl-MetadataFlags"],[1362,"impl-Metadata%3CT%3E"],[1363,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1388,"impl-Debug-for-MetadataProperties"],[1389,"impl-Binary-for-MetadataProperties"],[1390,"impl-Octal-for-MetadataProperties"],[1391,"impl-UpperHex-for-MetadataProperties"],[1392,"impl-LowerHex-for-MetadataProperties"],[1393,"impl-Binary-for-MetadataFlags"],[1394,"impl-Debug-for-MetadataFlags"],[1395,"impl-Octal-for-MetadataFlags"],[1396,"impl-UpperHex-for-MetadataFlags"],[1397,"impl-LowerHex-for-MetadataFlags"],[1407,"impl-MetadataProperties"],[1408,"impl-Flags-for-MetadataProperties"],[1409,"impl-MetadataFlags"],[1410,"impl-Flags-for-MetadataFlags"],[1423,"impl-Metadata%3CT%3E"],[1424,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1467,"impl-Metadata%3CT%3E"],[1468,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1472,"impl-Metadata%3CT%3E"],[1473,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1550,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1551,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1585,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1586,"impl-ObjectArray%3CT%3E"],[1601,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1602,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1612,"impl-ObjectArray%3CT%3E"],[1613,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1615,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1616,"impl-ObjectArray%3CT%3E"],[1618,"impl-ObjectArray%3CT%3E"],[1619,"impl-Array-for-ObjectArray%3CT%3E"],[1622,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1623,"impl-ObjectChunkedBuilder%3CT%3E"],[1625,"impl-ObjectChunkedBuilder%3CT%3E"],[1626,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2375,"impl-Logical%3CDurationType,+Int64Type%3E"],[2376,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2378,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2379,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2380,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2381,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2382,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2689,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2690,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2691,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2692,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2693,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2702,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2703,"impl-PartialEq-for-DataType"],[2709,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2710,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2711,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2713,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2749,"impl-Debug-for-AnyValue%3C\'a%3E"],[2750,"impl-Display-for-AnyValue%3C\'_%3E"],[2752,"impl-Debug-for-DataType"],[2753,"impl-Display-for-DataType"],[2755,"impl-Display-for-TimeUnit"],[2756,"impl-Debug-for-TimeUnit"],[2761,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2763,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2777,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2778,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2779,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2780,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2782,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2784,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2786,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2787,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2788,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2790,"impl-From%3C%26ArrowField%3E-for-Field"],[2813,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2815,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2838,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2839,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2840,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2841,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2842,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2846,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2847,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2848,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2849,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2850,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2886,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2887,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2888,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2890,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2891,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2892,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2996,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2997,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2998,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2999,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3000,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3050,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3051,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3052,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3054,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3055,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3093,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3094,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3095,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3096,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3097,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3098,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3099,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3100,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3107,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3108,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3109,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3117,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3118,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3139,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3140,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3147,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3148,"impl-Logical%3CDurationType,+Int64Type%3E"],[3154,"impl-Logical%3CDateType,+Int32Type%3E"],[3155,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3156,"impl-Logical%3CTimeType,+Int64Type%3E"],[3171,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3172,"impl-Logical%3CDurationType,+Int64Type%3E"],[3220,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3221,"impl-Logical%3CDateType,+Int32Type%3E"],[3222,"impl-Logical%3CTimeType,+Int64Type%3E"],[3228,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3229,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3518,"impl-Debug-for-ErrString"],[3519,"impl-Display-for-ErrString"],[3520,"impl-Display-for-PolarsError"],[3521,"impl-Debug-for-PolarsError"],[3525,"impl-From%3CError%3E-for-PolarsError"],[3527,"impl-From%3CError%3E-for-PolarsError"],[3528,"impl-From%3CParquetError%3E-for-PolarsError"],[3529,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3530,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3531,"impl-From%3CError%3E-for-PolarsError"],[3661,"impl-Display-for-DataFrame"],[3662,"impl-Debug-for-DataFrame"],[3695,"impl-Index%3Cusize%3E-for-DataFrame"],[3696,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3697,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3698,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3699,"impl-Index%3C%26str%3E-for-DataFrame"],[3700,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3701,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3702,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3721,"impl-Container-for-DataFrame"],[3722,"impl-DataFrame"],[3729,"impl-DataFrame"],[3730,"impl-Container-for-DataFrame"],[3768,"impl-Container-for-DataFrame"],[3769,"impl-DataFrame"],[3773,"impl-DataFrame"],[3774,"impl-Container-for-DataFrame"],[3795,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3797,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3978,"impl-Debug-for-GroupByMethod"],[3979,"impl-Display-for-GroupByMethod"],[3985,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3986,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3987,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4022,"impl-IntoIterator-for-GroupsIdx"],[4023,"impl-IntoIterator-for-%26GroupsIdx"],[4025,"impl-IntoParallelIterator-for-GroupsIdx"],[4026,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5361,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5362,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[6135,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6136,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6137,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6147,"impl-Default-for-Arc%3CCStr%3E"],[6148,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6149,"impl-Default-for-Arc%3Cstr%3E"],[6150,"impl-Default-for-Arc%3CT%3E"],[6626,"impl-Expr"],[6627,"impl-PartialEq-for-Expr"],[6630,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6631,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6648,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6649,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6650,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6655,"impl-PartialEq-for-StructArray"],[6656,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6937,"impl-Display-for-Duration"],[6938,"impl-Debug-for-Duration"],[6958,"impl-Display-for-JoinType"],[6959,"impl-Debug-for-JoinType"],[6961,"impl-Display-for-JoinValidation"],[6962,"impl-Debug-for-JoinValidation"],[6977,"impl-Display-for-Expr"],[6978,"impl-Debug-for-Expr"],[6980,"impl-Debug-for-Operator"],[6981,"impl-Display-for-Operator"],[6983,"impl-Debug-for-BooleanFunction"],[6984,"impl-Display-for-BooleanFunction"],[6985,"impl-Display-for-CategoricalFunction"],[6986,"impl-Debug-for-CategoricalFunction"],[6987,"impl-Display-for-TemporalFunction"],[6988,"impl-Debug-for-TemporalFunction"],[6989,"impl-Display-for-PowFunction"],[6990,"impl-Debug-for-PowFunction"],[6991,"impl-Display-for-StringFunction"],[6992,"impl-Debug-for-StringFunction"],[6993,"impl-Display-for-StructFunction"],[6994,"impl-Debug-for-StructFunction"],[6995,"impl-Debug-for-FunctionExpr"],[6996,"impl-Display-for-FunctionExpr"],[7010,"impl-Pointer-for-Arc%3CT,+A%3E"],[7011,"impl-Debug-for-Arc%3CT,+A%3E"],[7012,"impl-Display-for-Arc%3CT,+A%3E"],[7044,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7045,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7124,"impl-From%3Ci16%3E-for-Expr"],[7125,"impl-From%3Ci64%3E-for-Expr"],[7126,"impl-From%3Cu16%3E-for-Expr"],[7127,"impl-From%3Ci32%3E-for-Expr"],[7128,"impl-From%3Cu32%3E-for-Expr"],[7129,"impl-From%3Cf32%3E-for-Expr"],[7130,"impl-From%3Cu64%3E-for-Expr"],[7131,"impl-From%3CAggExpr%3E-for-Expr"],[7132,"impl-From%3Ci8%3E-for-Expr"],[7133,"impl-From%3Cu8%3E-for-Expr"],[7134,"impl-From%3C%26str%3E-for-Expr"],[7136,"impl-From%3Cf64%3E-for-Expr"],[7137,"impl-From%3Cbool%3E-for-Expr"],[7140,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7141,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7142,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7143,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7144,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7145,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7146,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7147,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7148,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7149,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7158,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7159,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7160,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7161,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7176,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7177,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7178,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7180,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7181,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7182,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7183,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7184,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7185,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7186,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7187,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7188,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7190,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7191,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7192,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7200,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7201,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7203,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7204,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7205,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7206,"impl-From%3CArrowSchema%3E-for-Schema"],[7208,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7209,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7223,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7224,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7232,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7233,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7245,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7246,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8361,"impl-Array-for-StructArray"],[8362,"impl-StructArray"],[8370,"impl-StructArray"],[8371,"impl-Array-for-StructArray"],[9065,"impl-StructArray"],[9066,"impl-Array-for-StructArray"],[9312,"impl-LazyCsvReader"],[9313,"impl-LazyFileListReader-for-LazyCsvReader"],[9314,"impl-LazyJsonLineReader"],[9315,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9362,"impl-LazyCsvReader"],[9363,"impl-LazyFileListReader-for-LazyCsvReader"],[9364,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9365,"impl-LazyJsonLineReader"],[9404,"impl-StructArray"],[9405,"impl-Array-for-StructArray"],[9873,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9874,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9879,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9880,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10561,"impl-Debug-for-RollingFunction"],[10562,"impl-Display-for-RollingFunction"],[10591,"impl-Display-for-RollingFunctionBy"],[10592,"impl-Debug-for-RollingFunctionBy"],[10815,"impl-Add%3CT%3E-for-Series"],[10816,"impl-Add%3CT%3E-for-%26Series"],[10817,"impl-Add-for-Series"],[10818,"impl-Add-for-%26Series"],[10834,"impl-AsSeries-for-Series"],[10835,"impl-SeriesSealed-for-Series"],[10888,"impl-Div-for-Series"],[10889,"impl-Div%3CT%3E-for-Series"],[10890,"impl-Div-for-%26Series"],[10891,"impl-Div%3CT%3E-for-%26Series"],[10902,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10903,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10904,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10906,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10907,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10908,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10924,"impl-Display-for-Series"],[10925,"impl-Debug-for-Series"],[10930,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10931,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10933,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10934,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10935,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10942,"impl-FromIterator%3C%26i64%3E-for-Series"],[10943,"impl-FromIterator%3Cu32%3E-for-Series"],[10944,"impl-FromIterator%3C%26str%3E-for-Series"],[10945,"impl-FromIterator%3C%26i32%3E-for-Series"],[10946,"impl-FromIterator%3Ci32%3E-for-Series"],[10947,"impl-FromIterator%3C%26bool%3E-for-Series"],[10948,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10949,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10950,"impl-FromIterator%3Ci64%3E-for-Series"],[10951,"impl-FromIterator%3C%26f32%3E-for-Series"],[10952,"impl-FromIterator%3Ci8%3E-for-Series"],[10953,"impl-FromIterator%3C%26i16%3E-for-Series"],[10954,"impl-FromIterator%3C%26u32%3E-for-Series"],[10955,"impl-FromIterator%3Cf64%3E-for-Series"],[10956,"impl-FromIterator%3C%26u64%3E-for-Series"],[10957,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10958,"impl-FromIterator%3Cf32%3E-for-Series"],[10959,"impl-FromIterator%3Ci16%3E-for-Series"],[10960,"impl-FromIterator%3CString%3E-for-Series"],[10961,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10962,"impl-FromIterator%3Cu64%3E-for-Series"],[10963,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10964,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10965,"impl-FromIterator%3C%26u16%3E-for-Series"],[10966,"impl-FromIterator%3C%26f64%3E-for-Series"],[10967,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10968,"impl-FromIterator%3Cbool%3E-for-Series"],[10969,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10970,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10971,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10972,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10973,"impl-FromIterator%3Cu16%3E-for-Series"],[10974,"impl-FromIterator%3C%26i8%3E-for-Series"],[10975,"impl-FromIterator%3C%26u8%3E-for-Series"],[10976,"impl-FromIterator%3Cu8%3E-for-Series"],[10977,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10978,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[10979,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10980,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10981,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10982,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10983,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10984,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10985,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10986,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10987,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10999,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11000,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11001,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11003,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11004,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11005,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11046,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11047,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11048,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11050,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11051,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11052,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11061,"impl-Mul-for-%26Series"],[11062,"impl-Mul%3CT%3E-for-%26Series"],[11063,"impl-Mul-for-Series"],[11064,"impl-Mul%3CT%3E-for-Series"],[11069,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11070,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11071,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11072,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11073,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11074,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11075,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11076,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11077,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11078,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11079,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11080,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11081,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11082,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11083,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11084,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11085,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11086,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11087,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11088,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11089,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11090,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11091,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11092,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11093,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11094,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11095,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11096,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11097,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11098,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11099,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11100,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11101,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11102,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11103,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11104,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11105,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11106,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11107,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11108,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11109,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11110,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11111,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11112,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11113,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11114,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11115,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11116,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11117,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11118,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11119,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11120,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11121,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11127,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11128,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11129,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11131,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11132,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11133,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11141,"impl-Rem-for-%26Series"],[11142,"impl-Rem%3CT%3E-for-Series"],[11143,"impl-Rem%3CT%3E-for-%26Series"],[11172,"impl-Sub%3CT%3E-for-%26Series"],[11173,"impl-Sub-for-%26Series"],[11174,"impl-Sub-for-Series"],[11175,"impl-Sub%3CT%3E-for-Series"],[11199,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11201,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11202,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11203,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAADoPhg/DD8YPxw/ID8kPyg/PD9IP1w/YD/0P","e":"OzAAAAEAAHsgNwQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoAOAAFAEIAAgBGAAoAVQAHAF4ACABpAAEAbAAEAHIAFgCLABAAnwADAKQAAQCqAA0AuQATAM4ACgDaAAoA5gAAAOgAAQDsAB0AEAEUACcBEgA7ARQAUgEBAFcBHgB4AQIAgAEQAJIBAwCZAQIAngEBAKEBBwCuASEA1QEGAN4BCADoATQAIQITADYCAgA6AgQAQAIFAEoCAABMAhoAaAIHAHQCEQCIAg8AmQIAAJsCCgCnAg0AuAIBAL8CAADBAgEAyAIAAMwCBwDWAgEA2QIMAOcCAADpAigAFAMAABYDIwA8AzQAcwMIAIADEQCVA1wA/wMSAB0EBwAmBEkAcwQPAIQEAQCHBBkAogQAAKUEFAC+BAMAxgQDAMwEIQDvBAkA+gQKAA8FAAARBQAAFwUgADwFEgBRBQAAUwUJAF8FAwBlBQEAaQUNAIEFAACDBQAAhgUBAIwFBwCVBQcAqgUBAK4FAACxBQMAuQUFAMAFBADMBQsA3wUEAOYFDQD2BQYAAAYHAAkGAQANBhYAJQYHAC4GAAAxBgEANAYBADkGEABLBgAATgYAAFAGAgBUBgMAWQYAAFsGCABlBgAAZwYFAG8GAQByBgAAdAYBAHcGAwB8BgMAgQYCAIUGAwCLBgAAjgYAAJYGAACbBgAAngYBAKMGAQCmBgAAqQYAALEGAAC3BgIAwgYGAMwGEgDhBgUA6QYIAPQGAwD5BgEA/QYAAP8GAQAFBwUADgcBABcHAQAjBwAAJQcBACgHAAArBwAALQcAADEHAAAzBwAAOAcMAEcHAgBWBwAAWAcHAGEHAgBnBwAAaQcDAG4HAQBxBwUAfQcXAJYHAQCaBwQAoAcDAKcHBgC7BwMAwAcIAMoHBADRBwIA1QcFAN0HAADfBwwA8AcBAPQHAQD6BwEA/QcBAAAIAwAFCAAABwgAAAoIAQAOCAAAEAgBABMIAAAVCAIAGQgMACcIAAApCAEALAgAAC4IAQAxCAAAMwgBADYIAAA4CAEAOwgBAEAIAABECAEASAgAAEsIAABNCAAATwgDAFQIAABXCAgAYQgBAGQIBQBsCAEAcAgAAHIIAgB3CAAAfAgDAIEIAQCECAAAhggBAIkIAACLCAEAjggAAJAIAQCTCAAAlQgBAJgIAACaCAAAnQgmAMUIGADfCGcASgmSAN4JBwDoCZgAggoHAIsKKAC1CgEAuAoPAMoKAADMCgAA2goDAN8KAADhCgAA4woCAOcKAADpCgAA/goAAAALAAACCwAACgsAAA0LAAAPCwYAFwsEAB0LAAAfCwQAJQsBACgLGQBHCw8AWQsrAIYLAACyCwoAvwsAAMELAQDECwQAygsBAM8LAADRCwUA2AsAANsLAgDgCwQA5gsAAOkLEAD8CwAA/wsPABAMAAATDA0AIgwNADEMAAAzDAEANwwPAEgMAABQDAAAUgwAAFcMEABqDAAAbAwCAHEMIQCYDGUA/wwvADANAgA0DTUAaw0BAG4NCAB4DQAAeg0BAH0NBACDDQEAiA0AAIoNAgCODQAAkQ0EAJcNBACdDRIAsQ0RAMQNAADGDQAAyA0IANQNBADaDRUA8w0AAPYNCgACDgIACg4WACMOEAA9DgEAQQ4CAEUOAABHDgAATA4DAFUOAQBlDgAAZw4AAGkOAQBwDgwAgw4CAIoOAACODgAAkw4AAJcOAQCkDgEAqA4AAK4OAAC3DgIAuw4AAL8OAgDHDgAAyQ4DANAOBgDZDgkA5A4AAOkOAQDtDgQA+Q4OAAkPAgANDwAADw8JABoPAQAdDwMAIg8DACcPCQAyDwcAOw8BAD4PHQBdDygAhw8GAJIPAgCXDwAAmg8EAKEPAAClDwcAtQ8NAMQPAQDLDwMA0A8BANQPAgDZDwAA2w8fAP4PDAANEAUAFBAHAB0QIwBDEA4AUxAOAGMQAABlEAAAZxADAG4QBgB4EA4AiRAFAJEQAACUEAgAnhABAKIQBACoEAUArxAAALQQCQC/EAEAwxAEAMkQAQDMEAoA2BAAANsQAADdEAkA6BAAAOoQCQD1EAQA/hAAAAERAAAJEQIAEBEAABMRAQAZEQoAJRERADoRBwBDEQEARhEFAFARBABYEQQAYhEDAGcRAABpEQsAdxEKAIQRAQCIEQAAixEAAI0RBQCUEQUAmxEEAKERAwCoEQIArhEAALARAQC0EQAAthEEAL0RDwDOEQAA0REBANQRAwDaEQIA4BEWAPgRCQAEEgAABhIBAAoSAAAMEgEAEBIAABISAQAWEgAAGBIEAB8SAgAjEgEAJxIAACoSAAAsEgMAMRICADUSCABAEgcASRIAAEsSAABPEgEAUxIAAFUSAABXEgEAWhIBAF0SAQBiEgAAZBINAHUSBQB8EgcAhhICAIoSBgCVEgEAmBIAAJoSAQCdEgQAoxIDAKgSAgCsEgAArhIEALQSAAC2EgUAvRIEAMMSAQDGEgEAyRIBAMwSAQDPEgAA0RIAANQSAADXEgIA3BIDAOESBwDrEgIA8hIAAPQSBQD7EgQAARMAAAQTAAAGEwQADBMDABETAgAVEwAAFxMOACcTFQA+ExMAUxMIAF0TBQBmEwEAahMAAGwTBQBzEwQAeRMAAHsTAgCAEwAAghMAAIYTAQCLEwcAlBMDAJwTBgCkEwkAsRMCALUTBwC+EwIAwxMCAMoTBQDRExIA5hMAAOgTAQDsEwAA7hMBAPITAAD0EwEA+BMAAPoTAwAAFAMABRQAAAcUAQANFAkAGBQAABsUBgAkFAIAKBRcAIYUAgCNFAAAjxQAAJIUBQCaFAAAoRQAAKUUAACnFAAAqxQFALUUAAC5FAAAwBQAAMQUAADQFAIA1BQEANoUAADcFAEA3xQBAOUUAQDoFAQA7hQBAPYUCgADFfgA/RUBAAAWAQADFgAABRYCAAsWAAAPFgAAExYAABUWAAAXFgAAHRYAACAWAQAjFgAALRZNAHwWCwCJFtwAZxcBAGwXAQBwFwAAdBcCAHoXCgCIFwQAkhcAAJQXAACeFwEAohcAAKQXAACpFwAAqxcBALAXAQC/FwAAxRcAAMoXAgDQFwAA0hcFANoXKQAIGAEBDBkAABEZAQAUGQMAGhkAABwZAwAkGQgALhljAJMZDQCmGQEAqxkAAK4ZAACyGQMAtxkrAOQZFQD7GQsAChqtALwaAADBGgAAwxoEAMkaAADNGgAA0xoAANUaAADeGgAA4RoAAOkaAADsGgIA8xoGAPsaAQD+GgAAABsDAAgbAAAKGwAADBsBABEbYwB2GwAAeRsAAIUbAQCpGwAAshsAALkbAADVGwoA4RsBAOUbCQD3GwMAARwAABYcAAAbHAAAIRwBACQcAwApHAEALBwAADIcAAA1HAQAOxwAAEEcAQBFHAIASxwFAFIcAgBWHAEAWhwBAF0cAABfHAAAYRwAAGYcAABvHAAAchwBAHUcAgB6HAAAfBwBAIEcAQCEHAEAiBwEAJEcAQCVHAAAoBwAAKIcQADmHAMA7hwAAPAcAADyHAMA+BwAAPocAAD9HAAAAB0AAAUdAgAKHX4Aix0AAJAdAgCUHQEAEh4AABQeBgAeHgIAIh4FACoeAQAtHgIAMR4BADQeAAA2HgAAOR4BAEYeAABIHgAASx4BAE4eAwBUHgIAYx4BAGYeAQBvHgAAcR4BAHQeAAB4HgIAfh4BAIEeAACEHgAAiR4CAI4eAQCSHgIAlh4DAJweDgCwHgAAth4BAL0eAADAHgUAyR4AANEeAgDdHgAA5x4AAO0eAQDxHgAA9R4BAPgeAAD7HgAAAB8AAAIfAAAEHwAACR8AAA0fAAAPHwIAFh8GACMfCAAxHwAAMx8AADcfAAA9HwAAPx8EAEgfAQBLHwEATh8AAFEfCQBdHwEAYB8AAGMfAQBzHwAAdh8BAHkfAQCDHwYAjx8CAJcfAQCeHwIAoh8BAKwfAACuHwMAsx8FALofAwDDHwMAyB8AAMwfAgDSHwAA1R8AAOEfAADkHwEA5x8BAOofAwDwHwUA9x8EAAIgAAAIIAAADiAAABAgAQAVIAAAGSAAABsgAAAdIAEAQCAAAEUgAABPIAMAVCAFAFwgAABlIAAAaSACAG0gAwB0IAAAdiABAHkgAQB8IAEAfyAAAIQgAwCLIAAAliAAAJggAACaIAAAoSAEAKogAACsIAAAsCAAALIgAAC0IAAAtyAAALkgAAC/IAMAxCAHAM0gAADPIAAA0yAAANkgAADcIAAA4iAAAOkgCgD2IAIA+yACAAYhAAAVIQAAFyEAABohAgAeIQMAJCEBACchAAAqIQAALiFcAI0hDACbIQAAnyEAAKIhCgCuIQAAsCEBALMhiQA/IgAAQyJ6AMEiAADDIgMAziIAANEiAQDWInkAUSMAAF4jAABlIwQAayMBAG8jAAByIwAAdiMAAHwjAAB+IwAAgCN6AAIkAwALJAAADiQBABMkAQAYJAAAGiQAACIkAAArJAAAMSQAADwkAABDJAEAUSQBAGIkAABkJAAAZyQAAGokAABtJAAAcyQBAHYkBQCAJAAAjSQAAJQkAQCZJAAAoSQAAKUkAAC0JAAAtiQBAL4kAQDDJBQA3CQBAN8kSAAqJQAALCUAAC4lAQAxJQEANCUGADwlNwB2JQUAfSUJAIglAgCOJQAAkCUDAJUlAQCYJQUAoiUSALYlAQC5JQIAviUAAMElFgDZJRcA9SUEAP4lEwATJgYAKiYAADgmAgBOJgAAViYIAGMmAABlJg0AdCYCAHgmEgCMJgEAjyYPAKAmGAC7JgAAvSYCAMImDADQJgcA2SYEAOAmAgDkJgUA7CYAAO4mDAD/JgEAAycBAAknAQAMJwEADycDABQnAAAWJwAAGScBAB0nAAAfJwEAIicAACQnAgAoJwwANicAADgnAQA7JwAAPScBAEAnAABCJwEARScAAEcnAQBKJwEATycAAFMnAQBXJwAAWicAAFwnAABeJwMAYycAAGYnCABwJwEAcycFAHsnAQB/JwAAgScCAIYnAACLJwMAkCcBAJMnAACVJwEAmCcAAJonAQCdJwAAnycBAKInAACkJwEApycAAKknAACsJxIAwCcGAMknAADMJxEA3ycIAOknAQDsJwgA9icAAPgnAQD+JwAAACgEAAkoAQASKAIAGCgAABooAAAkKAAAMygDADsoCgBHKAAASSgIAFQo7wBFKQEASCkZAGMpAQBmKQ4AdykSAIspAACNKRcApikBAKopAACsKQsAuSkCAMApAADTKQMA2ikGAO4pBQD2KQAA/ykAAAEqAQAIKgYAECoAABYqCgAqKgUAMSoAADMqAwA4KgUAQCoEAEYqAQBKKgAAUCoEAFkqAgBdKgkAaioCAG4qAAByKgIAdioEAH8qEQCUKgEAmCoBAJwqAQCgKgIArCoDALMqAQC2KgIAuyoBAL4qLwDxKgAA8yoAAPkqAQD8KgAA/ioAAAArAAAGKwEACSsDABErAwAcKwIAICsAACIrAAAlKwAAJysAACkrAAAsKwEAMSsAADYrAwA7KwAAPisJAEkrKQB1KwEAeCsBAHwrAAB+KwAAgSsBAIYrAgCLKwEAjisAAJErAgCXKwEAmisAAJwrAACeKwAAoisAAKUrAwCuKwAAtisAALgrAQC7Kw4AyysEANYrAADZKwMA3isAAOErCwDuKwAA8CsAAPIrBAD4KxYAESwBABUsEAAnLAEAKiwEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNOONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHRTKFKINNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFFNNHHHHHHHNHHEHNNNNNNNNMNNNNNNNHHNNHHNNNNNNNNNNNNNNNNNHHNNNNNNNNCNNNNNNNNNMNNNNNHHHHNNONNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNNNHNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","interior_mut_metadata","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unpivot","unpivot2","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgs","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_names_and_dtypes","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_project","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","DataType","IS_ARROW","IndexOfSchema","Schema","SchemaNamesAndDtypes","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","ensure_matching_schema","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","BitRepr","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Large","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flatten","fmt","fold_options","from","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","hash","implode_list","init","init","init","init","into","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","to_owned","trust_my_length","try_from","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[441,"polars_core::chunked_array::arithmetic"],[469,"polars_core::chunked_array::builder"],[577,"polars_core::chunked_array::builder::list"],[731,"polars_core::chunked_array::cast"],[761,"polars_core::chunked_array::collect"],[775,"polars_core::chunked_array::float"],[777,"polars_core::chunked_array::from_iterator_par"],[781,"polars_core::chunked_array::iterator"],[818,"polars_core::chunked_array::iterator::par"],[820,"polars_core::chunked_array::metadata"],[1110,"polars_core::chunked_array::object"],[1187,"polars_core::chunked_array::object::builder"],[1210,"polars_core::chunked_array::object::registry"],[1238,"polars_core::chunked_array::ops"],[1364,"polars_core::chunked_array::ops::arity"],[1399,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1401,"polars_core::chunked_array::ops::gather"],[1404,"polars_core::chunked_array::ops::search_sorted"],[1435,"polars_core::chunked_array::ops::sort"],[1442,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1443,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1450,"polars_core::chunked_array::ops::sort::options"],[1528,"polars_core::chunked_array::temporal"],[1529,"polars_core::chunked_array::temporal::conversion"],[1532,"polars_core::config"],[1536,"polars_core::datatypes"],[3000,"polars_core::datatypes::categorical"],[3141,"polars_core::datatypes::categorical::revmap"],[3196,"polars_core::datatypes::categorical::string_cache"],[3215,"polars_core::datatypes::revmap"],[3221,"polars_core::datatypes::string_cache"],[3225,"polars_core::error"],[3290,"polars_core::error::PolarsError"],[3294,"polars_core::error::constants"],[3297,"polars_core::export"],[3305,"polars_core::fmt"],[3337,"polars_core::frame"],[3610,"polars_core::frame::explode"],[3640,"polars_core::frame::group_by"],[3880,"polars_core::frame::group_by::GroupByMethod"],[3881,"polars_core::frame::group_by::GroupsProxy"],[3883,"polars_core::frame::group_by::aggregations"],[3896,"polars_core::frame::group_by::expr"],[3899,"polars_core::frame::row"],[3996,"polars_core::functions"],[3998,"polars_core::hashing"],[4046,"polars_core::prelude"],[4630,"polars_core::prelude::PolarsError"],[4634,"polars_core::prelude::default_arrays"],[4640,"polars_core::prelude::list"],[4663,"polars_core::prelude::null"],[4694,"polars_core::prelude::revmap"],[4700,"polars_core::prelude::slice"],[4703,"polars_core::prelude::string_cache"],[4707,"polars_core::prelude::utf8"],[4711,"polars_core::random"],[4712,"polars_core::schema"],[4793,"polars_core::series"],[5207,"polars_core::series::amortized_iter"],[5231,"polars_core::series::arithmetic"],[5256,"polars_core::series::arithmetic::checked"],[5264,"polars_core::series::ops"],[5292,"polars_core::utils"],[5438,"polars_core::utils::flatten"],[5443,"dyn_clone::sealed"],[5444,"num_traits"],[5445,"num_traits::cast"],[5446,"polars_error"],[5447,"polars_core::series::arithmetic::borrowed"],[5448,"polars_core::frame::group_by::proxy"],[5449,"core::option"],[5450,"core::iter::traits::iterator"],[5451,"core::ops::function"],[5452,"core::marker"],[5453,"polars_core::datatypes::dtype"],[5454,"alloc::string"],[5455,"polars_core::datatypes::aliases"],[5456,"polars_core::series::arithmetic::borrowed::checked"],[5457,"polars_arrow::array"],[5458,"alloc::vec"],[5459,"core::iter::traits::double_ended"],[5460,"core::fmt"],[5461,"core::iter::traits::collect"],[5462,"core::result"],[5463,"polars_utils::iter::fallible"],[5464,"polars_arrow::bitmap::immutable"],[5465,"rayon::iter"],[5466,"polars_arrow::trusted_len"],[5467,"polars_core::datatypes::any_value"],[5468,"polars_utils::index"],[5469,"std::sync::rwlock"],[5470,"polars_core::chunked_array::logical::decimal"],[5471,"core::iter::traits::exact_size"],[5472,"polars_core::series::series_trait"],[5473,"core::slice::iter"],[5474,"core::iter::adapters::map"],[5475,"polars_core::chunked_array::metadata::guard"],[5476,"polars_core::chunked_array::metadata::interior_mutable"],[5477,"alloc::sync"],[5478,"polars_core::chunked_array::metadata::md_trait"],[5479,"core::convert"],[5480,"core::ops::range"],[5481,"polars_core::datatypes::field"],[5482,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5483,"polars_core::chunked_array::ops::rolling_window"],[5484,"ahash::random_state"],[5485,"polars_utils::hashing"],[5486,"ndarray::aliases"],[5487,"either"],[5488,"core::any"],[5489,"polars_core::chunked_array::arithmetic::numeric"],[5490,"polars_core::chunked_array::builder::string"],[5491,"polars_arrow::array::binview"],[5492,"polars_core::chunked_array::builder::boolean"],[5493,"polars_core::chunked_array::builder::null"],[5494,"polars_core::chunked_array::builder::primitive"],[5495,"core::clone"],[5496,"polars_core::chunked_array::builder::list::anonymous"],[5497,"polars_core::chunked_array::builder::list::boolean"],[5498,"polars_core::chunked_array::builder::list::primitive"],[5499,"polars_core::chunked_array::builder::list::binary"],[5500,"polars_core::chunked_array::builder::list::null"],[5501,"alloc::boxed"],[5502,"core::hash"],[5503,"polars_arrow::array::boolean"],[5504,"polars_core::chunked_array::metadata::env"],[5505,"polars_core::chunked_array::metadata::collect"],[5506,"bitflags::iter"],[5507,"std::fs"],[5508,"std::sync::mutex"],[5509,"polars_arrow::datatypes"],[5510,"polars_arrow::bitmap::utils::iterator"],[5511,"polars_arrow::bitmap::utils::zip_validity"],[5512,"polars_arrow::offset"],[5513,"polars_arrow::array::static_array"],[5514,"core::error"],[5515,"polars_arrow::array::primitive"],[5516,"polars_arrow::legacy::array::slice"],[5517,"polars_row::row"],[5518,"chrono::naive::datetime"],[5519,"alloc::borrow"],[5520,"polars_arrow::array::static_array_collect"],[5521,"bytemuck::zeroable"],[5522,"polars_core::chunked_array::logical::categorical"],[5523,"polars_core::chunked_array::logical::categorical::merge"],[5524,"polars_core::chunked_array::logical"],[5525,"polars_core::datatypes::time_unit"],[5526,"polars_arrow::types"],[5527,"polars_arrow::datatypes::physical_type"],[5528,"core::borrow"],[5529,"polars_arrow::pushable"],[5530,"polars_core::datatypes::into_scalar"],[5531,"core::cmp"],[5532,"polars_core::chunked_array::logical::categorical::builder"],[5533,"polars_core::chunked_array::logical::categorical::revmap"],[5534,"polars_core::chunked_array::logical::categorical::string_cache"],[5535,"polars_error::warning"],[5536,"polars_core::series::from"],[5537,"polars_utils::aliases"],[5538,"polars_arrow::datatypes::schema"],[5539,"polars_core::chunked_array::ndarray"],[5540,"polars_arrow::array::struct_"],[5541,"polars_arrow::record_batch"],[5542,"polars_utils::idx_vec"],[5543,"rayon::iter::plumbing"],[5544,"polars_core::frame::group_by::into_groups"],[5545,"core::iter::adapters::copied"],[5546,"core::iter::adapters::zip"],[5547,"polars_arrow::legacy::kernels::rolling"],[5548,"polars_utils::float"],[5549,"polars_arrow::types::native"],[5550,"polars_core::frame::group_by::aggregations::agg_list"],[5551,"polars_core::frame::row::av_buffer"],[5552,"polars_arrow::array::binary"],[5553,"polars_core::hashing::identity"],[5554,"hashbrown::map"],[5555,"polars_core::hashing::vector_hasher"],[5556,"core::alloc"],[5557,"std::os::fd::owned"],[5558,"std::os::fd::raw"],[5559,"core::mem::maybe_uninit"],[5560,"polars_arrow::legacy::kernels::time"],[5561,"core::default"],[5562,"core::ffi::c_str"],[5563,"polars_arrow::scalar"],[5564,"std::io::error"],[5565,"simdutf8::basic"],[5566,"alloc::collections"],[5567,"regex::error"],[5568,"alloc::ffi::c_str"],[5569,"std::path"],[5570,"std::ffi::os_str"],[5571,"polars_arrow::legacy::array::default_arrays"],[5572,"polars_arrow::buffer::immutable"],[5573,"polars_arrow::array::list"],[5574,"polars_core::named_from"],[5575,"polars_arrow::legacy::array"],[5576,"polars_core::chunked_array::ops::aggregate"],[5577,"polars_core::chunked_array::ops::aggregate::quantile"],[5578,"polars_arrow::legacy::index"],[5579,"core::pin"],[5580,"core::io::borrowed_buf"],[5581,"std::io"],[5582,"polars_core::chunked_array::ops::aggregate::var"],[5583,"alloc::collections::btree::map"],[5584,"polars_arrow::legacy::array::list"],[5585,"polars_arrow::legacy::array::null"],[5586,"polars_arrow::bitmap::mutable"],[5587,"polars_arrow::array::utf8"],[5588,"polars_core::series::iterator"],[5589,"alloc::rc"],[5590,"polars_arrow::legacy::utils"],[5591,"polars_core::utils::supertype"],[5592,"polars_arrow::legacy::trusted_len::rev"],[5593,"smartstring::config"],[5594,"smartstring"],[5595,"polars_core::chunked_array::object::extension"],[5596,"polars_error::constants"],[5597,"polars_arrow::legacy::prelude"],[5598,"polars_arrow::legacy::array::utf8"],[5599,"polars_core::utils::any_value"],[5600,"polars_core::utils::schema"],[5601,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{D`}}}}c}{{l{D`}}}{{Ch{{f{{Dd{Db}}}}}{{C`{{f{{Dd{Db}}}}}}}}}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Dd{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Cn}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Df}}Ef}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{Ej}}}}}}}Bn}{{{f{{l{c}}}}}ElBn}{{{f{{l{c}}}}}{{f{{F`{En}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{F`{En}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Dd}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fb}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fb}bBnBn}{{{f{{l{c}}}}}{{`{{Fd{}{{B`{{f{Dd}}}}}}}}}n}{{}{{l{c}}}Bn}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}}bBn}{Ejb}0{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}{{{f{{l{c}}}}e}FfnAb}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ff}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{Ej}}}Bn}`{{{f{{l{Al}}}}{f{BhFh}}}Fj}{{{f{{l{c}}}}{f{BhFh}}}Fjn}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{cc{}}{c{{l{e}}}Fl{{Bn{}{{Fn{c}}}}}}1{{{f{Bf}}c}{{l{e}}}G`{{Bn{}{{Fn{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Fn{}}}}Bn}G`}{{{f{Bf}}{F`{En}}}{{l{c}}}Bn}{{{f{Bf}}{F`{En}}Df}{{l{c}}}Bn}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{c{{l{e}}}{{G`{}{{B`{{Gh{F`{An{Gf}}}}}}}}}n}{c{{l{e}}}{{G`{}{{B`{An}}}}}n}{c{{l{Al}}}{{G`{}{{B`{{An{d}}}}}}}}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}21{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gj{}{{B`{An}}}}}n}{{{f{Bf}}{f{Dd}}}{{l{c}}}n}{{{f{Bf}}{f{{Dd{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`{An{Gf}}}{{l{c}}}n}{{{f{Bf}}Ej}{{l{c}}}n}0{{{f{{l{c}}}}Ej}{{l{c}}}Bn}{{{f{Bf}}Ej{f{Df}}}Dj}{{{f{{l{c}}}}Ej}AnBn}{{{f{{l{c}}}}Ej}{{Af{Gn}}}n}{{{f{{l{c}}}}Ej}Gnn}{{{f{{l{j}}}}Ej}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{H`}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HbBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}AnBn}0{{{f{{l{{Hd{c}}}}}}Ej}{{An{{f{Hf}}}}}Hh}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EjdEj}AjEd}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}018{{{f{{l{c}}}}{An{Ej}}}{{l{c}}}Bn}{{}Ej}0{{EjHj{An{Hl}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{{{f{{l{c}}}}}{{I`{{Hn{c}}}}}Bn}{ce{}{}}0{{{l{Ib}}{An{Ej}}Ej}{{Af{Id}}}}{{{l{Ib}}{An{Ej}}Ej}Id}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IfIh{Ij{}{{B`{}}}}FdGl}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FfIl}000{{{f{{l{c}}}}}FfBn}02{{{f{{l{c}}}}}InBn}{{{f{{l{c}}}}}{{`{{J`{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Jb}}}}}}}}{{{f{{l{c}}}}}{{Jh{{Jd{En}}{Jf{{f{En}}}{{C`{{An{{f{Gf}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{Ej}}}Bn}{{{f{{l{c}}}}}{{Jj{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{c}}}}}EjBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`Jl}}00{{{f{{l{c}}}}Ej}{{l{c}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}01{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jnn}{{{f{{l{Al}}}}}{{An{K`}}}}{{{f{{l{c}}}}}{{An{K`}}}n}{{{f{{l{c}}}}}{{An{K`}}}Ed}{{{f{{l{c}}}}}JnEd}{{{f{Bh{l{c}}}}{Hn{c}}}bBn}`{{{f{{l{c}}}}}{{Kb{c}}}Bn}{{{f{{l{c}}}}}{{f{{Kf{{Kd{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{Kj{Kh}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Kf{{Kd{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Kf{{Kd{c}}}}}Bn};<{{{f{{l{c}}}}}{{An{Gh}}}n};{{{f{Bf}}{f{{Dd{Db}}}}EjEj}{{l{Al}}}}{{{f{Bf}}{f{Dd}}}{{l{c}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}EjBn}{{{f{{l{c}}}}}{{Af{Ej}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Al}}}{{Kl{{Dd{{An{d}}}}}}}}{{{f{Bf}}c}{{l{D`}}}{{Kl{{Dd{{F`{Db}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kl{{Dd{Dh}}}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kl{{Dd{Hl}}}}}}{{{f{Bf}}{L`{Jb}}}{{l{Lb}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kl{{Dd{K`}}}}}}{{{f{Bf}}c}{{l{Ib}}}{{Kl{{Dd{Ld}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kl{{Dd{{An{K`}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kl{{Dd{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Ib}}}{{Kl{{Dd{{An{Ld}}}}}}}}{{{f{Bf}}c}{{l{Lb}}}{{Kl{{Dd{Jb}}}}}}{{{f{Bf}}c}{{l{Lf}}}{{Kl{{Dd{{An{Lh}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kl{{Dd{{An{Hj}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kl{{Dd{d}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kl{{Dd{Hj}}}}}}{{{f{Bf}}c}{{l{D`}}}{{Kl{{Dd{{An{{F`{Db}}}}}}}}}}{{{f{Bf}}c}{{l{Lf}}}{{Kl{{Dd{Lh}}}}}}{{{f{Bf}}c}{{l{Lb}}}{{Kl{{Dd{{An{Jb}}}}}}}}{{{f{Bf}}{L`{Lh}}}{{l{Lf}}}}{{{f{Bf}}{L`{Hl}}}{{l{Kn}}}}{{{f{Bf}}{L`{Lj}}}{{l{Ll}}}}{{{f{Bf}}c}{{l{Ll}}}{{Kl{{Dd{{An{Lj}}}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{Kl{{Dd{Lj}}}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kl{{Dd{{An{Hl}}}}}}}}{{{f{Bf}}}{{l{{Hd{c}}}}}Hh}{{{f{{l{c}}}}EjEj}{{l{c}}}n}{{{f{Bf}}{F`{c}}}{{l{{Hd{c}}}}}Hh}{{{f{Bf}}{F`{c}}Gf}{{l{{Hd{c}}}}}Hh}{{{f{Bf}}F`}{{l{c}}}n}{{{Kf{Ln}}{F`{En}}}{{l{c}}}Bn}{{{Kf{Ln}}{F`{En}}H`H`}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Il}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{{l{c}}}}}EjBn}``{{{f{{l{Cn}}}}}{{`{{M`{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{M`{}{{B`{{An{Ad}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Mb{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Cn}}}}}{{`{{Mb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{c}}}}}Jnn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}K`Md}{{Af{{An{K`}}}}}Ed}{{{f{{l{c}}}}K`Md}{{Af{Jn}}}Ed}{{{f{Bf}}EjK`}{{Af{{l{Al}}}}}}{{{f{Bf}}EjK`K`}{{Af{{l{c}}}}}n}{{{f{Bf}}Ej}{{l{c}}}n}{{{f{Bf}}EjK`K`}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Ln}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Mf}{{Af{Ad}}}n}{{{f{{l{c}}}}Eje}{{Af{{l{c}}}}}Il{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}K`dd{An{Hl}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Ejdd{An{Hl}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{G`{}{{B`{H`}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{G`{}{{B`{H`}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Ff}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}H`}bBn}{{{f{Bh{l{c}}}}In}bBn}{{{f{{l{c}}}}Jb}{{l{c}}}n}{{{f{{l{c}}}}JbAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JbEj}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}Jb}{{Gh{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}Db}{{An{K`}}}n}{{{f{{l{c}}}}Db}JnEd}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{H`}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jnn}{{{f{{l{c}}}}{An{Ej}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Kl{{Dd{H`}}}}Mh}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Mj{Bl}}}}Bn}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Mj{Bl}}}}Bn}{{Kl{{Dd{H`}}}}Mh}}`{{{f{{l{c}}}}dMl}{{F`{{F`{Mn}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Il}{{{f{{l{Cn}}}}Ej}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{c}}}}}{{Af{N`}}}n}{{{f{{l{j}}}}}{{Af{Nb}}}}{{{f{c}}}e{}{}}{{{f{{l{D`}}}}}Nd}{{{f{{l{c}}}}}{{F`{An}}}n}{{{f{{l{c}}}}}{{Nf{F`{F`{An}}}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gb{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gb{eg}}}}}}}Bn}{c{{Gb{e}}}{}{}}0{{{f{Bf}}g}{{Gb{{l{i}}e}}}Fl{}{{G`{}{{B`{{Gb{ce}}}}}}}{{Bn{}{{Fn{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nh{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}Ej}{}Bn}{{{f{{l{c}}}}Db}{{An{K`}}}n}{{{f{{l{c}}}}Db}JnEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fl{{Bn{}{{Fn{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Fl{{Bn{}{{Fn{c}}}}Bn}}{{{f{{l{c}}}}{F`{En}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Dd{Nj}}}}e}c{}{{Nl{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}In}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}2310{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}452301542376542310543210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}}e{}{}{}}{{{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}c}e{}{}{}}{{c{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}}e{}{}{}}{{{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}}g{}{}{}}{{{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}c}g{}{}{}}{{c{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}}g{}{}{}}{{{Od{}{{Nn{c}}{O`{e}}{Ob{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhOf}}}b}{{{f{Bh{Oh{c}}}}}b{OjMh}}{{{f{BhOl}}}b}{{{f{BhOn}}}b}{{{f{Bh{A@`{c}}}}}bn}{{{f{Bh{Oh{c}}}}{An{e}}}b{OjMh}{{Kl{c}}}}{{{f{BhOf}}{An{c}}}b{}}{{{f{BhOf}}c}b{}}{{{f{Bh{Oh{c}}}}e}b{OjMh}{{Kl{c}}}}{{{f{BhOl}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Oh{c}}}}}{{Oh{c}}}{OjMh}}{{{f{Ol}}}Ol}{{{f{On}}}On}{{{f{{A@`{c}}}}}{{A@`{c}}}{nA@b}}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000{Ej{{f{c}}}{}}000{Ej{{f{Bhc}}}{}}000{Ejb}000{Of{{l{c}}}Bn}{{{Oh{{Dd{Db}}}}}Eb}{{{Oh{Bf}}}Nd}{A@dNd}{A@fEb}{OlFf}`{{{A@`{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}A@h{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}A@h{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}A@h{}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}A@h{}}{{}Ej}000{ce{}{}}000`{{{f{Bf}}Ej}{{Oh{c}}}{OjMh}}{{{f{Bf}}Ej}Ol}{{{f{Bf}}Ej}On}{{{f{Bf}}Ej}{{A@`{c}}}n}{{{f{BhOf}}}b}{{{f{BhOl}}}b}{{{f{BhOn}}}b}{{{f{Bh{A@`{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gb{e}}}{}{}}0000000{{{f{c}}}Nh{}}000;;;;````````{{{f{BhA@j}}{f{Fl}}}b}{{{f{BhA@j}}}b}{{{f{BhA@l}}}b}{{{f{BhA@n}}c}b{{Bd{}{{B`{{An{d}}}}}}Gl}}{{{f{Bh{AA`{c}}}}e}bn{{Bd{}{{B`{An}}}}Gl}}{{{f{Bh{AA`{c}}}}e}bn{{Bd{}{{B`{}}}}Gl}}{{{f{BhAAb}}}b}54{{{f{BhAAd}}}b}{{{f{BhAAf}}}b}{{{f{BhA@n}}}b}{{{f{BhAAh}}}b}{{{f{Bh{AA`{c}}}}}bn}{{{f{BhA@j}}{An{{f{Fl}}}}}b}{{{f{BhA@j}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhAAb}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{AA`{c}}}}{An{{f{Dd}}}}}bn}{{{f{BhAAb}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@j}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@l}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAd}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAf}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@n}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAh}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{AA`{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{AA`{c}}}}{f{Dd}}}bn}{{{f{BhAAd}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gl}}{{{f{BhAAf}}c}b{{Bd{}{{B`{{An{{f{{Dd{Db}}}}}}}}}}Gl}}{{{f{BhAAd}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhAAf}}c}b{{Bd{}{{B`{{f{{Dd{Db}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}A@j}{{}A@l}{Ej{{f{c}}}{}}000000{Ej{{f{Bhc}}}{}}000000{Ejb}000000{{{f{AAd}}}d}{{{f{AAf}}}d}{{{f{A@n}}}d}{{{f{{AA`{c}}}}}dn}{{{f{AAb}}}d}{{{f{AAd}}}{{f{Ln}}}}{{{f{AAf}}}{{f{Ln}}}}{{{f{A@n}}}{{f{Ln}}}}{{{f{{AA`{c}}}}}{{f{Ln}}}n}{{{f{AAb}}}{{f{Ln}}}}{{{f{BhA@j}}}Dj}{{{f{BhA@l}}}Dj}{{{f{BhAAh}}}Dj}{{{f{BhAAb}}}Dj}{cc{}}000000{{{f{Df}}EjEj{f{Bf}}}{{Af{{AAj{AAb}}}}}}{{}Ej}000000{{{f{BhAAd}}}En}{{{f{BhAAf}}}En}{{{f{BhA@n}}}En}{{{f{Bh{AA`{c}}}}}Enn}{{{f{BhAAb}}}En}{ce{}{}}000000{{{f{Bf}}Ej{An{Df}}}A@j}{{{f{Bf}}Ej{An{Df}}}A@l}{{{f{Bf}}EjEj}AAd}{{{f{Bf}}EjEj}AAf}{{{f{Bf}}EjEj}A@n}{{{f{Bf}}Ej}AAh}{{{f{Bf}}EjEjDf}{{AA`{c}}}n}{{{f{Bf}}EjEjDfDf}{{AA`{c}}}n}{c{{Gb{e}}}{}{}}0000000000000{{{f{c}}}Nh{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ef}}}Ef}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}Ef}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{Ef}}{f{Ef}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ef}}{f{BhFh}}}Fj}{cc{}}{{{f{Ef}}{f{Bhc}}}bAAl}{{}Ej}{ce{}{}}{{{f{Ef}}}d}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}4``{{AAn{f{Bf}}}{{l{c}}}Bn}{{AB`{f{{l{c}}}}}{{l{c}}}Bn}10{{AB`{f{Bf}}Df}{{l{c}}}Bn}0{{AAn{f{Bf}}}{{Gb{{l{c}}e}}}Bn{}}{{AB`{f{{l{c}}}}}{{Gb{{l{c}}e}}}Bn{}}10{{AB`{f{Bf}}Df}{{Gb{{l{c}}e}}}Bn{}}0`{ABbABb}``{{ABd{f{Bf}}Df}e{}{{ABf{c}}}}{{e{f{Bf}}Df}ABf{}{{Gj{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{Ejb}0{cc{}}0{{}Ej}0{ce{}{}}000{{{f{ABh}}}ABj}{{{f{BhABj}}}{{An{c}}}{}}{{{f{Bh{ABl{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{ABl{c}}}}}{{An{e}}}Fd{}}`{{{f{ABj}}}{{Gh{Ej{An{Ej}}}}}}{{{f{{ABl{c}}}}}{{Gh{Ej{An{Ej}}}}}Bd}{c{{Gb{e}}}{}{}}000{{{f{c}}}Nh{}}088`````````````````````````{{{f{c}}h}b{}}0000{{}Fb}{{}Hb}{{FbFb}Fb}{{HbHb}Hb}{{{f{BhFb}}Fb}b}{{{f{BhHb}}Hb}b}3210{{{f{Fb}}}Lh}0{{{f{Hb}}}Db}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000{{{f{{Kd{c}}}}}{{Kd{c}}}Bn}{{{f{{Hn{c}}}}}{{Hn{c}}}Bn}{{{f{ABn}}}ABn}{{{f{Fb}}}Fb}{{{f{Hb}}}Hb}{{{f{c}}{f{Bhe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{BhAC`}}}b}0{FbFb}{HbHb}{{{f{Fb}}Fb}d}{{{f{Hb}}Hb}d}{{}{{Kd{c}}}Bn}{{}{{Hn{c}}}Bn}{{}Fb}{{}Hb}{Ej{{f{c}}}{}}{{{f{{Kb{c}}}}}{{f{e}}}Bn{}}111111{Ej{{f{Bhc}}}{}}000000{{FbFb}Fb}{{HbHb}Hb}{{}d}{{{f{Kh}}}{{An{H`}}}}{{{f{{Hn{c}}}}}{{An{H`}}}Bn}{{{Hn{c}}H`}{{Hn{c}}}Bn}{{{Hn{c}}{An{H`}}}{{Hn{c}}}Bn}{Ejb}000000<;5{{{f{Fb}}{f{Fb}}}d}{{{f{Hb}}{f{Hb}}}d}7{{{f{BhFb}}c}b{{G`{}{{B`{Fb}}}}}}{{{f{BhHb}}c}b{{G`{}{{B`{Hb}}}}}}{{{Hn{c}}d}{{Hn{c}}}Bn}{{{Hn{c}}{An{d}}}{{Hn{c}}}Bn}{{{f{{Hn{c}}}}Fb}{{Hn{c}}}Bn}{{{f{{Hn{c}}}}Fb}{{Hn{e}}}BnBn}{{{Hn{c}}Hb}{{Hn{c}}}Bn}{{{Hn{c}}{An{Hb}}}{{Hn{c}}}Bn}{{{f{{Hn{c}}}}{f{BhFh}}}FjBn}{{{f{ABn}}{f{BhFh}}}Fj}{{{f{Fb}}{f{BhFh}}}Fj}0000{{{f{Hb}}{f{BhFh}}}Fj}0000{cc{}}000000{Lh{{An{Fb}}}}{Db{{An{Hb}}}}{LhFb}0{DbHb}010{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}0{cFb{{G`{}{{B`{Fb}}}}}}{cHb{{G`{}{{B`{Hb}}}}}}{{{f{Bf}}}{{An{Fb}}}}{{{f{Bf}}}{{An{Hb}}}}{{{f{{Hn{c}}}}}{{An{H`}}}Bn}{{{f{{Hn{c}}}}}dBn}{{{f{Hb}}}d}{{{f{Kh}}}Hb}{{{f{{Hn{c}}}}}HbBn}0{{{f{{Hn{c}}}}}{{An{f}}}Bn}0{{{f{Bh{Kd{c}}}}}{{f{Bh{Hn{c}}}}}Bn}{{{f{Hb}}}In}{{}Ej}000000{{{f{BhFb}}Fb}b}{{{f{BhHb}}Hb}b}{{FbFb}Fb}{{HbHb}Hb}{{{f{Fb}}Fb}d}{{{f{Hb}}Hb}d}{ce{}{}}000000{Fbc{}}{Hbc{}}{{{f{Fb}}}d}{{{f{Hb}}}d}{{{f{{Hn{c}}}}}dBn}21{{{f{{Hn{c}}}}}InBn}111{{{f{Fb}}}{{ACb{Fb}}}}{{{f{Hb}}}{{ACb{Hb}}}}{{{f{Fb}}}{{ACd{Fb}}}}{{{f{Hb}}}{{ACd{Hb}}}}{{}d}{{}{{f{{ACh{ACf}}}}}}{{{f{Kh}}}{{An{Jn}}}}{{{Hn{c}}}{{Hn{c}}}Bn}{{{f{{Hn{c}}}}}{{An{Jn}}}Bn}{{{Hn{c}}An}{{Hn{c}}}Bn}{{{f{{Hn{c}}}}{Hn{c}}}{{ACj{c}}}Bn}4321{{{Hn{c}}}{{Kd{c}}}Bn}{FbFb}{HbHb}{{{f{{Kd{c}}}}}{{Kj{{Hn{c}}}}}Bn}{{{f{BhFb}}Fb}b}{{{f{BhHb}}Hb}b}{{{f{BhFb}}Fbd}b}{{{f{BhHb}}Hbd}b}{{{f{Bh{Hn{c}}}}{An{H`}}}bBn}{{{f{Bh{Hn{c}}}}d}bBn}{{{f{BhHb}}d}b}{{{f{Bh{Hn{c}}}}Hb}bBn}{{{f{Bh{Hn{c}}}}An}bBn}033{{{f{Bh{Hn{c}}}}In}bBn}{{{f{BhHb}}In}b}{{{Hn{c}}In}{{Hn{c}}}Bn}{{{Hn{c}}{An{In}}}{{Hn{c}}}Bn}{{FbFb}Fb}{{HbHb}Hb}>=10{{{Kd{c}}}{{Hn{c}}}Bn}{{{f{c}}}e{}{}}0000{{{f{BhFb}}Fb}b}{{{f{BhHb}}Hb}b}{c{{Gb{e}}}{}{}}0000000000000{{{f{{Kd{c}}}}}{{An{{Kj{{Hn{c}}}}}}}Bn}{{{f{{Kd{c}}}}}{{An{{I`{{Hn{c}}}}}}}Bn}{{{f{c}}}Nh{}}00000098{{{f{{Kd{c}}}}}{{f{{ACl{Kh}}}}}Bn}{ce{}{}}000000{AC`AC`}0{{{f{{Kd{c}}}}}{{I`{{Hn{c}}}}}Bn}````{{{f{c}}h}b{}}{{{f{{ACn{c}}}}Ej}{{Gh{{ACn{c}}{ACn{c}}}}}Hh}{e{{ACn{c}}}Hh{{G`{}{{B`{{An{{f{c}}}}}}}}}}{e{{ACn{c}}}Hh{{G`{}{{B`{{f{c}}}}}}}}{{AD`e}g{}{{G`{}{{B`{c}}}}}{}}0{{{f{Hf}}}{{f{ADb}}}}{{{f{{ACn{c}}}}}{{f{ADb}}}Hh}{{{f{Bh{ACn{c}}}}}{{f{BhADb}}}Hh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ACn{c}}}}Ej}dHh}{{{f{{ACn{c}}}}}{{ACn{c}}}{HhA@b}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{ACn{c}}}}}{{f{AD`}}}Hh}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{{f{Hf}}}}{f{{f{Hf}}}}}d}{{{f{Hf}}{f{Hf}}}d}{{{f{{ACn{c}}}}{f{BhFh}}}Fj{HhADd}}{cc{}}{{EjAD`}{{ACn{c}}}Hh}{{{f{{ACn{c}}}}Ej}{{An{{f{c}}}}}Hh}{{}AD`}{{{f{Gf}}{f{{ACn{c}}}}{f{{ACn{c}}}}}{{ACn{c}}}Hh}{{AD`{f{Gf}}cc}{{ACn{e}}}{}Hh}{{{f{Gf}}{f{{ACn{c}}}}e}{{ACn{c}}}Hh{}}{{{f{Gf}}c{f{{ACn{e}}}}}{{ACn{e}}}{}Hh}{{}Ej}{ce{}{}}{{{f{{ACn{c}}}}}eHh{}}{{{f{{ACn{c}}}}Ej}dHh}{{{f{c}}Ej}d{}}1{{{f{{ACn{c}}}}}{{ADh{egADf}}}Hh{}{}}{{{f{{ACn{c}}}}}{{ADh{{f{c}}{ADj{c}}ADf}}}Hh}{{{f{{ACn{c}}}}}EjHh}0`{db}{{{f{Bh{ACn{c}}}}{An{Gf}}}bHh}{{{f{Bh{ACn{c}}}}EjEj}bHh}{{{f{c}}EjEj}e{}{}}01{{{f{{ACn{c}}}}Ej}{{Gh{{AAj{Fl}}{AAj{Fl}}}}}Hh}0{{{f{Hf}}}{{AAj{Hf}}}}{{{f{{ACn{c}}}}}{{AAj{Fl}}}Hh}{{{f{c}}}e{}{}}{g{{Gb{{ACn{c}}e}}}Hh{}{{G`{}{{B`{{Gb{{f{c}}e}}}}}}}}{g{{Gb{{ACn{c}}e}}}Hh{}{{G`{}{{B`{{Gb{{An{{f{c}}}}e}}}}}}}}{{AD`g}{{Gb{ie}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}{}}0{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}{{{f{Hf}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ACn{c}}}}}{{An{{f{Gf}}}}}Hh}{{{f{{ACn{c}}}}Ej}{{f{c}}}Hh}0{{{f{{ACn{c}}}}Ej}eHh{}}{{{f{{ACn{c}}}}}{{f{{Kf{{F`{c}}}}}}}Hh}{{{f{{ACn{c}}}}}{{ADj{c}}}Hh}{{{f{{ACn{c}}}}}eHh{}}{ce{}{}}{{{f{{ACn{c}}}}{An{Gf}}}{{AAj{Fl}}}Hh}{{{ACn{c}}{An{Gf}}}{{ACn{c}}}Hh}0`{{{f{Bh{ADl{c}}}}}bHh}0{{{f{Bh{ADl{c}}}}{An{c}}}bHh}{{{f{Bh{ADl{c}}}}{f{ADb}}}bHh}{{{f{Bh{ADl{c}}}}c}bHh}{{{f{Bh{ADl{c}}}}{f{ADb}}}{{Af{b}}}Hh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{ADl{c}}}Hh}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{ADl{c}}}{{ADn{c}}}Hh}{cc{}}{{}Ej}{ce{}{}}{{{f{Bf}}Ej}{{ADl{c}}}Hh}{{{f{Bh{ADl{c}}}}}AdHh}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}4````{{{f{BhAE`}}}b}{{{f{BhAE`}}{An{{f{ADb}}}}}b}{{{f{BhAE`}}{f{ADb}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{AEb}}{f{BhFh}}}Fj}<{{{f{Bf}}Ej}{{AAj{AE`}}}}{{}AEd}{{}AD`}>={{}d}`{{AEfAEdAD`}b}{{{f{BhAE`}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{AEj{}{{AEh{c}}}}}}g}{{AEj{}{{AEh{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AEl}}{f{Cb}}}AEl}{{{f{AEl}}{f{Cb}}}{{l{c}}}Bn}{{{f{{AEj{}{{AEh{c}}}}}}i{f{Bh{Dd{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{AEj{}{{AEh{c}}}}}}g}{{AEj{}{{AEh{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AEn}}Dl}Dn}{{{f{AEn}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AF`}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AFb}}{f{Df}}}{{Af{Ad}}}}0{{{f{AFb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AFd}}}AFd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{AFd}}{f{AFd}}}d}{{{f{{AFf{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFh}}}{{Af{Ad}}}}{{{f{AFh}}}{{Af{{Gh{Ad{AFj{Jb}}}}}}}}`{{{f{AFl}}c}{{Af{AFl}}}{}}{{{f{AFn}}{f{Ff}}}{{Af{{l{c}}}}}Bn}`{{{f{AFd}}{f{BhFh}}}Fj}{cc{}}`{{{f{Bf}}cEj}AG`{}}{{{f{Bf}}Ej}AGb}`{{{f{AGd}}Ej}{{Af{Gn}}}}{{{f{AGd}}Ej}Gn}::{{{f{AFd}}{f{Bhc}}}bAAl}{{}Ej}{ce{}{}}{{{f{AGf}}}{{Af{Ff}}}}{{{f{AGh}}}{{Af{Ff}}}}??{{{f{AGj}}}{{An{c}}}{}}{{{f{AGj}}}{{An{K`}}}}{{{f{AGl}}}{{An{c}}}{}}2{{{f{AGj}}}{{An{{Gh{cc}}}}}{}}{{{f{AF`}}}{{Af{Ej}}}}{{{f{AGn}}EjEj}{{l{c}}}Bn}{{{f{{AFf{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFh}}}{{Af{{AFj{Jb}}}}}}{{{f{AGl}}K`Md}{{Af{{An{c}}}}}{}}{{{f{AH`}}}AH`}{{{f{AHb}}{f{Cb}}Mf}{{Af{Ad}}}}{{{f{AHd}}c{An{e}}}{{Af{AHd}}}{{G`{}{{B`{H`}}}}}{}}{{{f{AHd}}ci}{{Af{AHd}}}{{G`{}{{B`{H`}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AHd}}{f{Ff}}{An{c}}}{{Af{AHd}}}{}}{{{f{AHf}}Jb}{{l{c}}}Bn}{{{f{AHh}}Jbc}{{l{e}}}{}Bn}`{{{f{AEn}}d}{{l{c}}}Bn}{{{f{AEn}}Dl}{{l{c}}}Bn}{{{f{AHj}}Db}{{An{K`}}}}{{{f{AGj}}}{{An{c}}}{}}{{{f{AHl}}{f{c}}}{{Af{AHl}}}Mh}{{{f{AHn}}{f{c}}}AHnMh}{{{f{AI`}}}{{F`{{f{{Dd{Db}}}}}}}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}{{{f{AF`}}}{{Af{AF`}}}}8{ce{}{}}`{{{f{AIb}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFl{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AId{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FlAIf}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFl{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFl{{Ch{}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{AAj{Fl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{AAj{Fl}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gb{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gb{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AIh{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gb{{l{m}}i}}}BnBnFlAIj{{Ch{ff}{{C`{{Gb{gi}}}}}}}{{Bn{}{{Fn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gb{{l{m}}i}}}BnBnFlAIj{{Ch{ff}{{C`{{Gb{gi}}}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gb{{l{c}}g}}}BnBnAIj{{Ch{ff}{{C`{{Gb{{AAj{Fl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gb{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gb{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gb{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gb{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{FlAIf}AIj{{Ch{f}{{C`{{Gb{eg}}}}}}}{{Bn{}{{Fn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AIl{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAIlBn}{{{f{{l{c}}}}g}{{l{i}}}BnFl{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}{{{l{c}}g}{{l{i}}}BnFl{{Ch{}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FlAIf}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}0{{{f{{l{c}}}}}Ejn}0{{InIn}In}{{{f{Dn}}H`}{{Af{b}}}}{{{f{{AIn{H`}}}}H`}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJ`d}{{F`{H`}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AJ`}}}AJ`}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}AJ`}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{AJ`}}{f{AJ`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJ`}}{f{BhFh}}}Fj}{cc{}}{{{f{AJ`}}{f{Bhc}}}bAAl}{{}Ej}{ce{}{}}{{{f{{Dd{f}}}}cH`e}{{F`{H`}}}{{Bd{}{{B`{An}}}}}{{Cb{fEjf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}4`{{Ej{f{Bh{F`{d}}}}}b}```{{{f{AJb}}EjEj}AJb}0{{Ej{f{{Dd{Ad}}}}{f{BhE`}}}{{Af{{AJd{Dn}}}}}}{{{f{{Dd{Ad}}}}{f{{Dd{d}}}}{f{{Dd{d}}}}}{{Af{AJf}}}}{{{f{Bf}}{f{{Dd{Ad}}}}{f{{Dd{d}}}}{f{{Dd{d}}}}}{{Af{AJh}}}}{{{f{Bf}}{f{{Dd{Ad}}}}}{{Af{AJh}}}}{{{f{Ad}}}{{Af{En}}}}{{{f{{Dd{Ad}}}}}{{Af{AJf}}}}{{{f{{Dd{Ad}}}}}{{Af{AJh}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}Dl}{{}E`}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0``{Ejb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFh}}}Fj}{{{f{E`}}{f{BhFh}}}Fj}{{{f{E`}}}Dl}{cc{}}0{{{f{Dl}}}E`}{{{f{Dl}}{f{Bhc}}}bAAl}{{{f{E`}}{f{Bhc}}}bAAl}{{}Ej}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AJb}}EjEj}AJb}0{{{f{c}}}e{}{}}0{c{{Gb{e}}}{}{}}000{{{f{c}}}Nh{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{G`{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AJjJb}00{{}d}>>0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{Id}}{f{Id}}}c{}}{{FfFf}c{}}{{{f{Ff}}{f{Ff}}}c{}}{{NdNd}c{}}{{{f{Nd}}{f{Bf}}}c{}}{{{f{Nd}}{f{Nd}}}c{}}{{{f{Eb}}{f{{Dd{Db}}}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{{f{Gn}}{f{Gn}}}Gn}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAJl}}}{}}000000{{{f{Nd}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ff}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Ff}}{f{Aj}}}Ad}{{{f{Nd}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{ADn{c}}}}{f{Aj}}}AdHh}{{{f{Ff}}}d}{{{f{Ff}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Nd}}c}Nd{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AJn{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Dd{Db}}}}}}}{{C`{{An{{AJn{{Dd{Db}}}}}}}}}}Cd}}{{{f{{ADn{c}}}}e}{{ADn{c}}}Hh{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AK`}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AKb}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Ff}}{f{Cb}}}Ff}{{{f{Nd}}{f{Cb}}}Nd}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Ff}}{f{Cb}}}{{l{c}}}Bn}{{{f{Nd}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Nd}}c}Nd{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Dd{Db}}}}}{{C`{{f{{Dd{Db}}}}}}}}}}{{{f{Nd}}c}Nd{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Ff}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Nd}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Dd{c}}}}}b{}{{Cb{{An{{f{{Dd{Db}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{ADn{c}}}}g{f{Bh{Dd{e}}}}}bHh{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{d}{{C`{d}}}}Cd}}{{{f{Nd}}c}Nd{{Cb{{f{Bf}}}{{C`{{AJn{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Dd{Db}}}}}{{C`{{AJn{{Dd{Db}}}}}}}}Cd}}{{{f{{ADn{c}}}}e}{{ADn{c}}}Hh{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Ff}}Dl}Dn}{{{f{Nd}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AJh}}Dl}Dn}{{{f{Ff}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Nd}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AJh}}{f{{Dd{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Ff}}}{{Af{Dn}}}}{{{f{Nd}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{ADn{c}}}}}{{Af{Dn}}}Hh}{eAKd{}{{G`{}{{B`{c}}}}}}0{{AD`e}AKf{}{{G`{}{{B`{c}}}}}}0{{{f{Jn}}}Gn}{{{f{Nd}}}Eb}{{{f{Gn}}}Gn}{{{f{Df}}}{{f{Df}}}}{{{f{Ln}}}{{f{Df}}}}{{{f{AKh}}}{{f{Df}}}}{{{f{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{An{{f{{Dd{c}}}}}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{FfFf}c{}}{{{f{Ff}}{f{Ff}}}c{}}1001{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{AAj{Df}}}}{{{f{ALd}}{f{ALd}}c}{{Af{ALd}}}ALf}{{{f{ALh}}{f{Df}}}{{Af{Ad}}}}0{{{f{Gn}}{f{Df}}}Gn}{{{f{Df}}Df}Df}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}}{{Af{Ad}}}}{{{f{Nd}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AJh}}{f{Df}}}{{Af{Ad}}}}{{{f{ALh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Id}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Nd}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AJh}}{f{Df}}Ef}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAJl}}}{}}0000{{{f{AK`}}{f{Ad}}}{{Af{Ad}}}}{{{f{AKb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{ALj{ce}}}}}{{ALj{ce}}}BnBn}{{{f{Jn}}}Jn}{{{f{ALl}}}ALl}{{{f{Gn}}}Gn}{{{f{ALn}}}ALn}{{{f{Df}}}Df}{{{f{Ln}}}Ln}{{{f{AM`}}}AM`}{{{f{AMb}}}AMb}{{{f{AMd}}}AMd}{{{f{Lf}}}Lf}{{{f{Kn}}}Kn}{{{f{AMf}}}AMf}{{{f{AMh}}}AMh}{{{f{Ll}}}Ll}{{{f{Lb}}}Lb}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{AMj}}}AMj}{{{f{AMl}}}AMl}{{{f{Cn}}}Cn}{{{f{D`}}}D`}{{{f{AMn}}}AMn}{{{f{Al}}}Al}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{ANf}}}ANf}{{{f{AD`}}}AD`}{{{f{ANh}}}ANh}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{c}}}b{}}0000000000000000000000000000000000000000000000000000{{{f{BhLn}}Df}b}{ANje{}{{AKd{c}}AIf}}0{{ANjAD`}e{}{{AKf{c}}AIf}}0{{{f{Df}}}d}00{ANlDf}{{{f{Ln}}}{{f{Df}}}}{{}Gn}{{}ALn}{{}Df}{{}AD`}{Ej{{f{c}}}{}}{{{f{{ALj{ce}}}}}{{f{g}}}BnBn{}}1111111111111111111111111111111111{{{f{Bh{ALj{ce}}}}}{{f{Bhg}}}BnBn{}}{Ej{{f{Bhc}}}{}}0000000000000000000000000000000000{{{f{Id}}{f{Id}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAJl}}}{}}000000{Ejb}0000000000000000000000000000000000{{{f{ALh}}}{{f{Df}}}}{{{f{Id}}}{{f{Df}}}}{{{f{Jn}}}{{f{Df}}}}{{{f{Gn}}}Df}`{{{f{Gn}}{f{Gn}}}d}{{{f{ALn}}{f{ALn}}}d}{{{f{Df}}{f{AD`}}}d}{{{f{Df}}{f{Df}}}d}{{{f{Ln}}{f{Ln}}}d}{{{f{AM`}}{f{AM`}}}d}{{{f{AD`}}{f{AD`}}}d}{{{f{ANh}}{f{ANh}}}d}{{{f{Gn}}{f{Gn}}d}d}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nd}}{f{Bf}}}Ff}{{{f{Nd}}{f{Nd}}}Ff}{{{f{Eb}}{f{{Dd{Db}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543201{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gh{Ad{AFj{Jb}}}}}}}}{{{f{{ALj{ce}}}}}LnBnBn}{{{f{Ff}}d}{{Af{Ff}}}}{{{f{Eb}}{f{{Dd{Db}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Ff}}}{{Af{Dj}}}}{{{f{Ff}}{f{Ff}}}{{Af{{l{Al}}}}}}{{{f{Nd}}{f{Ff}}}{{Af{{l{Cn}}}}}}{{{f{Eb}}{f{Ff}}}{{Af{{l{D`}}}}}}{{{f{AJh}}{f{Ff}}}{{Af{AJh}}}}{{{f{{ADn{c}}}}{f{Ff}}}{{Af{{l{{Hd{c}}}}}}}Hh}{{ALf{f{ANn}}{f{ANn}}}{{Af{ANn}}}}{{{f{Dj}}{f{BhFh}}}Fj}{{{f{Nd}}{f{BhFh}}}Fj}{{{f{Eb}}{f{BhFh}}}Fj}{{{f{{ADn{c}}}}{f{BhFh}}}FjHh}{{{f{ALl}}{f{BhFh}}}Fj}{{{f{Gn}}{f{BhFh}}}Fj}0{{{f{ALn}}{f{BhFh}}}Fj}{{{f{Df}}{f{BhFh}}}Fj}0{{{f{Ln}}{f{BhFh}}}Fj}{{{f{AM`}}{f{BhFh}}}Fj}0{{{f{AD`}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{ANh}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{cGnAOb}1{dGn}{{{An{c}}}Gn{{AOd{Gn}}}}{{{f{Bf}}}Gn}{{{f{{Dd{Db}}}}}Gn}5{{{f{Gn}}}Df}{{{f{AD`}}}Df}7{GnDf}{{{f{Gn}}}Ln}9{{{f{AOf}}}Ln}{{{f{ANh}}}AM`};;;;;;;;;;;;;;;;;;;;;{AOhAD`}{AOjAD`}=={{{f{AD`}}d}Df}{eDj{{AOl{Ad}}}{{G`{}{{B`{c}}}}}}{cDj{{G`{}{{B`{{An{{AAj{Fl}}}}}}}}}}{cDj{{G`{}{{B`{{An{Ad}}}}}}}}{cFf{{G`{}{{B`{d}}}}}}{eNd{{`{Bf}}}{{G`{}{{B`{c}}}}}}{eNd{{Kl{Bf}}}{{G`{}{{B`{{An{c}}}}}}}}{eEb{{Kl{{Dd{Db}}}}}{{G`{}{{B`{{An{c}}}}}}}}{eEb{{`{{Dd{Db}}}}}{{G`{}{{B`{c}}}}}}{e{{ADn{c}}}Hh{{G`{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Nd{{Kl{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Kl{{Dd{Db}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{ADn{c}}}Hh{{Bd{}{{B`{{An{c}}}}}}}}<:97856{eAJh{{Kl{{Dd{Db}}}}}{{G`{}{{B`{{An{c}}}}}}}}{eAJh{{`{{Dd{Db}}}}}{{G`{}{{B`{c}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Nd{{Kl{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Kl{{Dd{Db}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{ADn{c}}}Hh{{Bd{}{{B`{c}}}}}}{{AOnDf}Ln}{cDj{{Gj{}{{B`{{An{Ad}}}}}}}}{cFf{{Gj{}{{B`{d}}}}}}{cFf{{Gj{}{{B`{{An{d}}}}}}}}{eNd{{Kl{Bf}}IfIh}{{Gj{}{{B`{{An{c}}}}}}}}{eNd{{`{Bf}}IfIhB@`}{{Gj{}{{B`{c}}}}}}{eEb{{`{{Dd{Db}}}}IfIhB@`}{{Gj{}{{B`{c}}}}}}{eEb{{Kl{{Dd{Db}}}}IfIh}{{Gj{}{{B`{{An{c}}}}}}}}{{c{f{Bf}}Df}Dj{{Gj{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Dd{d}}}}}Ff}{{{f{Bf}}{f{{Dd{c}}}}}Nd{{Kl{Bf}}}}{{{f{Bf}}{f{{Dd{c}}}}}Eb{{Kl{{Dd{Db}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}{{ADn{c}}}Hh}{{{f{Bf}}{f{{Dd{{An{d}}}}}}}Ff}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Nd{{Kl{Bf}}}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}Eb{{Kl{{Dd{Db}}}}}}{{{f{Bf}}{f{{Dd{{An{c}}}}}}}{{ADn{c}}}Hh}{cFf{{Gl{}{{B`{{An{d}}}}}}}}{{{F`{c}}AD`}{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{F`{c}}AD`}{{AIf{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}A@b{{Fd{}{{B`{e}}}}GlIfIh}}{{EjcAD`}{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Bf}}{f{Ad}}Ej}Dj}{{{f{Bf}}dEj}Ff}{{{f{Bf}}{f{Bf}}Ej}Nd}{{{f{Bf}}{f{{Dd{Db}}}}Ej}Eb}{{{f{Bf}}{f{{Dd{Db}}}}Ej}AJh}{{{f{Bf}}cEj}{{ADn{c}}}Hh}{{EjAD`}{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Bf}}Ej}Dj}{{{f{Bf}}Ej}Ff}{{{f{Bf}}Ej}Nd}{{{f{Bf}}Ej}Eb}{{{f{Bf}}Ej}AJh}{{{f{Bf}}Ej}{{ADn{c}}}Hh}{{{f{Bf}}Ej{f{Df}}}Dj}{{{f{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Ej}{{An{c}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Id}}Ej}{{Af{Gn}}}}{{{f{ALh}}Ej}{{Af{Gn}}}}0{{{f{Dj}}Ej}{{Af{Gn}}}}{{{f{Ff}}Ej}{{Af{Gn}}}}{{{f{Nd}}Ej}{{Af{Gn}}}}{{{f{Eb}}Ej}{{Af{Gn}}}}{{{f{AJh}}Ej}{{Af{Gn}}}}{{{f{{ADn{c}}}}Ej}{{Af{Gn}}}Hh}{{{f{Id}}Ej}Gn}{{{f{ALh}}Ej}Gn}0{{{f{Dj}}Ej}Gn}{{{f{Ff}}Ej}Gn}{{{f{Nd}}Ej}Gn}{{{f{Eb}}Ej}Gn}{{{f{AJh}}Ej}Gn}{{{f{{ADn{c}}}}Ej}GnHh}{{{f{Dj}}Ej}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{ADn{c}}}}Ej}{{An{{f{Hf}}}}}Hh}0{{{f{Gn}}}{{An{{f{Bf}}}}}}{{{f{B@b}}Ej}Gn}{{{f{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Ej}{{An{c}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Dj}}}Ej}{{{f{Nd}}}Ej}{{{f{AJh}}}Ej}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Ff}}dd}{{Af{Aj}}}}{{{f{Nd}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AJh}}dd}{{Af{Aj}}}}{{{f{{ADn{c}}}}dd}{{Af{Aj}}}Hh}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nd}}{f{Nd}}}Ff}{{{f{Nd}}{f{Bf}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Dd{Db}}}}}Ff}543201{{{f{Gn}}{f{Bhc}}}bAAl}{{{f{ALn}}{f{Bhc}}}bAAl}{{{f{Df}}{f{Bhc}}}bAAl}{{{f{Ln}}{f{Bhc}}}bAAl}{{{f{AM`}}{f{Bhc}}}bAAl}{{{f{AD`}}{f{Bhc}}}bAAl}{{{f{ANh}}{f{Bhc}}}bAAl}{{{f{Gn}}{f{Bhc}}d}bAAl}{DfDf}{{}Ej}0000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{AD`}}}{{An{{f{AD`}}}}}}{ce{}{}}0000000000000000000000000000000000{{B@d{An{Ej}}Ej}{{Af{Id}}}}{{B@d{An{Ej}}Ej}Id}{{{f{Dj}}}c{}}{{{f{Ff}}}c{}}{{{f{Nd}}}c{}}{{{f{Eb}}}c{}}{{{f{AJh}}}c{}}{{{f{{ADn{c}}}}}eHh{}}{{B@fDf}{{Af{Jn}}}}{IdAd}{B@dAd}{{Jn{f{Bf}}}Ad}{Gn{{Af{Gn}}}}{{{f{Df}}}d}00{{{f{Gn}}}d}111010111110101011110111101{{{f{AD`}}}d}{{{f{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADh{cgADf}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Dj}}}{{`{{Bd{}{{B`{Jb}}}}}}}}{{{f{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{An{c}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nd}}{f{Bf}}}Ff}{{{f{Nd}}{f{Nd}}}Ff}{{{f{Eb}}{f{{Dd{Db}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543210{{{f{ALd}}{f{ALd}}}{{Af{{Gh{ALdALd}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{ALn}}}{{An{Df}}}}{{{f{Ff}}}{{An{d}}}}{{{f{Ff}}}Jn}{{{f{Nd}}}Jn}{{{f{Eb}}}Jn}{{{f{Ff}}}{{An{K`}}}}{{{f{AK`}}}{{An{Hj}}}}{{{f{AKb}}}{{An{K`}}}}{{{f{AK`}}}Jn}{{{f{AKb}}}Jn}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Dd{Db}}}}EjEj}Ff}{{{f{Id}}{f{Id}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAJl}}}{}}000000{{{f{Nd}}}{{Af{Ej}}}}{{{f{Eb}}}{{Af{Ej}}}}{{{f{Ln}}}{{f{AOn}}}}`{{}c{}}00{{{f{Bf}}c}Nd{{Kl{{Dd{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Nd{{Kl{{Dd{{An{{AJn{Bf}}}}}}}}}}{{{f{Bf}}c}Nd{{Kl{{Dd{{AJn{Bf}}}}}}}}{{{f{Bf}}c}Nd{{Kl{{Dd{{f{Bf}}}}}}}}{{{f{Bf}}c}Eb{{Kl{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Eb{{Kl{{Dd{{An{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kl{{Dd{{AJn{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Eb{{Kl{{Dd{{An{{AJn{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}e}{{ADn{c}}}Hh{{Kl{{Dd{{An{c}}}}}}}}{{{f{Bf}}{f{{Dd{c}}}}}{{ADn{c}}}Hh}{{DfGn}Jn}{{{f{Bf}}Df}Ln}{{{f{Bf}}}{{ADn{c}}}Hh}{{{f{Dj}}EjEj}Dj}{{{f{Ff}}EjEj}Ff}{{{f{Nd}}EjEj}Nd}{{{f{Eb}}EjEj}Eb}{{{f{AJh}}EjEj}AJh}{{{f{{ADn{c}}}}EjEj}{{ADn{c}}}Hh}{{{f{Bf}}{F`{c}}}{{ADn{c}}}Hh}{{{f{Bf}}{F`{c}}Gf}{{ADn{c}}}Hh}{{{l{c}}}{{ALj{ec}}}BnBn}{{{f{Ff}}}c{}}{Ffc{}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nd}}{f{Nd}}}Ff}{{{f{Nd}}{f{Bf}}}Ff}{{{f{Eb}}{f{{Dd{Db}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543201{{{f{Dj}}}{{Af{{AFj{Jb}}}}}}{{{f{Dj}}}{{`{{M`{}{{B`{{An{Ad}}}}}}}}}}{{{f{Nd}}}{{`{{M`{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Mb{}{{B`{{An{Ad}}}}}}}}}}{{{f{Nd}}}{{`{{Mb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Gn}}{f{Gn}}}{{An{B@h}}}}{{{f{AM`}}{f{AM`}}}{{An{B@h}}}}{{{f{Id}}}{{An{Ej}}}}{{{f{{ALj{AN`Ib}}}}}{{An{Ej}}}}{{{f{AK`}}K`Md}{{Af{{An{Hj}}}}}}{{{f{AKb}}K`Md}{{Af{{An{K`}}}}}}{{{f{AK`}}K`Md}{{Af{Jn}}}}{{{f{AKb}}K`Md}{{Af{Jn}}}}{{{f{Bf}}EjK`}{{Af{Ff}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAJl}}}{}}000000{{{f{Dj}}}Dj}{{{f{Ff}}}Ff}{{{f{Nd}}}Nd}{{{f{Eb}}}Eb}{{{f{AJh}}}AJh}{{{f{{ADn{c}}}}}{{ADn{c}}}Hh}`{{{f{Id}}}Ej}{{{f{{ALj{AN`Ib}}}}}Ej}{{{f{Ff}}c{An{d}}}{{Af{Ff}}}{{G`{}{{B`{H`}}}}}}{{{f{Nd}}c{An{{f{Bf}}}}}{{Af{Nd}}}{{G`{}{{B`{H`}}}}}}{{{f{Eb}}c{An{{f{{Dd{Db}}}}}}}{{Af{Eb}}}{{G`{}{{B`{H`}}}}}}{{{f{Ff}}ce}{{Af{Ff}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Nd}}ce}{{Af{Nd}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{{f{{Dd{Db}}}}}}}{{C`{{An{{F`{Db}}}}}}}}}}{{{f{Ff}}{f{Ff}}{An{d}}}{{Af{Ff}}}}{{{f{Nd}}{f{Ff}}{An{{f{Bf}}}}}{{Af{Nd}}}}{{{f{Eb}}{f{Ff}}{An{{f{{Dd{Db}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhLn}}AOn}b}{{{f{Dj}}Jb}Dj}{{{f{Ff}}Jb}Ff}{{{f{Nd}}Jb}Nd}{{{f{Eb}}Jb}Eb}{{{f{AJh}}Jb}AJh}{{{f{{ADn{c}}}}Jb}{{ADn{c}}}Hh}{{{f{Dj}}Jb{An{{f{Ad}}}}}Dj}{{{f{Ff}}Jb{An{d}}}Ff}{{{f{Nd}}Jb{An{{f{Bf}}}}}Nd}{{{f{Eb}}Jb{An{{f{{Dd{Db}}}}}}}Eb}{{{f{AJh}}Jb{An{{f{{Dd{Db}}}}}}}AJh}{{{f{{ADn{c}}}}Jb{An{{Hd{c}}}}}{{l{{Hd{c}}}}}Hh}{{{f{Ff}}d}Ff}{{{f{Nd}}d}Nd}{{{f{Eb}}d}{{l{D`}}}}{{{f{AJh}}d}AJh}{{{f{Ff}}Dl}{{l{Al}}}}{{{f{Nd}}Dl}{{l{Cn}}}}{{{f{Eb}}Dl}{{l{D`}}}}{{{f{AJh}}Dl}AJh}{{{f{AK`}}Db}Jn}{{{f{AKb}}Db}Jn}{{{f{Gn}}{f{Df}}}{{An{Gn}}}}`{{{f{Id}}{f{Id}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAJl}}}{}}000000{{{f{Ff}}}{{An{H`}}}}{{{f{Ff}}}Jn}{{{f{Eb}}}Jn}{{{f{Nd}}{f{c}}}Nd{{Kl{{Dd{H`}}}}Mh}}{{{f{Nd}}{f{Dn}}}Nd}{{{f{Eb}}{f{c}}}Eb{{Kl{{Dd{H`}}}}Mh}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Df}}d}AD`}{{{f{Ln}}d}AOf}{AM`ANh}{{{f{Df}}{f{Bf}}d}AOf}{AM`{{f{Bf}}}}{{{f{Nd}}Ej}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{AD`}}}{{f{AD`}}}}{{{f{Dj}}}{{Af{Nb}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{AD`}}}B@j}{{{f{c}}}Dh{}}00{{{f{Eb}}}Nd}{{{f{Gn}}{f{Gn}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gb{AKde}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}}0{{AD`g}{{Gb{AKfe}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}}0{ANj{{Gb{eg}}}{}{{AKd{c}}AIf}{}}0{{ANjAD`}{{Gb{eg}}}{}{{AKf{c}}AIf}{}}0{{{f{Gn}}}{{Af{c}}}Jl}{c{{Gb{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Gn}}{f{Df}}}{{Af{Gn}}}}{{{f{Df}}d}{{Af{AD`}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nh{}}0000000000000000000000000000000000{{{f{AD`}}}AD`}{{{f{Ff}}}{{Af{Ff}}}}{{{f{Nd}}}{{Af{Nd}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{ADn{c}}}}}{{Af{{l{{Hd{c}}}}}}}Hh}{{{f{BhJn}}Gn}b}{{{f{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Ej}cA@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Jn}}}{{f{Gn}}}}1{{{f{Df}}Gn}d}{{{f{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gA@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{AK`}}Db}Jn}{{{f{AKb}}Db}Jn}{{{f{Ff}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{B@l}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{B@n}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{ANn}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{BA`}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{BAb}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{BAd}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{BAf}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{BAh}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{B@d}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{AK`}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{AKb}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{Nd}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{Eb}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{AJh}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}{{{f{{ADn{c}}}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}Hh}{{{f{Ff}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{B@l}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{B@n}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{ANn}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{BA`}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{BAb}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{BAd}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{BAf}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{BAh}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{B@d}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{AK`}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{AKb}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{Nd}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{Eb}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{AJh}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}{{{f{{ADn{c}}}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}Hh}{ce{}{}}0000000000000000000000000000000000{Ejc{}}0{Ej{{BAj{ce}}}{}{}}{{{f{{Dd{Nj}}}}e}c{}{{Nl{{f{Dn}}}{{C`{c}}}}}}{{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{An{Gf}}}{{AIf{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}A@b{AL`{ALb{c}}}{{Fd{}{{B`{c}}}}GlIfIh}}{{{f{Df}}}Gn}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{ALd}}}d}{{ALdd}ALd}{{{f{BhBAl}}{An{{f{Bf}}}}}b}{{{f{BhALd}}{f{ALd}}}{{Af{b}}}}{{{f{BhBAl}}}b}{{{f{BhBAl}}{f{Bf}}}b}{{{f{ALd}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{ALd}}{f{ALd}}c}{{Af{ALd}}}ALf}{{{f{ALd}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{ALd}}}ALd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BAn}{Ej{{f{c}}}{}}000{Ej{{f{Bhc}}}{}}000{{BAlc}ALd{{G`{}{{B`{{An{{f{Bf}}}}}}}}}}{Ejb}000{{{f{ALd}}}{{f{Df}}}}{{{f{ALd}}{f{Nd}}}c{}}{{{f{ALd}}{f{ALd}}}c{}}{{{f{ALd}}{f{Bf}}}c{}}210{{ALf{f{ANn}}{f{ANn}}}{{Af{ANn}}}}{BAlALd}{BAn{{Kf{BB`}}}}{cc{}}000{{ANn{Kf{BB`}}dBBb}ALd}{{ANnBBb}ALd}{{{f{Nd}}{f{ANl}}BBb}{{Af{ALd}}}}{{{f{Bf}}dEjBBb}ALd}{{{f{ALd}}Ej}{{Af{Gn}}}}{{{f{ALd}}Ej}Gn}{{{f{ALd}}}{{f{{Kf{BB`}}}}}}=<;=;<{{}Ej}000{ce{}{}}0000{ALdAd}{{{f{ALd}}}d}0{{{f{ALd}}}BBd}{{{f{ALd}}}Ej}{{{f{ALd}}{f{Nd}}}c{}}{{{f{ALd}}{f{Bf}}}c{}}{{{f{ALd}}{f{ALd}}}c{}}012{{{f{ALd}}{f{ALd}}}{{Af{{Gh{ALdALd}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{ALd}}}Jn}{{{f{BhBAn}}{f{{Kf{BB`}}}}}{{Af{b}}}}1{{{f{ALd}}}{{Af{Ej}}}}{{{f{ALd}}}{{f{Bf}}}}{{{f{Bf}}EjBBb}BAl}{{{Kf{BB`}}}BAn}{{{f{BhBBd}}}{{An{c}}}{}};9:;9:<{{{f{ALd}}}{{f{ANn}}}}{{{f{BhBAl}}{f{Bf}}}{{Gh{Lhd}}}}`{{{f{BBd}}}{{Gh{Ej{An{Ej}}}}}}{{{f{ALd}}d}ALd}{{{f{ALd}}Dl}ALd}`{{{f{ALd}}dd}En}{{{f{ALd}}{f{ANl}}BBf}ALd}{{{f{ALd}}}{{Af{ALd}}}}{{{f{ALd}}}ALd}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0000000{{{f{c}}}Nh{}}0004{{{f{ALd}}}d}{{{f{ALd}}}{{Af{BBh}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{ANlBB`}{{{f{BBb}}}BBb}{{{f{BB`}}}BB`}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}BBb}{{}BB`}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{Ejb}0{{{f{BBb}}{f{BBb}}}d}{{{f{BB`}}{f{Bf}}}{{An{Lh}}}}{{{f{BBb}}{f{BhFh}}}Fj}{{{f{BB`}}{f{BhFh}}}Fj}{cc{}}0{{{f{BB`}}Lh}{{f{Bf}}}}{{{f{BB`}}}{{f{ANl}}}}{{{f{BB`}}Lh}{{An{{f{Bf}}}}}}{{}Ej}0{ce{}{}}0{{{f{BB`}}}d}0{{{f{BB`}}}Ej}{{{f{BB`}}{f{BB`}}}d}{{{f{c}}}e{}{}}0{c{{Gb{e}}}{}{}}000{{{f{c}}}Nh{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BBj}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{{}b}{{{f{BhBBj}}}b}{Ejb}2{cc{}}6{{}Ej}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BBl}}}{{f{Bf}}}}<<;;`99{{{f{BBl}}}f}9966`{{{f{BBn}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{BBl}}{f{BhFh}}}{{Gb{bAO`}}}}077{cBBl{{AOd{{AJn{Bf}}}}}}{{}{{Jf{{f{Bf}}BBn}{{C`{b}}}}}}8877{cAJlAIj}````{{{Jf{{f{Bf}}BBn}{{C`{b}}}}}b}{cAJlBC`}{{{f{c}}}Dh{}}{c{{Gb{e}}}{}{}}000{{{f{c}}}Nh{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCb}}}BCb}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{BhFh}}LdEj}Fj}{cc{}}{{}BCd}{{}BCb}{{}{{An{Ej}}}}{{}Dh}{{}d}{{}Ej}{ce{}{}}{{{An{BCd}}}b}{BCbb}{{{An{Ej}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBBh}}{F`{Ad}}{f{BCf}}}{{Af{b}}}}{{{f{BBh}}{f{Cb}}}{{F`{Ad}}}}0{{{f{BBh}}{f{Ff}}}{{Af{BBh}}}}{{{f{BBh}}{f{{Dd{AOn}}}}}{{Af{BBh}}}}0{{{f{BBh}}JbEj}BBh}{{BBh{f{Ad}}}c{}}{{{f{BBh}}{f{Ad}}}c{}}{{{f{BBh}}{f{BBh}}}c{}}{{{f{BhBBh}}}{{f{BhBBh}}}}{{{f{BhBBh}}{f{Bf}}e}{{Af{{f{BhBBh}}}}}BCh{{Nl{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBBh}}Eje}{{Af{{f{BhBBh}}}}}BCh{{Nl{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BBh}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{{f{BBh}}}BBh}{{{f{BCj}}}BCj}{{{f{BCl}}}BCl}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BBh}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BBh}}e}{{Af{{F`{{f{Ad}}}}}}}{{Kl{Bf}}}{{G`{}{{B`{c}}}}}}{{}BCl}{{}BBh}{Ej{{f{c}}}{}}0000{Ej{{f{Bhc}}}{}}0000{{{f{BBh}}{f{Ad}}}c{}}{{{f{BBh}}{f{BBh}}}c{}}{{BBh{f{Ad}}}c{}}{Ejb}000{{{f{BBh}}{f{Bf}}}{{Af{BBh}}}}1{{{f{BhBBh}}{f{Bf}}}{{Af{Ad}}}}{{{f{BBh}}{f{{Dd{c}}}}}BBh{{Kl{Bf}}}}{{{f{BBh}}{f{{BCn{{f{Bf}}}}}}}BBh}{{{f{BBh}}{An{{f{{Dd{c}}}}}}}{{Af{BBh}}}{{Kl{Bf}}}}{{{f{BBh}}}{{F`{Df}}}}<{{{f{BD`}}}BBh}{{{f{BCf}}}BBh}{{{f{BCl}}{f{BCl}}}d}{{{f{BBh}}{f{BBh}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BBh}}}Ej}`{{{f{BBh}}e}{{Af{BBh}}}{{Kl{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BBh}}{F`{Ad}}}{{Af{BBh}}}}{{{f{BhBBh}}{f{BBh}}}{{Af{b}}}}{{{f{BBh}}}{{F`{Ln}}}}{{{f{BBh}}AFd}{{Af{BBh}}}}{{{f{BBh}}{f{Ff}}}{{Af{BBh}}}}{{{f{BCj}}{f{BhFh}}}Fj}{{{f{BCl}}{f{BhFh}}}Fj}{{{f{BBh}}{f{BhFh}}}Fj}0{cc{}}0000{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cBBh{{G`{}{{B`{Ad}}}}}}{{{f{{Dd{BDb}}}}}{{Af{BBh}}}}{{{f{{Dd{BDb}}}}{f{BCf}}}{{Af{BBh}}}}{{c{f{BCf}}}{{Af{BBh}}}{{Bd{}{{B`{{f{BDb}}}}}}}}{{{f{BBh}}Ej}{{An{{F`{Gn}}}}}}{{{f{BBh}}{f{Bf}}}{{An{Ej}}}}{{{f{BBh}}}{{F`{{f{Bf}}}}}}{{{f{BBh}}}{{F`{AOn}}}}{{{f{BBh}}}{{f{{Dd{Ad}}}}}}{{{f{BhBBh}}}{{f{Bh{F`{Ad}}}}}}{{{f{BBh}}Ej}{{Af{BDb}}}}{{{f{BBh}}Ej{f{BhBDb}}}{{Af{b}}}}{{{f{BBh}}Ej{f{BhBDb}}}b}{{{f{BBh}}}{{An{{Af{Df}}}}}}`{{{f{BBh}}e}{{Af{BDd}}}{{Kl{Bf}}}{{G`{}{{B`{c}}}}}}0{{{f{BBh}}{F`{Ad}}dd}{{Af{BDd}}}}{{{f{BCl}}{f{Bhc}}}bAAl}{{{f{BhBBh}}{An{Ml}}}{{Af{BA`}}}}{{{f{BBh}}{An{Ej}}}BBh}{{{f{BBh}}}Ej}{{{f{BBh}}{f{{Dd{Ad}}}}}{{Af{BBh}}}}{{{f{BhBBh}}{f{{Dd{Ad}}}}}{{Af{{f{BhBBh}}}}}}{{{f{BhBBh}}{f{{Dd{Ad}}}}}{{f{BhBBh}}}}{{{f{BBh}}{BDf{Ej}}}{{f{c}}}{}}{{{f{BBh}}BDh}{{f{c}}}{}}{{{f{BBh}}{L`{Ej}}}{{f{c}}}{}}{{{f{BBh}}{BDj{Ej}}}{{f{c}}}{}}{{{f{BBh}}{BDl{Ej}}}{{f{c}}}{}}{{{f{BBh}}{BDn{Ej}}}{{f{c}}}{}}{{{f{BBh}}Ej}{{f{c}}}{}}{{{f{BBh}}{f{Bf}}}{{f{c}}}{}}{{}Ej}0000{{{f{BhBBh}}Ejc}{{Af{{f{BhBBh}}}}}BCh}{ce{}{}}000000{{{f{BBh}}}{{Af{Ff}}}}{{{f{BBh}}}d}1{{{f{BBh}}}{{Jd{Ad}}}}{{{f{BBh}}dd}BE`}{{{f{BBh}}}{{`{{Bd{}{{B`{BBh}}}}}}}}{{{f{BBh}}}BEb}{{{f{BBh}}}Ej}{{{f{BBh}}}{{Af{{An{Ad}}}}}}{{{f{BBh}}BCj}{{Af{{An{Ad}}}}}}1{{BBh{f{Ad}}}c{}}{{{f{BBh}}{f{Ad}}}c{}}{{{f{BBh}}{f{BBh}}}c{}}55{{{F`{c}}}{{Af{BBh}}}BCh}{{{F`{Ad}}}BBh}{{{F`{Ad}}}{{Af{BBh}}}}{{{f{BhBE`}}}{{An{c}}}{}}{{{f{BhBEb}}}{{An{c}}}{}}{{{f{BBh}}}BBh}{{{f{BBh}}cd}{{Af{{F`{BBh}}}}}{{BEd{Dh}}}}0{{BBhe}{{Af{c}}}{}{{Cb{BBh}{{C`{{Af{c}}}}}}}}{{{f{BhBBh}}e}{{Af{c}}}{}{{Cb{{f{BhBBh}}}{{C`{{Af{c}}}}}}}}{{BBhgc}{{Af{e}}}{}{}{{Cb{BBhc}{{C`{{Af{e}}}}}}}}{{{f{BhBBh}}}{{An{Ad}}}}{{{f{BBh}}{f{BBh}}}d}>=<{{{f{BhBBh}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBBh}}}}}}{{{f{BhBBh}}{f{Bf}}c}{{Af{{f{BhBBh}}}}}BCh}{{{f{BhBBh}}Ejc}{{Af{{f{BhBBh}}}}}BCh}19`{{{f{BBh}}{f{Ad}}dd{An{Hl}}}{{Af{BBh}}}}0{{{f{BBh}}Ejdd{An{Hl}}}{{Af{BBh}}}}{{{f{BBh}}}BCf}{{{f{BBh}}{f{BBh}}}{{Af{b}}}}{{{f{BBh}}e}{{Af{BBh}}}{{Kl{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BBh}}Ej}{{An{{f{Ad}}}}}}{{{f{BBh}}c}{{Af{BBh}}}{{BEf{Ej}}}}2{{{f{BBh}}c}{{Af{{F`{Ad}}}}}{{BEd{AOn}}}}{{{f{BBh}}e{f{BEh}}}{{Af{BBh}}}{{Kl{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BBh}}e{f{BCf}}}{{Af{BBh}}}{{Kl{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BhBBh}}{f{{Dd{c}}}}}{{Af{b}}}{{Kl{Bf}}}}{{{f{BBh}}}{{Gh{EjEj}}}}{{{f{BBh}}Jb}BBh}{{{f{BBh}}}d}{{{f{BhBBh}}}b}{{{f{BE`}}}{{Gh{Ej{An{Ej}}}}}}{{{f{BEb}}}{{Gh{Ej{An{Ej}}}}}}{{{f{BBh}}JbEj}BBh}00{{{f{BBh}}cE`}{{Af{BBh}}}{{BEd{AOn}}}}{{{f{BhBBh}}cE`}{{Af{{f{BhBBh}}}}}{{BEd{AOn}}}}{{{f{BBh}}Jb}{{Gh{BBhBBh}}}}0{{{f{BhBBh}}}{{`{{Bd{}{{B`{BBh}}}}}}}}{{BBhEjd}{{F`{BBh}}}}{{{f{BBh}}{f{Ad}}}c{}}{{{f{BBh}}{f{BBh}}}c{}}{{BBh{f{Ad}}}c{}}{{{f{BBh}}BCj}{{Af{{An{Ad}}}}}}{{{f{BBh}}{An{Ej}}}BBh}{{{f{BBh}}{f{Dn}}}{{Af{BBh}}}}{{{f{BBh}}{f{Dn}}}BBh}{{{f{BBh}}{f{Dn}}d}BBh}{{{f{BBh}}BEj}{{Af{Nb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BhBBh}}{An{{f{Bf}}}}{An{{Nf{Dh{F`{Dh}}}}}}}{{Af{BBh}}}}{{{f{BhBBh}}{f{Bf}}e}{{Af{{f{BhBBh}}}}}BCh{{Nl{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBBh}}Eje}{{Af{{f{BhBBh}}}}}BCh{{Nl{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gb{e}}}{}{}}000{BEl{{Af{BBh}}}}1{{{Gh{BEn{f{{Dd{AOf}}}}}}}{{Af{BBh}}}}{{c{f{BCf}}}{{Af{BBh}}}{{Bd{}{{B`{{Af{{f{BDb}}}}}}}}}}{{{f{BBh}}{f{Bf}}}{{Af{Ej}}}}44444{{{f{c}}}Nh{}}0000{{{f{BBh}}{An{{f{{Dd{Dh}}}}}}BCl{An{{Gh{JbEj}}}}}{{Af{BBh}}}}{{{f{BBh}}d{An{{f{{Dd{Dh}}}}}}BCl{An{{Gh{JbEj}}}}}{{Af{BBh}}}}1{{{f{BBh}}ce}{{Af{BBh}}}{{BEd{AOn}}}{{BEd{AOn}}}}{{{f{BBh}}BF`}{{Af{BBh}}}}{{{f{BBh}}{f{BBh}}}{{Af{BBh}}}}{{{f{BhBBh}}{f{BBh}}}{{Af{{f{BhBBh}}}}}}{ce{}{}}0000{{{f{BBh}}}Ej}{{{f{BhBBh}}c}{{Af{{f{BhBBh}}}}}BCh}{{{f{BhBBh}}c{f{BCf}}}{{Af{{f{BhBBh}}}}}BCh}{{{f{BhBBh}}Ad}{{f{BhBBh}}}}{{{f{BBh}}{f{Bf}}{An{H`}}}{{Af{BBh}}}}{{{f{BhBBh}}{f{Bf}}{An{H`}}}{{f{BhBBh}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BF`}}}BF`}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BF`}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{BF`}}{f{BF`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BF`}}{f{BhFh}}}Fj}{cc{}}{{{f{BF`}}{f{Bhc}}}bAAl}`{{}Ej}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BDd}}}{{Af{BBh}}}}`{{{f{BFb}}}{{f{{Dd{BFd}}}}}}{{{f{BDd}}c}{{Af{BBh}}}{{Ch{BBh}{{C`{{Af{BBh}}}}}}IfIh}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BFb}}}BFb}{{{f{Aj}}}Aj}{{{f{BDd}}}BDd}{{{f{BFf}}}BFf}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFb}{{}Aj}{Ej{{f{c}}}{}}000{{{f{BFh}}}{{f{c}}}{}}1111{Ej{{f{Bhc}}}{}}0000000`{{BFje}{}{}{{BFl{c}}}}{Ejb}000{{{f{BhBFb}}}b}1111{{{f{BFb}}{f{BFb}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BFn}}}H`}{{{f{BFb}}}{{f{{Dd{H`}}}}}}{{{f{BDd}}}{{Af{BBh}}}}{{{f{BhBFb}}}{{f{Bh{F`{H`}}}}}}{{{f{BFb}}{f{BhFh}}}Fj}{{{f{Aj}}{f{BhFh}}}Fj}{{{f{BDd}}{f{BhFh}}}Fj}{{{f{BFf}}{f{BhFh}}}Fj}0{{{f{Bf}}BFf}Dh}{cc{}}0000{{{F`{BG`}}}BFb}{{{F`{{F`{BG`}}}}}BFb}{{{F`{{Gh{{F`{H`}}{F`{BFd}}}}}}}BFb}{BFbAj}444{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cBFb{{G`{}{{B`{BG`}}}}}}{cBFb{{Gj{}{{B`{BG`}}}}}}{{{f{Aj}}Ej}BFn}{{{f{BDd}}}{{f{Aj}}}}{{{f{BhBDd}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BGb}}dd}{{Af{Aj}}}}0{{{f{BDd}}}{{Af{BBh}}}}{{{f{BhAj}}}{{f{BhBFb}}}}{{}Ej}0000000{ce{}{}}0000000{AjBFb}1{BFbc{}}{{{f{BFb}}}c{}}301{{{f{BFn}}}d}{{{f{Aj}}}d}{{{f{BFb}}}d}{{{f{BFb}}}{{BGf{{BGd{{Jd{H`}}}}{Jd{BFd}}}}}}{{{f{Aj}}}BGh}{{{f{BDd}}}{{F`{Ad}}}}{{{f{BDd}}{An{{Gh{JbEj}}}}}{{F`{Ad}}}}={{{f{BFn}}}Ej}{{{f{Aj}}}Ej}?????{{{F`{H`}}{F`{BFd}}d}BFb}{{{f{BBh}}{F`{Ad}}Aj{An{{F`{Dh}}}}}BDd}{{{f{BhBGh}}}{{An{c}}}{}}{{{f{BhBGh}}Ej}{{An{c}}}{}}{{{f{BDd}}c}{{Af{BBh}}}{{Cb{BBh}{{C`{{Af{BBh}}}}}}IfIh}}{{{f{c}}}{}{}}{{{f{Aj}}}BFj}{{{f{BDd}}K`Md}{{Af{BBh}}}}{{BDde}BDd{{Kl{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{Aj}}JbEj}BFh}{{{f{BhBFb}}}b}{{{f{BhAj}}}b}{{{f{BDd}}Db}{{Af{BBh}}}}{{{f{BDd}}}{{Af{BBh}}}}{Aj{{F`{H`}}}}0{BDdAj}{{{f{BhBDd}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gb{e}}}{}{}}000000000000000{{{f{c}}}Nh{}}0000000{AjAj}{{{f{Aj}}}{{f{BFb}}}}{{{f{Aj}}}{{f{BGj}}}};{ce{}{}}0000000`````{{{f{BFb}}c}Ad{{Cb{{Gh{H`{f{BFd}}}}}{{C`{An}}}}IfIh}}{{{f{BFb}}c}Ad{{Cb{{Gh{H`{f{BFd}}}}}{{C`{}}}}IfIh}}{{{f{{Dd{{BGl{H`}}}}}}c}Ad{{Cb{{BGl{H`}}}{{C`{An}}}}IfIh}}{{{f{{Dd{{BGl{H`}}}}}}c}Ad{{Cb{{BGl{H`}}}{{C`{}}}}IfIh}}{{{f{{Dd{c}}}}eBGn}{{AIn{c}}}{BH`BHb}{{Bd{}{{B`{{Gh{H`H`}}}}}}Gl}}{{{f{{Dd{c}}}}{f{Gf}}eBGn}{{AIn{c}}}{BH`BHb}{{Bd{}{{B`{{Gh{H`H`}}}}}}Gl}}{{{f{{l{c}}}}H`H`}{{l{c}}}Bn}{{{f{BGj}}{f{{Dd{En}}}}}d}{{{f{BHd}}{f{Aj}}}Ad}{{BHfBHf}BHf}0`{{{f{BHh}}{f{BBh}}{f{Aj}}}{{Af{Ad}}}}{{{f{BHh}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBHj}}Gn}{{An{b}}}}{{{f{BhBHl}}{f{Gn}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BHj}}}BHj}{{{f{BHl}}}BHl}{{{f{BDb}}}BDb}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Dd{c}}}}}Df{{AOl{Df}}}}{{}BDb}{Ej{{f{c}}}{}}00{Ej{{f{Bhc}}}{}}00{Ejb}00{{{f{BDb}}{f{BDb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDb}}{f{BhFh}}}Fj}{cc{}}{{{Gh{{f{Df}}Ej}}}BHj}{{{Gh{{f{Df}}Ej}}}BHl}22{{eEj}BCf{{AOd{Df}}}{{Bd{}{{B`{{F`{{Gh{Dhc}}}}}}}}}}{{}Ej}00{ce{}{}}00{BHjAd}{BHlAd}{{{f{Df}}Ej}BHj}{{{f{Df}}Ej}BHl}{{{F`{Gn}}}BDb}{{{f{BhBHj}}Ej}Ad}{{{f{BhBHl}}Ej}Ad}{{{f{{Dd{BDb}}}}{An{Ej}}}{{Af{BCf}}}}0{{{f{{Dd{BDb}}}}{An{Ej}}}{{Af{{F`{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gb{e}}}{}{}}00000{{{f{c}}}Nh{}}00<<<{{{f{{Dd{BBh}}}}}{{Af{BBh}}}}0`````{{HlHl}Hl}{{{f{{Dd{BBh}}}}{An{Ml}}}{{Af{{Gh{{F`{BA`}}Ml}}}}}}{{{f{{BHn{Jb}}}}Ml{f{Bh{F`{Hl}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BI`}{Ej{{f{c}}}{}}0{Ej{{f{Bhc}}}{}}0{Ejb}0{{{f{BI`}}}Hl}{{{f{BIb}}{f{BhFh}}}Fj}{cc{}}0{{{f{BIb}}{f{Bhc}}}bAAl}``{{}Ej}0{ce{}{}}0{{{f{Bh{BId{BIbce}}}}H`Hl{f{BBh}}gi}b{}BIf{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gb{e}}}{}{}}000{{{f{c}}}Nh{}}0{{{f{BIh}}Ml{f{Bh{F`{Hl}}}}}{{Af{b}}}}0{{{f{BIh}}Ml{f{Bh{Dd{Hl}}}}}{{Af{b}}}}055{{{f{BhBI`}}{f{{Dd{Db}}}}}b}{{{f{BhBI`}}Lj}b}{{{f{BhBI`}}Jb}b}{{{f{BhBI`}}Lh}b}{{{f{BhBI`}}Hl}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Kf{ce}}}}}{{f{e}}}{}BIj}{{{f{{Kf{c}}}}}BIl{BInMh}}{{{f{{Kf{ce}}}}}{}MhBIj}{{{f{{Kf{c}}}}}LjBJ`}{{{f{{Kf{ce}}}}}{{f{c}}}MhBIj}{{{Kf{{Dd{{BJb{c}}}}e}}}{{Kf{{Dd{c}}e}}}{}BIj}{{{Kf{{BJb{c}}e}}}{{Kf{ce}}}{}BIj}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{ALd}}{f{ALd}}c}{{Af{ALd}}}ALf}{{{f{{Kf{c}}}}}{{An{{f{AIj}}}}}{AIjMh}}`{{{f{BJd}}{f{Ad}}}{{Af{Ad}}}}{{{f{BJd}}c}{{Af{Ad}}}Ab}{{{f{Nj}}}Nj}{{{f{BJf}}}BJf}{{{f{{Kf{ce}}}}}{{Kf{ce}}}Mh{BIjA@b}}{{{f{Mf}}}Mf}{{{f{BEj}}}BEj}{{{f{AOf}}}AOf}{{{f{BD`}}}BD`}{{{f{Md}}}Md}{{{f{BJh}}}BJh}{{{f{BJj}}}BJj}{{{f{BJl}}}BJl}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{c}}}b{}}00000000000000000{{{f{{Kf{ce}}}}{f{{Kf{ce}}}}}B@h{BJnMh}BIj}{ANje{}{{AKd{c}}AIf}}0{{ANjAD`}e{}{{AKf{c}}AIf}}0{{{f{c}}{f{e}}}B@h{}{}}{{AJlBBl}AJl}{AJlAJl}{{{f{Fl}}{f{AD`}}}{{AAj{Fl}}}}{{{f{AOf}}}{{f{AD`}}}}```{{}b}{cbBIj}{{}{{Kf{c}}}BK`}{{}{{Kf{BKb}}}}{{}{{Kf{Bf}}}}{{}{{Kf{{Dd{c}}}}}{}}{{}Mf}{{}BEj}{{}AOf}{{}BD`}{{}Md}`{Ej{{f{c}}}{}}00{{{f{{Kf{ce}}}}}{{f{c}}}MhBIj}1111111111{Ej{{f{Bhc}}}{}}000000000000{{{f{{Kf{c}}}}}{{f{Bf}}}{AIjMh}}`{{{Kf{ADbc}}}{{Gb{{Kf{ec}}{Kf{ADbc}}}}}BIj{ADbIfIh}}{{{Kf{ADbc}}}{{Kf{ec}}}BIj{ADbIfIh}}{{{f{{Kf{ce}}}}}{{BKd{ce}}}Mh{A@bBIj}}{Ejb}000{{{f{Bh{Kf{ce}}}}}bMhBIj}111111111{{{f{Nj}}{f{Nj}}}d}{{{f{{Kf{BKf}}}}{f{BKf}}}d}{{{f{{Kf{ce}}}}{f{{Kf{ce}}}}}d{BKhMh}BIj}{{{f{{Kf{Fl}}}}{f{Fl}}}d}{{{f{Mf}}{f{Mf}}}d}{{{f{BEj}}{f{BEj}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{BD`}}{f{BD`}}}d}{{{f{Md}}{f{Md}}}d}{{{f{BJl}}{f{BJl}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BJf{{Gh{LhLh}}}}`{{BD`c}BD`{{Cb{Ej{f{AOf}}}{{C`{d}}}}}}{{ALf{f{ANn}}{f{ANn}}}{{Af{ANn}}}}{{{f{Bh{Kf{ACf}}}}}{{Gb{bBKj}}}}{{{f{AJl}}{f{BhFh}}}{{Gb{bAO`}}}}0{{{f{Nj}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{BJf}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{{Kf{ce}}}}{f{BhFh}}}{{Gb{bAO`}}}{ADdMh}BIj}{{{f{{Kf{ce}}}}{f{BhFh}}}{{Gb{bAO`}}}{BC`Mh}BIj}{{{f{{Kf{ce}}}}{f{BhFh}}}{{Gb{bAO`}}}MhBIj}{{{f{Mf}}{f{BhFh}}}Fj}{{{f{BEj}}{f{BhFh}}}Fj}{{{f{AOf}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{BD`}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{Md}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{BJh}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{BJj}}{f{BhFh}}}{{Gb{bAO`}}}}{{{f{BJl}}{f{BhFh}}}{{Gb{bAO`}}}}`{cc{}}{BKlAJl}{BKnAJl}{BL`AJl}{BKjAJl}{LhNj}55{BLb{{Kf{BKb}}}}{BLd{{Kf{BLf}}}}{BLhc{}}{{{AJn{c}}}{{Kf{c}}}{BLjMh}}{Dh{{Kf{Bf}}}}{{{F`{ce}}}{{Kf{{Dd{c}}e}}}{}{BIjA@b}}{{{Kf{Bf}}}{{Kf{{Dd{Db}}}}}}{{{f{Bf}}}{{Kf{Bf}}}}={c{{Kf{c}}}{}}{{{f{BKb}}}{{Kf{BKb}}}}{{{f{{Dd{c}}}}}{{Kf{{Dd{c}}}}}A@b}{{{BGl{c}}}{{Kf{{Dd{c}}}}}{}}{{{AAj{ce}}}{{Kf{ce}}}MhBIj}{BLl{{Kf{BLn}}}}{{{f{BLn}}}{{Kf{BLn}}}}{{{f{BLf}}}{{Kf{BLf}}}}{cc{}}000{{{F`{AOf}}}BD`}11111{{c{An{Gf}}}BM`{}}{{{BMb{Jb}}{BMb{Db}}{An{Gf}}}BMd}{{{BMb{Jb}}{BMb{Db}}{An{Gf}}}BMf}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{e{{Kf{{Dd{c}}}}}{}{{G`{}{{B`{c}}}}}}{{gEj}{{BMh{Jb}}}Kl{{G`{}{{B`{{An{c}}}}}}}{{G`{}{{B`{{An{e}}}}}}}}0{e{{BMh{Jb}}}{{G`{}{{B`{{An{d}}}}}}}{{G`{}{{B`{{An{c}}}}}}}}{{gAD`}{{BMh{Jb}}}BHb{{G`{}{{B`{{An{c}}}}}}}{{G`{}{{B`{{An{e}}}}}}}}2{e{{Kf{{Dd{c}}}}}If{{Gj{}{{B`{c}}}}}}{{}{{Kf{c}}}Mh}{c{{Kf{ec}}}BIjMh}{{{f{Bf}}}{{Gb{BMj}}}}{{{f{Bf}}c}BMl{}}{{{f{{Kf{ce}}}}{f{{Kf{ce}}}}}d{BMnMh}BIj}{{{f{Bh{Kf{ce}}}}}{{An{{f{Bhc}}}}}MhBIj}{{{f{Bh{Kf{ce}}}}}{{f{Bhc}}}MhBIj}{{{f{BD`}}}{{F`{{f{Bf}}}}}}{{{f{BD`}}}{{F`{{Gh{{f{Bf}}c}}}}}{}}{{{f{En}}Ej}Gn}5{{{f{BN`}}}d}{{{f{{Kf{ce}}}}{f{Bhg}}}b{BNbMh}BIjAAl}{{{f{BEj}}{f{Bhc}}}bAAl}{{{f{AOf}}{f{Bhc}}}bAAl}{{{f{Md}}{f{Bhc}}}bAAl}{{{f{BJl}}{f{Bhc}}}bAAl}{{{f{Nj}}}Lh}{{}b}{cb{A@bBIj}}{{{f{BD`}}{f{Bf}}}{{An{Ej}}}}{{{f{{Dd{Lh}}}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{}Ej}000000000000`{{{f{BhBJf}}}{{f{BhHl}}}}`{ce{}{}}000000000000{{{Kf{ce}}}{{An{c}}}{}BIj}{{{Kf{ce}}}{}MhBIj}{{{Kf{ce}}}{{Gh{e}}}MhBIj}{{{Kf{BNd}}}Ad}{{{f{BD`}}}d}{{{f{BJf}}}d}{{{f{Nj}}}d}`{{{f{{Kf{ACf}}}}}d}{{{f{c}}}d{}}1{{{f{{Kf{ce}}}}{f{{Kf{ce}}}}}d{BMnMh}BIj}{{{f{BD`}}}Ej}`1{{{f{ALd}}{f{ALd}}}{{Af{{Gh{ALdALd}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{Bh{Kf{ce}}}}}{{f{Bhc}}}{BNfMh}{BIjA@b}}{{{f{BNh}}}Jn}0{{{f{BNj}}}Jn}```11`{{{f{{Kf{ce}}}}{f{{Kf{ce}}}}}d{BKhMh}BIj}{{BNlEj}{{An{Ej}}}}{{{f{Bf}}c}BNn{}}{c{{Kf{c}}}{}}{{cAD`d}AOf{{AOd{Dh}}}}{e{{Kf{c}}}{}{{Nl{{f{{BKd{c}}}}}{{C`{c}}}}}}{{ce}{{Kf{ce}}}{}BIj}{{}{{Kf{{BJb{c}}}}}{}}{c{{Kf{{BJb{e}}c}}}BIj{}}{Ej{{Kf{{Dd{{BJb{c}}}}}}}{}}{{Ejc}{{Kf{{Dd{{BJb{e}}}}c}}}BIj{}}3210`{{}Nj}{{}BJf}{{{f{{Kf{ce}}}}{f{{Kf{ce}}}}}{{An{B@h}}}{BMnMh}BIj}{c{{BO`{{Kf{c}}}}}{}}{{ce}{{BO`{{Kf{ce}}}}}{}BIj}`````{{{f{BNh}}}Jn}0{{{f{{Kf{c}}}}{f{BhBOb}}}b{AIjMh}}{{{f{{Kf{ce}}}}{f{{Kf{ce}}}}}dMhBIj}{{{f{BNj}}K`Md}{{Af{Jn}}}}{{{f{Bh{Kf{ACf}}}}{f{Bh{Dd{Db}}}}}{{Gb{EjBKj}}}}{{{f{Bh{Kf{ACf}}}}BOd}{{Gb{bBKj}}}}{{{f{Bh{Kf{ACf}}}}{f{Bh{F`{Db}}}}}{{Gb{EjBKj}}}}{{{f{Bh{Kf{ACf}}}}{f{BhDh}}}{{Gb{EjBKj}}}}{{{f{Bh{Kf{ACf}}}}{f{Bh{Dd{BOf}}}}}{{Gb{EjBKj}}}}`{{{f{Bh{Kf{ACf}}}}BOh}{{Gb{HlBKj}}}}`{{{f{AJb}}EjEj}AJb}0{{{f{{Kf{c}}}}}{{An{{f{AIj}}}}}{AIjMh}}{{{f{BOj}}Db}Jn}{{LhLh}BJf}`{{{f{{Kf{ce}}}}}EjMhBIj}>>{{{f{Nj}}}{{An{Lh}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{ANj{{Gb{eg}}}{}{{AKd{c}}AIf}{}}0{{ANjAD`}{{Gb{eg}}}{}{{AKf{c}}AIf}{}}0{c{{Gb{e}}}{}{}}00{{{Kf{{Dd{c}}e}}}{{Gb{{Kf{{BGl{c}}e}}}}}{}BIj}11111111111111111111111{{BNlEj}{{Gb{EjAJl}}}}{c{{Gb{{Kf{c}}BOl}}}{}}{{ce}{{Gb{{Kf{ce}}BOl}}}{}BIj}{{}{{Gb{{Kf{{BJb{c}}}}BOl}}}{}}{c{{Gb{{Kf{{BJb{e}}c}}BOl}}}BIj{}}10{c{{Gb{{BO`{{Kf{c}}}}BOl}}}{}}{{ce}{{Gb{{BO`{{Kf{ce}}}}BOl}}}{}BIj}{{{f{BD`}}{f{{Dd{Ej}}}}}{{Gb{BD`AJl}}}}{{{Kf{ce}}}{{Gb{c{Kf{ce}}}}}{}BIj}{{{f{c}}}Nh{}}000000000000{{{Kf{ce}}}cA@bBIj}`{{{f{BOj}}Db}Jn}{ce{}{}}000000000000{{{f{{Kf{ce}}}}}EjMhBIj}``{{AOf{BOn{DhDh}}}AOf}{{BD`{BOn{DhDh}}}BD`}{{{f{Bh{Kf{ACf}}}}{f{{Dd{Db}}}}}{{Gb{EjBKj}}}}{{{f{Bh{Kf{ACf}}}}{f{{Dd{C@`}}}}}{{Gb{EjBKj}}}}```````{{c{An{Gf}}}BM`{}}{{{BMb{Jb}}{BMb{Db}}{An{Gf}}}BMd}{{{BMb{Jb}}{BMb{Db}}{An{Gf}}}BMf}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{C@b{An{{f{AD`}}}}}{{Gb{{BMh{Jb}}AJl}}}}{cc{}}{{}Ej}{ce{}{}}{{{f{C@b}}}d}{EjC@b}{{{f{C@b}}}{{f{{Dd{Jb}}}}}}{{{f{BhC@b}}{f{Fl}}}b}{{{f{BhC@b}}}b}{{{f{BhC@b}}{f{{Dd{{AAj{Fl}}}}}}}b}1{{{f{BhC@b}}{An{{f{Fl}}}}}b}{C@b{{C@d{Jb}}}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}:`{{{f{c}}h}b{}}{{{f{C@f}}}{{f{ADb}}}}{{{f{BhC@f}}}{{AAj{Fl}}}}{{{f{BhC@f}}}{{f{BhADb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@f}}}C@f}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{C@f}}}{{f{AD`}}}}{{}C@f}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{BhC@f}}Ej}b}{{{f{C@f}}{f{BhFh}}}{{Gb{bAO`}}}}{cc{}}{{}Ej}{ce{}{}}{{{f{C@f}}}Ej}{EjC@f}{{{f{BhC@f}}}b}70{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}{{{f{C@f}}}{{An{{f{C@h}}}}}}7```````{{{f{AJb}}EjEj}AJb}0`{{}b}0{{}d}``{{eEjEj}{{C@j{Jb}}}{{Kl{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEjEj}{{BHn{Jb}}}{{Kl{{Dd{Db}}}}}{{Bd{}{{B`{c}}}}}}{Hlb}``````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCf}}}BCf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BCf}}{f{Bf}}}d}{{}BCf}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{c}}{f{c}}}{{Af{b}}}C@l}{{{f{BCf}}{f{BCf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCf}}{f{BhFh}}}Fj}{{{f{C@n}}}BCf}{{{f{BDb}}}BCf}{BD`BCf}{C@nBCf}{{{f{{Dd{Ad}}}}}BCf}{cc{}}{{{f{BD`}}}BCf}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{eBCf{{AOd{Ln}}}{{G`{}{{B`{c}}}}}}{{{f{BCf}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BCf}}Ej}{{An{{Gh{{f{AOn}}{f{Df}}}}}}}}{{{f{BhBCf}}Ej}{{An{{Gh{{f{BhAOn}}{f{BhDf}}}}}}}}{{{f{BCf}}{f{Bf}}}{{An{Ln}}}}{{{f{BCf}}{f{Bf}}}{{An{{Gh{Ej{f{AOn}}{f{Df}}}}}}}}{{{f{CA`}}}{{F`{{f{Bf}}}}}}{{{f{BCf}}}{{F`{{f{Bf}}}}}}{{{f{{C@l{}{{CAb{c}}}}}}}{{F`{{Gh{{f{Bf}}c}}}}}{ADdBKh}}{{{f{BCf}}}{{F`{{Gh{{f{Bf}}c}}}}}{}}{{{f{BCf}}{f{Bhc}}}bAAl}{{{f{CA`}}{f{Bf}}}{{An{Ej}}}}{{{f{BCf}}{f{Bf}}}{{An{Ej}}}}{{}Ej}{{{f{BhBCf}}EjAOnDf}{{Af{{An{Df}}}}}}{ce{}{}}{BCfc{}}{{{f{BCf}}}d}{{{f{BCf}}}{{`{{Bd{}{{B`{{Gh{{f{AOn}}{f{Df}}}}}}}}}}}}{{{f{BCf}}}{{`{{Ij{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBCf}}}{{`{{Ij{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BCf}}}{{`{{Ij{}{{B`{Ln}}}}}}}}{{{f{BCf}}}{{`{{Ij{}{{B`{{f{AOn}}}}}}}}}}{{{f{BCf}}}Ej}{{{f{BhBCf}}BCf}b}{{{f{BhBCf}}{f{BCf}}}b}{{}BCf}{{{f{BCf}}EjAOnDf}{{Af{BCf}}}}{{{f{BhBCf}}{f{Bf}}}{{An{Df}}}}{{{f{BhBCf}}{f{Bf}}AOn}{{An{AOn}}}}{{{f{BhBCf}}Ej}b}{{{f{BhBCf}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBCf}}EjDf}{{An{Df}}}}4{{{f{BhBCf}}Ej}{{An{{Gh{AOnDf}}}}}}{{{f{BCf}}d}BD`}{{{f{c}}}e{}{}}{{{f{BhBCf}}{f{BCf}}}{{Af{d}}}}{c{{Gb{e}}}{}{}}{{{f{BCf}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BCf}}Ej}{{Af{{Gh{{f{AOn}}{f{Df}}}}}}}}{{{f{BCf}}{f{Bf}}}{{Af{Ln}}}}{{{f{BCf}}{f{Bf}}}{{Af{{Gh{Ej{f{AOn}}{f{Df}}}}}}}}{{{f{BhBCf}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{CA`}}{f{Bf}}}{{Af{Ej}}}}6{{{f{c}}}Nh{}}{ce{}{}}{EjBCf}{{{f{BhBCf}}AOnDf}{{An{Df}}}}`````````````````{{{f{c}}h}b{}}0{{{f{Bf}}{F`{En}}{f{AD`}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{AD`}}{An{{f{CAd}}}}}{{Af{Ad}}}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jl}{}}{{Adc}e{A`Jl}{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BNd}}Dl}Dn}0{{{f{BNd}}}{{Af{Dn}}}}0`{{{f{Ad}}Ej}{{f{En}}}}{{{f{BNd}}}{{f{ADb}}}}{{{f{BhBNd}}}{{f{BhADb}}}}0{{{f{Ad}}}Dj}{{{f{BhBNd}}}{{f{Bh{l{c}}}}}Bn}{{{f{BNd}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BNd}}}}{{{f{BhBNd}}}{{Af{Ej}}}}0{{{f{BhAd}}}{{Af{Ej}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AJh}}}}}}{{{f{BNd}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Ff}}}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{BNd}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{ALd}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BNd}}}El}{{{f{Ad}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{{f{BNd}}}{{f{{F`{En}}}}}}{{{f{BhBNd}}}{{f{Bh{F`{En}}}}}}{{{f{BhAd}}}{{f{Bh{F`{En}}}}}}{{{f{Ad}}}Ad}{{{f{In}}}In}1{{{f{BNd}}}{{Kf{BNd}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Id}}}}}}{{}Ad}{Ej{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}1{Ej{{f{Bhc}}}{}}000{{Adc}e{A`Jl}{}}{{{f{Ad}}c}e{A`Jl}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{K`}}}}{Ejb}000{{{f{BNd}}}Ad}0{{{f{BNd}}}{{f{Df}}}}0{{{f{In}}{f{In}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AOb}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}eAOb{}}455{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Ej}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}GnEj}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AK`}}}}}}{{{f{Ad}}}{{Af{{f{AKb}}}}}}{{{f{BNd}}}{{AJn{Ln}}}}0{{{f{Ad}}AFd}{{Af{Ad}}}}{{{f{BNd}}{f{Ff}}}{{Af{Ad}}}}{{{f{In}}{f{BhFh}}}Fj}{{{f{Ad}}{f{BhFh}}}Fj}0{{{f{Ad}}}Dh}{cc{}}00{{{l{c}}}AdBn}1{{{f{Bf}}{f{{Dd{Gn}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Dd{Gn}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}En}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{Df}}}Ad}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cAd{{G`{}{{B`{Lh}}}}}}{cAd{{G`{}{{B`{{An{d}}}}}}}}{cAd{{G`{}{{B`{Hl}}}}}}{cAd{{G`{}{{B`{{f{Lh}}}}}}}}{cAd{{G`{}{{B`{{An{Lh}}}}}}}}{cAd{{G`{}{{B`{Jb}}}}}}{cAd{{G`{}{{B`{{f{d}}}}}}}}{cAd{{G`{}{{B`{{f{Bf}}}}}}}}{cAd{{G`{}{{B`{{f{Jb}}}}}}}}{cAd{{G`{}{{B`{{f{K`}}}}}}}}{cAd{{G`{}{{B`{{An{Hl}}}}}}}}{cAd{{G`{}{{B`{{f{Hl}}}}}}}}{cAd{{G`{}{{B`{Dh}}}}}}{cAd{{G`{}{{B`{d}}}}}}{cAd{{G`{}{{B`{{An{K`}}}}}}}}{cAd{{G`{}{{B`{{An{Jb}}}}}}}}{cAd{{G`{}{{B`{{An{Lj}}}}}}}}{cAd{{G`{}{{B`{K`}}}}}}{cAd{{G`{}{{B`{{An{Hj}}}}}}}}{cAd{{G`{}{{B`{Lj}}}}}}{cAd{{G`{}{{B`{Hj}}}}}}{cAd{{G`{}{{B`{{f{Hj}}}}}}}}{cAd{{G`{}{{B`{{f{Lj}}}}}}}}{{{f{Bf}}{F`{Jb}}}Ad}{{{f{Bf}}{F`{Lh}}}Ad}{{{f{Bf}}{F`{K`}}}Ad}{{{f{Bf}}{F`{Hl}}}Ad}{{{f{Bf}}{F`{Hj}}}Ad}{{{f{Bf}}{F`{Ld}}}Ad}{{{f{Bf}}{F`{Lj}}}Ad}{{{f{Bf}}Ej{f{Df}}}Ad}{{{f{Ad}}EjEj}Ad}{{{f{BNd}}Ej}{{Af{Gn}}}}{{{f{Ad}}}Ej}{{{f{Ad}}}Hb}{{{f{Ad}}}Ad}{{{f{BNd}}}{{An{{Kj{Kh}}}}}}0{{{f{BNd}}Ej}{{An{{f{Hf}}}}}}0{{{f{BNd}}EjEj}{{An{{f{Hf}}}}}}0{{{f{BNd}}Ej}Gn}0{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AOb}{{{f{Ad}}{f{Bf}}}c{}}21{{{f{BNd}}}d}{{{f{In}}{f{Bhc}}}bAAl}{{{f{Ad}}{An{Ej}}}Ad}{{{f{Ad}}}{{Af{{f{BAd}}}}}}{{{f{Ad}}}{{Af{{f{BAf}}}}}}{{{f{Ad}}}{{Af{{f{BAh}}}}}}{{{f{Ad}}}{{Af{{f{BAb}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}Ej}000{ce{}{}}000{AdBBh}1{BChAd}{AdAd}=={{{f{Ad}}}{{Af{Ff}}}}000{{{f{BNd}}}Ff}0{{}d}00{{{f{Ad}}}In}{{{f{Ad}}}CAf}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BNd}}}Ej}{{{f{Ad}}}Ej}{{{f{BNd}}Ej}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}{{Af{Ff}}}AOb}102{{{f{Ad}}}{{Af{{An{c}}}}}Jl}{{{f{BNd}}}{{Af{Jn}}}}0{{{f{BNd}}}{{An{K`}}}}0{{{f{Ad}}}Jn}1122322{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jl}{}}{{{f{Ad}}c}e{A`Jl}{}}>>={{{f{BNd}}}{{Af{Ej}}}}0{{{f{BNd}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Lh}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Lh}}}}}}{{{f{Bf}}{L`{Lj}}}Ad}{{{f{Bf}}c}Ad{{Kl{{Dd{Dh}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{K`}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{d}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Hj}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Ld}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Ad}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Lj}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Ld}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{F`{Db}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Jb}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{{F`{Db}}}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{{AJn{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}AdBCh}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{AJn{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{{AJn{Bf}}}}}}}}}}{{{f{Bf}}{L`{Lh}}}Ad}{{{f{Bf}}{L`{Jb}}}Ad}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Hl}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Kl{{Dd{K`}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Gn}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Lj}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{Hl}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Hj}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{AJn{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{Jb}}}}}}}}{{{f{Bf}}{L`{Hl}}}Ad}{{{f{Bf}}c}Ad{{Kl{{Dd{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{Kl{{Dd{{f{Bf}}}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BNd}}EjEj}Ad}{{{f{Bf}}Ej}Ad}{{{f{BhCAf}}}{{An{c}}}{}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AOb}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}2{{{f{Ad}}c}eAOb{}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BNd}}}Ej}`{{{f{Ad}}}CAh}{{{f{Ad}}}{{Af{Jn}}}}{{{f{BNd}}K`Md}{{Af{Jn}}}}0{{{f{BNd}}}Ad}{{Adc}e{A`Jl}{}}{{{f{Ad}}c}e{A`Jl}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BhBNd}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Dd{Jb}}}}}{{Af{Ad}}}}6{InIn}{{{f{BNd}}{f{Cb}}Mf}{{Af{Ad}}}}0{{{f{Ad}}K`dd{An{Hl}}}{{Af{Ad}}}}{{{f{Ad}}Ejdd{An{Hl}}}{{Af{Ad}}}}{{{f{Ad}}Ej}Ad}{{{f{BhAd}}In}b}{{{f{BNd}}Jb}Ad}{{{f{BhBNd}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hl}}}Ad}{{{f{CAf}}}{{Gh{Ej{An{Ej}}}}}}{{{f{BNd}}JbEj}Ad}{{{f{Ad}}JbEj}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BNd}}Dl}{{Af{Ad}}}}0{{{f{BNd}}Jb}{{Gh{AdAd}}}}{{{f{Ad}}Jb}{{Gh{AdAd}}}}{{{f{BNd}}Db}{{An{K`}}}}0{{{f{BNd}}Db}{{Af{Jn}}}}0{{{f{Ad}}}{{Af{{f{Nd}}}}}}{{{f{Ad}}Ej}{{Af{{AJn{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jl}{}}{{{f{Ad}}c}e{A`Jl}{}}{{{f{Ad}}}{{Af{c}}}Jl}{{{f{BNd}}}{{Af{Jn}}}}0{{{f{Ad}}}{{Af{Jn}}}}{{{f{Ad}}{An{Ej}}}Ad}{{{f{BNd}}{f{Dn}}}{{Af{Ad}}}}{{{f{BNd}}{f{{Dd{H`}}}}}{{Af{Ad}}}}{{{f{BNd}}{f{{Dd{H`}}}}}Ad}{{{f{BNd}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Dd{H`}}}}}Ad}{{{f{Ad}}Ejd}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AJn{Ad}}}}{{{f{c}}}Dh{}}{{AdAd}{{Af{Ad}}}}{c{{Gb{e}}}{}{}}000{{{Gh{{f{AOf}}{F`{En}}}}}{{Af{Ad}}}}{{{Gh{{f{Bf}}{F`{En}}}}}{{Af{Ad}}}}{{{Gh{{f{Bf}}En}}}{{Af{Ad}}}}{{{Gh{{f{AOf}}En}}}{{Af{Ad}}}}44445{{{f{BhAd}}{Hn{c}}}dBn}6{{{f{c}}}Nh{}}000{{{f{Ad}}}{{Af{{f{B@n}}}}}}{{{f{Ad}}}{{Af{{f{ANn}}}}}}{{{f{Ad}}}{{Af{{f{BA`}}}}}}{{{f{Ad}}}{{Af{{f{B@l}}}}}}{{{f{BNd}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BNd}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BNd}}Db}{{An{K`}}}}0{{{f{BNd}}Db}{{Af{Jn}}}}0{ce{}{}}000{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jl}}{{{f{Ad}}{f{Ff}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{Cf}}}Ad}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{cc{}}{{}Ej}{ce{}{}}{{{CAj{Ad}}}Cf}{{{f{BhCf}}{f{BhEn}}}b}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}5{{{f{BhCf}}{f{BhEn}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{CAl{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CAn}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BJd}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BJd}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CB`}}}CB`}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}CB`}{Ej{{f{c}}}{}}{Ej{{f{Bhc}}}{}}{Ejb}{{{f{CB`}}{f{CB`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CB`}}{f{BhFh}}}Fj}{cc{}}{{{f{CB`}}{f{Bhc}}}bAAl}{{}Ej}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Nh{}}3``````````{{{f{c}}h}b{}}05{{{F`{BBh}}}{{Af{BBh}}}}{c{{Af{BBh}}}{{G`{}{{B`{BBh}}}}}}{cBBh{{G`{}{{B`{BBh}}}}}}{c{{An{BBh}}}{{G`{}{{B`{BBh}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gh{{AJn{{l{c}}}}{AJn{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gh{{AJn{{l{c}}}}{AJn{{l{e}}}}{AJn{{l{g}}}}}}}BnBnBn}{{{f{BhCBb}}}d}{c{{Af{Df}}}{{G`{}{{B`{{f{Gn}}}}}}}}{c{{Af{{Gh{DfEj}}}}}{{G`{}{{B`{{f{Gn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gf}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{CBd}}}{{`{{Bd{}{{B`{Ej}}}}}}}}{{{f{CBf}}}CBf}{{{f{{CBh{ec}}}}}{{CBh{ec}}}A@b{A@b{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Gh{{AJn{{l{c}}}}{AJn{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gh{AdAd}}}}{CBbe{}{{CBj{c}}}}{CBbe{}{{CBl{c}}}}{c{{Af{BBh}}}{{G`{}{{B`{{f{BBh}}}}}}}}{cBBh{{G`{}{{B`{{f{BBh}}}}}}}}{{{f{BhCBb}}{f{c}}}dBKh}{{}CBf}{Ej{{f{c}}}{}}{{{f{{CBn{c}}}}}{{f{e}}}{}{}}{{{f{{AJd{c}}}}}{{f{e}}}{}{}}222{Ej{{f{Bhc}}}{}}{{{f{Bh{AJd{c}}}}}{{f{Bhe}}}{}{}}111{Ejb}000{cBCf{{G`{}{{B`{Df}}}}}}{c{{Af{Df}}}{{G`{}{{B`{{f{Df}}}}}}}}{{{f{{CBn{Ad}}}}{f{{CBn{Ad}}}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{CBf}}{f{BhFh}}}Fj}{{{f{BhCBb}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}000{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{c{{AJd{Ff}}}{{G`{}{{B`{d}}}}}}{c{{AJd{{l{e}}}}}{{G`{}{{B`{}}}}}n}{eCBl{}{{G`{}{{B`{c}}}}}}12{c{{AJd{{l{e}}}}}{{Gj{}{{B`{}}}}}n}{c{{AJd{Ff}}}{{Gl{}{{B`{d}}}}}}{c{{AJd{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{Df}}{f{Df}}CBf}{{An{Df}}}}{{{f{AM`}}{f{AM`}}}AM`}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CBn{Ad}}}}{f{Bhc}}}bAAl}{{{f{CBf}}{f{Bhc}}}bAAl}`{{}Ej}000{ce{}{}}000{{{AJd{c}}}c{}}1{BEd{{F`{c}}}{}}{c{{F`{{CCb{CC`}}}}}{}}{c{{F`{Dh}}}{}}{{{f{CBd}}}{{`{{Bd{}{{B`{CBd}}}}}}}}{{{f{CBd}}}Ej}{LdGn}1{c{{AJd{c}}}{}}{{eEj}{{CBh{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBh{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBh{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fd}}`{{{f{{CBh{ec}}}}}{{Gh{Ej{An{Ej}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CBd}}JbEj}CBd}{{{f{{Dd{c}}}}JbEj}{{f{{Dd{c}}}}}{}}{{{f{c}}Ej}{{F`{c}}}CBd}0{{{f{CBd}}Jb}{{Gh{CBdCBd}}}}{{{f{BBh}}Ejd}{{F`{BBh}}}}{{{f{c}}}e{}{}}0{{CBbEj}{{CBh{CBbc}}}{}}{c{{Gb{e}}}{}{}}000{{{f{Df}}{f{Df}}}{{Af{Df}}}}1111{{{f{c}}}Nh{}}000{ce{}{}}000{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Dd{{F`{c}}}}}}}{{Gh{Ej{F`{Ej}}}}}{}}{{{f{BBh}}}{{`{{Bd{}{{B`{BBh}}}}}}}}{{{f{{Dd{c}}}}}{{AIn{H`}}}{{Kl{{Dd{Nj}}}}IfIh}}{{{f{{Dd{e}}}}}{{F`{c}}}{IfIhCd}{{Kl{{Dd{c}}}}}}{{{f{Ad}}}{{F`{Ad}}}}","D":"JDj","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5443],[5,"ListType",1536],[5,"ChunkedArray",39],[10,"PolarsNumericType",1536],[10,"Num",5444],[10,"ToPrimitive",5445],[5,"Series",4793],[8,"PolarsResult",4046,5446],[10,"NumOpsDispatchInner",5231,5447],[6,"GroupsProxy",3640,5448],[5,"BooleanType",1536],[6,"Option",5449],[17,"Item"],[8,"ArrayBox",5207],[10,"Iterator",5450],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1536],[10,"PolarsDataType",1536],[17,"Output"],[10,"Fn",5451],[10,"Copy",5452],[5,"AmortSeries",5207],[10,"FnMut",5451],[5,"Float32Type",1536],[5,"Float64Type",1536],[5,"StringType",1536],[5,"BinaryType",1536],[1,"u8"],[1,"slice"],[6,"DataType",1536,5453],[5,"String",5454],[8,"ListChunked",1536],[5,"SortOptions",1450],[8,"IdxCa",1536,5455],[5,"SortMultipleOptions",1450],[8,"BinaryChunked",1536],[10,"PolarsIntegerType",1536],[6,"CastOptions",731],[10,"NumOpsDispatchCheckedInner",5256,5456],[1,"usize"],[8,"ChunkLenIter",39],[8,"ArrayRef",4046,5457],[5,"Vec",5458],[5,"MetadataProperties",820],[10,"DoubleEndedIterator",5459],[8,"BooleanChunked",1536],[5,"Formatter",5460],[8,"Result",5460],[10,"Array",5457],[17,"Array"],[10,"IntoIterator",5461],[6,"Result",5462],[10,"FallibleIterator",5463],[5,"Bitmap",5464],[1,"tuple"],[10,"IntoParallelIterator",5465],[10,"TrustedLen",5466],[6,"AnyValue",1536,5467],[8,"IdxSize",4046,5468],[5,"MetadataFlags",820],[5,"ObjectType",1536],[10,"PolarsObjectSafe",1110],[10,"PolarsObject",1110],[1,"f32"],[1,"u64"],[5,"Metadata",820],[5,"RwLockWriteGuard",5469],[5,"Int128Type",1536],[8,"DecimalChunked",1536,5470],[10,"Send",5452],[10,"Sync",5452],[10,"ExactSizeIterator",5471],[10,"PolarsFloatType",1536],[6,"IsSorted",4793,5472],[10,"PolarsIterator",781],[1,"i64"],[5,"Iter",5473],[1,"fn"],[5,"Map",5474],[6,"ChunkedArrayLayout",39],[10,"NumCast",5445],[5,"Scalar",1536,5467],[1,"f64"],[6,"MetadataReadGuard",820,5475],[5,"IMMetadata",820,5476],[5,"Arc",4046,5477],[10,"MetadataTrait",820,5478],[5,"RwLockReadGuard",5469],[10,"AsRef",5479],[5,"UInt64Type",1536],[5,"Range",5480],[5,"Int64Type",1536],[1,"i128"],[5,"UInt32Type",1536],[1,"u32"],[1,"i32"],[5,"Int32Type",1536],[5,"Field",1536,5481],[10,"ParallelIterator",5465],[10,"IndexedParallelIterator",5465],[6,"QuantileInterpolOptions",4046,5482],[5,"RollingOptionsFixedWindow",4046,5483],[10,"Sized",5452],[17,"HasViews"],[5,"RandomState",5484],[5,"BytesHash",5485],[8,"ArrayView1",5486],[8,"Array2",5486],[8,"StringChunked",1536],[6,"Either",5487],[5,"TypeId",5488],[5,"NullableIdxSize",4046,5468],[10,"FnOnce",5451],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",441,5489],[10,"ChunkedBuilder",469],[5,"BinViewChunkedBuilder",469,5490],[10,"ViewType",5491],[5,"BooleanChunkedBuilder",469,5492],[5,"NullChunkedBuilder",469,5493],[5,"PrimitiveChunkedBuilder",469,5494],[10,"Clone",5495],[8,"StringChunkedBuilder",469,5490],[8,"BinaryChunkedBuilder",469,5490],[10,"NewChunkedArray",469],[5,"AnonymousListBuilder",577,5496],[5,"AnonymousOwnedListBuilder",577,5496],[5,"ListBooleanChunkedBuilder",577,5497],[5,"ListPrimitiveChunkedBuilder",577,5498],[10,"ListBuilderTrait",577],[5,"ListStringChunkedBuilder",577,5499],[5,"ListBinaryChunkedBuilder",577,5499],[5,"ListNullChunkedBuilder",577,5500],[5,"Box",5501],[10,"Hasher",5502],[10,"ChunkedCollectInferIterExt",761],[10,"ChunkedCollectIterExt",761],[10,"Canonical",775],[10,"ChunkedCollectParIterExt",777],[10,"FromParIterWithDtype",777],[5,"BooleanArray",5503],[5,"BoolIterNoNull",781],[5,"SomeIterator",781],[5,"MetadataEnv",820,5504],[10,"MetadataCollectable",820,5505],[5,"Iter",5506],[5,"IterNames",5506],[5,"File",5507],[5,"Mutex",5508],[6,"MetadataMerge",820],[5,"RwLock",5469],[5,"ObjectArray",1110],[6,"ArrowDataType",1536,5509],[10,"Any",5488],[10,"Debug",5460],[5,"BitmapIter",5510],[6,"ZipValidity",5511],[8,"ObjectValueIter",1110],[5,"ObjectChunkedBuilder",1187],[8,"ObjectChunked",1536],[10,"AnonymousObjectBuilder",1210],[5,"ObjectRegistry",1210],[8,"ObjectConverter",1210],[8,"BuilderConstructor",1210],[17,"FuncRet"],[10,"ChunkApply",1238],[10,"ChunkApplyKernel",1238],[10,"ChunkSort",1238],[10,"ChunkUnique",1238],[10,"ChunkCast",1238],[6,"FillNullStrategy",1238],[10,"ChunkCompare",1238],[10,"ChunkExplode",1238],[5,"OffsetsBuffer",5512],[10,"ChunkFillNullValue",1238],[10,"ChunkFilter",1238],[10,"ChunkFull",1238],[10,"ChunkFullNull",1238],[10,"ChunkAnyValue",1238],[10,"IsFirstDistinct",1238],[10,"IsLastDistinct",1238],[10,"ChunkAgg",1238],[10,"ChunkQuantile",1238],[10,"ChunkExpandAtIndex",1238],[10,"ChunkReverse",1238],[10,"ChunkRollApply",1238],[10,"ChunkSet",1238],[10,"ChunkShift",1238],[10,"ChunkShiftFill",1238],[10,"ChunkVar",1238],[10,"ChunkTake",1238],[10,"ChunkTakeUnchecked",1238],[10,"ChunkBytes",1238],[10,"ChunkZip",1238],[10,"BinaryFnMut",1364],[10,"StaticArray",1536,5513],[10,"TernaryFnMut",1364],[10,"Error",5514],[10,"UnaryFnMut",1364],[5,"PrimitiveArray",5515],[6,"SearchSortedSide",1404],[10,"SlicedArray",4046,5516],[5,"NoNull",5292],[5,"RowsEncoded",5517],[8,"BinaryOffsetChunked",1536],[5,"NaiveDateTime",5518],[6,"PolarsError",4046,5446],[6,"Cow",5519],[8,"Float32Chunked",1536],[8,"Float64Chunked",1536],[10,"ArrayFromIter",1536,5520],[10,"ArrayFromIterDtype",1536,5520],[10,"AsRefDataType",1536,5453],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5521],[10,"From",5479],[5,"CategoricalChunked",3000,5522],[10,"CategoricalMergeOperation",3000,5523],[10,"LogicalType",1536,5524],[5,"Logical",1536,5524],[5,"OwnedObject",1536,5467],[6,"UnknownKind",1536,5453],[6,"TimeUnit",1536,5525],[5,"UInt8Type",1536],[5,"UInt16Type",1536],[5,"Int8Type",1536],[5,"Int16Type",1536],[5,"DateType",1536],[5,"TimeType",1536],[5,"BinaryOffsetType",1536],[5,"DecimalType",1536],[5,"DatetimeType",1536],[5,"DurationType",1536],[5,"CategoricalType",1536],[6,"ArrowTimeUnit",1536],[10,"ArrayCollectIterExt",4046,5520],[8,"Utf8ViewArray",5491],[8,"UInt32Chunked",1536],[5,"Error",5460],[10,"NumericNative",1536],[10,"Into",5479],[5,"ArrowField",4046],[6,"PrimitiveType",5526],[6,"IntegerType",5527],[10,"Borrow",5528],[8,"SmartString",1536],[10,"NoOption",5529],[10,"GetAnyValue",1536,5467],[8,"Int128Chunked",1536],[10,"IntoScalar",1536,5530],[6,"Ordering",5531],[6,"PhysicalType",5527],[8,"UInt8Chunked",1536],[8,"UInt16Chunked",1536],[8,"UInt64Chunked",1536],[8,"Int8Chunked",1536],[8,"Int16Chunked",1536],[8,"Int32Chunked",1536],[8,"Int64Chunked",1536],[8,"PlIdHashMap",1536,5455],[5,"CategoricalChunkedBuilder",3000,5532],[5,"GlobalRevMapMerger",3000,5523],[6,"RevMapping",3141,5533],[6,"CategoricalOrdering",3141,5533],[5,"CatIter",3000,5522],[1,"u128"],[5,"DataFrame",3337],[5,"StringCacheHolder",3196,5534],[5,"ErrString",3225,5446],[6,"PolarsWarning",3225,5535],[10,"Display",5460],[6,"FloatFmt",3305],[1,"char"],[5,"Schema",4712],[10,"IntoSeries",4793,5536],[6,"NullStrategy",3337],[6,"UniqueKeepStrategy",3337],[8,"PlHashSet",1536,5537],[5,"ArrowSchema",4046,5538],[5,"Row",3899],[5,"GroupBy",3640],[5,"RangeInclusive",5480],[5,"RangeFull",5480],[5,"RangeToInclusive",5480],[5,"RangeFrom",5480],[5,"RangeTo",5480],[5,"RecordBatchIter",3337],[5,"PhysRecordBatchIter",3337],[10,"IntoVec",5292],[10,"RangeBounds",5480],[8,"SchemaRef",4712],[6,"IndexOrder",4046,5539],[5,"StructArray",5540],[8,"RecordBatch",5541],[5,"UnpivotArgs",3610],[5,"GroupsIdx",3640,5448],[8,"IdxVec",5542],[6,"GroupByMethod",3640],[5,"SlicedGroups",3640,5448],[5,"GroupsProxyParIter",3640,5448],[10,"UnindexedConsumer",5543],[6,"GroupsIndicator",3640,5448],[8,"IdxItem",3640,5448],[10,"IntoGroupsProxy",3640,5544],[5,"Copied",5545],[5,"Zip",5546],[5,"GroupsProxyIter",3640,5448],[8,"GroupsSlice",3640,5448],[1,"array"],[8,"DynArgs",4046,5547],[10,"IsFloat",5548],[10,"NativeType",5549],[10,"AggList",3883,5550],[10,"TakeExtremum",3883],[10,"PhysicalAggExpr",3896],[6,"AnyValueBuffer",3899,5551],[6,"AnyValueBufferTrusted",3899,5551],[5,"BinaryArray",5552],[5,"IdHasher",3998,5553],[5,"IdxHash",3998,5553],[5,"HashMap",5554],[10,"BuildHasher",5502],[10,"VecHash",3998,5555],[10,"Allocator",5556],[5,"BorrowedFd",5557],[10,"AsFd",5557],[10,"AsRawFd",5558],[20,"MaybeUninit",5559],[10,"NumOpsDispatchChecked",4046,5456],[5,"ChunkId",4046,5468],[5,"RollingVarParams",4046,5547],[5,"RollingQuantileParams",4046,5547],[6,"NonExistent",4046,5560],[10,"Ord",5531],[10,"Default",5561],[5,"CStr",5562],[5,"Weak",5477],[10,"Scalar",5563],[10,"PartialEq",5531],[5,"Error",5564],[5,"Utf8Error",5565],[5,"TryReserveError",5566],[6,"Error",5567],[5,"CString",5568],[5,"PathBuf",5569],[5,"Path",5569],[1,"never"],[10,"ToOwned",5519],[5,"OsString",5570],[5,"OsStr",5570],[10,"FromData",4634,5571],[5,"Buffer",5572],[10,"FromDataUtf8",4634,5571],[10,"FromDataBinary",4634,5571],[5,"ListArray",5573],[6,"Ambiguous",4046,5560],[10,"NamedFromOwned",4046,5574],[10,"PartialOrd",5531],[10,"PolarsArray",4046,5575],[10,"Hash",5502],[10,"SeriesTrait",4793,5472],[10,"CloneToUninit",5495],[10,"ChunkAggSeries",4046,5576],[10,"QuantileAggSeries",4046,5577],[10,"IndexToUsize",4046,5578],[10,"NamedFrom",4046,5574],[5,"Pin",5579],[5,"Request",5514],[5,"BorrowedCursor",5580],[5,"IoSliceMut",5581],[6,"SeekFrom",5581],[10,"VarAggSeries",4046,5582],[5,"AllocError",5556],[5,"BTreeMap",5583],[5,"IoSlice",5581],[5,"AnonymousBuilder",4640,5584],[5,"Offsets",5512],[5,"MutableNullArray",4663,5585],[5,"MutableBitmap",5586],[5,"Utf8Array",5587],[10,"SchemaNamesAndDtypes",4712],[8,"ArrowSchemaRef",5538],[10,"IndexOfSchema",4712],[17,"DataType"],[8,"Metadata",5509],[5,"SeriesIter",4793,5588],[8,"SeriesPhysIter",4793,5588],[5,"Rc",5589],[10,"LhsNumOps",5231,5447],[10,"NumOpsDispatch",5231,5447],[6,"NullBehavior",5264],[10,"CustomIterTools",5292,5590],[10,"Container",5292],[5,"SuperTypeOptions",5292,5591],[5,"TrustMyLength",5292,5466],[10,"FromIteratorReversed",5592],[10,"FromTrustedLenIterator",5292,5590],[5,"Wrap",5292],[5,"LazyCompact",5593],[5,"SmartString",5594],[8,"FillNullLimit",1238],[10,"InitHashMaps",1536],[10,"InitHashMaps2",1536],[5,"TrueT",1536],[15,"IO",3290],[15,"Context",3290],[15,"Count",3880],[15,"Slice",3881],[10,"ListFromIter",4046],[10,"Utf8FromIter",4707],[10,"BinaryFromIter",4707],[6,"BitRepr",4793]],"r":[[0,5553],[4,5534],[13,5534],[16,5534],[31,5534],[441,5489],[469,5490],[470,5490],[471,5492],[474,5493],[475,5494],[476,5490],[577,5496],[578,5496],[579,5499],[580,5497],[582,5500],[583,5498],[584,5499],[825,5476],[831,5505],[832,5504],[836,5475],[837,5478],[1156,5595],[1435,5516],[1450,5516],[1537,5467],[1539,5520],[1540,5520],[1541,5520],[1542,5509],[1544,5453],[1560,5522],[1563,5522],[1564,5532],[1565,5523],[1566,5533],[1568,5453],[1569,5453],[1570,5453],[1581,5470],[1591,5481],[1592,5481],[1607,5467],[1609,5523],[1613,5455],[1614,5578],[1615,5455],[1616,5455],[1617,5537],[1618,5455],[1643,5530],[1655,5524],[1656,5524],[1674,5467],[1678,5537],[1679,5537],[1680,5455],[1681,5537],[1682,5537],[1688,5533],[1689,5467],[1692,5513],[1704,5525],[1705,5453],[1732,5453],[1931,5523],[1948,5524],[2077,5453],[2597,5523],[2598,5523],[2610,5453],[2694,5522],[2732,5522],[3000,5522],[3001,5522],[3002,5532],[3003,5523],[3004,5533],[3006,5523],[3010,5533],[3027,5523],[3093,5523],[3094,5523],[3112,5522],[3116,5522],[3141,5533],[3146,5533],[3196,5534],[3202,5534],[3205,5534],[3213,5534],[3215,5533],[3220,5533],[3221,5534],[3222,5534],[3223,5534],[3224,5534],[3231,5446],[3238,5446],[3239,5446],[3240,5535],[3254,5446],[3262,5446],[3269,5535],[3274,5446],[3275,5446],[3276,5446],[3277,5446],[3278,5446],[3279,5535],[3280,5446],[3294,5596],[3295,5596],[3296,5596],[3297,3998],[3640,5448],[3646,5448],[3647,5448],[3648,5448],[3649,5448],[3650,5448],[3651,5448],[3654,5448],[3656,5544],[3668,5448],[3883,5550],[3901,5551],[3902,5551],[3998,5553],[3999,5553],[4000,5553],[4001,5555],[4004,5555],[4005,5555],[4046,5560],[4047,5477],[4048,5489],[4049,5520],[4050,5457],[4052,5538],[4053,5490],[4054,5492],[4056,5522],[4057,5522],[4058,5532],[4059,5523],[4060,5533],[4061,5576],[4062,5468],[4063,39],[4064,469],[4065,761],[4066,761],[4070,3337],[4072,5547],[4076,5571],[4077,5571],[4078,5571],[4080,5523],[4083,5578],[4084,5468],[4085,5539],[4086,5578],[4087,5536],[4088,5292],[4090,5597],[4091,5597],[4092,5597],[4095,5447],[4097,5499],[4098,5497],[4099,577],[4100,5575],[4101,5498],[4102,5499],[4106,5574],[4107,5574],[4109,469],[4111,5560],[4115,5468],[4116,5468],[4117,5447],[4118,5456],[4122,5575],[4123,5446],[4124,781],[4125,1110],[4126,5446],[4127,5494],[4128,5577],[4129,5482],[4132,5533],[4133,5483],[4134,5547],[4135,5547],[4140,4793],[4141,5472],[4143,5516],[4145,5534],[4147,5490],[4149,3337],[4150,3610],[4151,5582],[4152,5555],[4198,5523],[4251,5575],[4254,0],[4267,5575],[4296,0],[4433,5578],[4476,5575],[4478,5523],[4479,5523],[4505,5575],[4511,5446],[4512,5446],[4513,5446],[4514,5446],[4526,5522],[4528,5575],[4534,5522],[4608,5575],[4634,5571],[4635,5571],[4636,5571],[4640,5584],[4663,5585],[4694,5533],[4699,5533],[4700,5516],[4703,5534],[4704,5534],[4705,5534],[4706,5534],[4707,5598],[4708,5598],[4795,5472],[4796,1238],[4799,5536],[4800,5472],[4801,5472],[4806,5588],[4807,5588],[4808,5472],[5231,5447],[5232,5447],[5233,5447],[5239,5447],[5256,5456],[5257,5456],[5294,5590],[5295,5590],[5296,5590],[5299,5591],[5300,5466],[5312,5599],[5313,5599],[5355,5600],[5356,5591],[5381,5591],[5382,5591],[5384,5601],[5403,5591],[5424,5591],[5437,5601]],"b":[[48,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add-for-%26ChunkedArray%3CT%3E"],[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat32Type%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CStringType%3E"],[71,"impl-ChunkedArray%3CT%3E"],[72,"impl-ChunkedArray%3CBinaryType%3E"],[101,"impl-Container-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkedArray%3CT%3E"],[121,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[122,"impl-Div-for-ChunkedArray%3CT%3E"],[123,"impl-Div-for-%26ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[140,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[141,"impl-Debug-for-ChunkedArray%3CT%3E"],[152,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[153,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-Container-for-ChunkedArray%3CT%3E"],[227,"impl-ChunkedArray%3CT%3E"],[232,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkedArray%3CBooleanType%3E"],[237,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkedArray%3CBooleanType%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[250,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[251,"impl-ChunkedArray%3CBooleanType%3E"],[254,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkedArray%3CT%3E"],[256,"impl-Mul-for-ChunkedArray%3CT%3E"],[257,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[258,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[259,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[264,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[265,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[266,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[268,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[269,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[270,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[272,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[279,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[282,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[283,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[284,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[286,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[287,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[296,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[298,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkedArray%3CStringType%3E"],[304,"impl-ChunkedArray%3CListType%3E"],[305,"impl-ChunkedArray%3CListType%3E"],[306,"impl-ChunkedArray%3CStringType%3E"],[317,"impl-Rem-for-ChunkedArray%3CT%3E"],[318,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[319,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[320,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[339,"impl-Container-for-ChunkedArray%3CT%3E"],[340,"impl-ChunkedArray%3CT%3E"],[343,"impl-ChunkedArray%3CT%3E"],[344,"impl-Container-for-ChunkedArray%3CT%3E"],[347,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[348,"impl-Sub-for-ChunkedArray%3CT%3E"],[349,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[350,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[352,"impl-ChunkedArray%3CBooleanType%3E"],[353,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkedArray%3CT%3E"],[366,"impl-ChunkedArray%3CListType%3E"],[371,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[525,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[526,"impl-BinViewChunkedBuilder%3Cstr%3E"],[858,"impl-Flags-for-MetadataProperties"],[859,"impl-MetadataProperties"],[860,"impl-Flags-for-MetadataFlags"],[861,"impl-MetadataFlags"],[927,"impl-MetadataTrait-for-Metadata%3CT%3E"],[928,"impl-Metadata%3CT%3E"],[953,"impl-Binary-for-MetadataProperties"],[954,"impl-UpperHex-for-MetadataProperties"],[955,"impl-LowerHex-for-MetadataProperties"],[956,"impl-Debug-for-MetadataProperties"],[957,"impl-Octal-for-MetadataProperties"],[958,"impl-Octal-for-MetadataFlags"],[959,"impl-Binary-for-MetadataFlags"],[960,"impl-Debug-for-MetadataFlags"],[961,"impl-LowerHex-for-MetadataFlags"],[962,"impl-UpperHex-for-MetadataFlags"],[972,"impl-Flags-for-MetadataProperties"],[973,"impl-MetadataProperties"],[974,"impl-MetadataFlags"],[975,"impl-Flags-for-MetadataFlags"],[988,"impl-MetadataTrait-for-Metadata%3CT%3E"],[989,"impl-Metadata%3CT%3E"],[1032,"impl-Metadata%3CT%3E"],[1033,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1037,"impl-Metadata%3CT%3E"],[1038,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1116,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1117,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1151,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1152,"impl-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1168,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1178,"impl-ObjectArray%3CT%3E"],[1179,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1181,"impl-ObjectArray%3CT%3E"],[1182,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1184,"impl-Array-for-ObjectArray%3CT%3E"],[1185,"impl-ObjectArray%3CT%3E"],[1188,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1189,"impl-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1192,"impl-ObjectChunkedBuilder%3CT%3E"],[1771,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1772,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1773,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1774,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1775,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1776,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1777,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1778,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1854,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1855,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1856,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1857,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1858,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2205,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2206,"impl-PartialEq-for-DataType"],[2214,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2215,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2216,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2217,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2220,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2221,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2222,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2223,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2261,"impl-Display-for-AnyValue%3C\'_%3E"],[2262,"impl-Debug-for-AnyValue%3C\'a%3E"],[2264,"impl-Debug-for-DataType"],[2265,"impl-Display-for-DataType"],[2267,"impl-Debug-for-TimeUnit"],[2268,"impl-Display-for-TimeUnit"],[2280,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2282,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2283,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2284,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2285,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2287,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2288,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2290,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2291,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2293,"impl-From%3C%26Field%3E-for-Field"],[2316,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2317,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2321,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2322,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2323,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2325,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2326,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2327,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2328,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2334,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2335,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2337,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2338,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2339,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2340,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2341,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2342,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2350,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2351,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2352,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2353,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2354,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2355,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2444,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2445,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2446,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2447,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2450,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2451,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2452,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2453,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2587,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2588,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2589,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2590,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2593,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2594,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2595,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2596,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2631,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2632,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2633,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2634,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2635,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2636,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2637,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2638,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2639,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2640,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2653,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2654,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2657,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2658,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2659,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2660,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2663,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2664,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2665,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2666,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2744,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2745,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2746,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2747,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3047,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3048,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3049,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3050,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3051,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3052,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3067,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3068,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3069,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3070,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3071,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3072,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3087,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3088,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3089,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3090,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3091,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3092,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3103,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3104,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3105,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3106,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3107,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3108,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3264,"impl-Debug-for-ErrString"],[3265,"impl-Display-for-ErrString"],[3358,"impl-Add%3C%26Series%3E-for-DataFrame"],[3359,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3360,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3403,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3404,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3405,"impl-Div%3C%26Series%3E-for-DataFrame"],[3437,"impl-Display-for-DataFrame"],[3438,"impl-Debug-for-DataFrame"],[3470,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3471,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3472,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3473,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3474,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3475,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3476,"impl-Index%3Cusize%3E-for-DataFrame"],[3477,"impl-Index%3C%26str%3E-for-DataFrame"],[3495,"impl-DataFrame"],[3496,"impl-Container-for-DataFrame"],[3502,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3503,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3504,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3505,"impl-Container-for-DataFrame"],[3506,"impl-DataFrame"],[3520,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3521,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3522,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3548,"impl-DataFrame"],[3549,"impl-Container-for-DataFrame"],[3553,"impl-DataFrame"],[3554,"impl-Container-for-DataFrame"],[3557,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3558,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3559,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3577,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3579,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3757,"impl-Debug-for-GroupByMethod"],[3758,"impl-Display-for-GroupByMethod"],[3765,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3766,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3767,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3801,"impl-IntoIterator-for-GroupsIdx"],[3802,"impl-IntoIterator-for-%26GroupsIdx"],[3804,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3805,"impl-IntoParallelIterator-for-GroupsIdx"],[4169,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4170,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4258,"impl-Default-for-Arc%3CT%3E"],[4259,"impl-Default-for-Arc%3CCStr%3E"],[4260,"impl-Default-for-Arc%3Cstr%3E"],[4261,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4315,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4316,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4317,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4350,"impl-Debug-for-PolarsError"],[4351,"impl-Display-for-PolarsError"],[4354,"impl-Debug-for-Arc%3CT,+A%3E"],[4355,"impl-Display-for-Arc%3CT,+A%3E"],[4356,"impl-Pointer-for-Arc%3CT,+A%3E"],[4367,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4368,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4369,"impl-From%3CError%3E-for-PolarsError"],[4370,"impl-From%3CError%3E-for-PolarsError"],[4374,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4375,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4377,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4378,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4379,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4380,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4381,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4383,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4384,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4385,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4386,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4387,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4388,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4389,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4390,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4735,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4736,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4737,"impl-From%3CArrowSchema%3E-for-Schema"],[4738,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4739,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4741,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4814,"impl-Add-for-Series"],[4815,"impl-Add-for-%26Series"],[4816,"impl-Add%3CT%3E-for-%26Series"],[4817,"impl-Add%3CT%3E-for-Series"],[4888,"impl-Div%3CT%3E-for-Series"],[4889,"impl-Div%3CT%3E-for-%26Series"],[4890,"impl-Div-for-Series"],[4891,"impl-Div-for-%26Series"],[4903,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4904,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4905,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4906,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4907,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4908,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4925,"impl-Debug-for-Series"],[4926,"impl-Display-for-Series"],[4939,"impl-FromIterator%3Cu32%3E-for-Series"],[4940,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4941,"impl-FromIterator%3Cu64%3E-for-Series"],[4942,"impl-FromIterator%3C%26u32%3E-for-Series"],[4943,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4944,"impl-FromIterator%3Ci64%3E-for-Series"],[4945,"impl-FromIterator%3C%26bool%3E-for-Series"],[4946,"impl-FromIterator%3C%26str%3E-for-Series"],[4947,"impl-FromIterator%3C%26i64%3E-for-Series"],[4948,"impl-FromIterator%3C%26f64%3E-for-Series"],[4949,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4950,"impl-FromIterator%3C%26u64%3E-for-Series"],[4951,"impl-FromIterator%3CString%3E-for-Series"],[4952,"impl-FromIterator%3Cbool%3E-for-Series"],[4953,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4954,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4955,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4956,"impl-FromIterator%3Cf64%3E-for-Series"],[4957,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4958,"impl-FromIterator%3Ci32%3E-for-Series"],[4959,"impl-FromIterator%3Cf32%3E-for-Series"],[4960,"impl-FromIterator%3C%26f32%3E-for-Series"],[4961,"impl-FromIterator%3C%26i32%3E-for-Series"],[4962,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4963,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4964,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4965,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4966,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4967,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[4968,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4983,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4984,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4985,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4986,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4987,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4988,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5030,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5031,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5032,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5033,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5034,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5035,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5049,"impl-Mul-for-Series"],[5050,"impl-Mul-for-%26Series"],[5051,"impl-Mul%3CT%3E-for-Series"],[5052,"impl-Mul%3CT%3E-for-%26Series"],[5059,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5060,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5061,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5062,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5063,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5064,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5065,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5066,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5067,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5068,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5069,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5070,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5071,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5072,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5073,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5074,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5075,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5076,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5077,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5078,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5079,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5080,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5081,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5082,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5083,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5084,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5085,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5086,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5087,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5088,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5089,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5090,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5091,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5092,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5093,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5094,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5095,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5100,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5101,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5102,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5103,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5104,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5105,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5114,"impl-Rem%3CT%3E-for-Series"],[5115,"impl-Rem%3CT%3E-for-%26Series"],[5116,"impl-Rem-for-%26Series"],[5148,"impl-Sub-for-Series"],[5149,"impl-Sub-for-%26Series"],[5150,"impl-Sub%3CT%3E-for-Series"],[5151,"impl-Sub%3CT%3E-for-%26Series"],[5173,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5174,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5175,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5176,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5373,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5374,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5376,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5377,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5379,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5380,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAF0OqQ7mDukO6g7rDuwO7Q7yDvUO+g77DiAP","e":"OzAAAAEAAB4QCwIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBiAAQAagADAG8AAQB1AA0AhAADAIkAAQCMAAQAkgAAAJQAAQCYAAYAoQADAKcAAwCsAAUAswABALgABQDAAAIAxwAEAM0AAwDUAAIA2QABANwABwDpAAwA+wADAAEBBgAJARsAKQEDAC4BAAAwAQQANgEBADwBAAA+AQQARAEAAEkBBQBRAQEAVAEAAFYBAQBZAQoAagEBAHABAAB0AQgAfgEIAIgBAACKAQUAkgEAAJQBIwC5ASkA5wECAO0BJwAbAgUAJQIAACcCJgBQAkwApAIMALgCJADgAg8A8QIBAPQCGQARAwkAHQMBACEDAQAkAxUAOwMJAEYDCgBbAwAAXQMAAGMDIQCJAxIAngMAAKADCQCsAwMAsgMBALYDDQDNAwAA0AMAANMDAQDZAwcA4gMHAPcDAQD7AwAA/gMDAAYEBQANBAQAGQQLACwEBAAzBA0AQwQGAE0ECABXBAEAWwQWAHMEBwB8BAAAfgQAAIAEAACCBAEAhwQQAJkEAACcBAAAngQDAKMEAgCnBAEAqgQHALMEAAC1BAUAvQQBAMAEAADCBAEAxQQDAMoEAwDPBAIA0wQDANkEAADcBAAA5AQAAOkEAADsBAEA8QQBAPQEAAD3BAAAAQUAAAoFAgAQBQcAGgUCAB8FAQAiBQAAJAUBACoFAQAtBQEANAUBADoFAAA9BQAAQAUAAEIFAABEBQAARgUAAEsFBABSBQEAVQUHAF4FAgBkBQAAZgUDAGsFAQBuBQUAegUXAJMFAQCXBQQAnQUDAKQFBgCuBRIAwwUMANIFBADjBQkA+QUNAAkGAgANBgUAFQYAABcGDAAnBgAAKQYAAC4GAQAxBgAAMwYCADcGAAA5BgAAPAYAAD8GAABBBgEARAYAAEYGAgBKBgwAWAYAAFoGAQBdBgAAXwYBAGIGAABkBgEAZwYAAGkGAQBsBgEAcQYAAHUGAQB5BgAAfAYAAH4GAACABgMAhQYAAIgGCACSBgEAlQYFAJ0GAQChBgAAowYAAKgGAgCsBgEArwYAALEGAQC0BgAAtgYBALkGAAC7BgEAvgYAAMAGAQDDBgAAxQYAAMgGOwAKBwQAEQcJAB0HBAAjBwgALQcAAC8HYACRB4QAFwgHACAIdgCYCAEAmwhFAOkIAADrCAMA8AgBAPMIAQD2CAEADQkBABEJFwAtCSQAVAkGAF0JHgCCCUAAxQkAAOkJCwD3CQAA+QkBAPwJAQD/CQAABAoFAAsKAAAOCgIAEwoDABgKAAAaCh0AOQoJAEQKDgBUChwAcgoGAHoKGgCWChUArQoLALoKAAC/CgAAwQoAAMYKHQDmCgIA6gpRAD0LLABrC0wAuQsEAL8LAQDCCwIAxgsEAMwLJAD4CwIA/AsJAAoMAwAPDBcAKQwBACwMBAAyDA0AQQwFAEgMAABKDBgAZAwBAGoMAgBvDAEAcwwJAH4MBACEDAEAiQwAAIsMAgCPDAEAkgwAAJQMAQCaDAQAoAwEAKYMEAC4DAoAxQwDAMsMBADRDCYA+QwFAAANCQANDQAAEA0KABwNBQAnDRYAQA0SAFQNAABdDQEAYQ0CAGUNAABnDQAAbA0DAHUNAACEDQAAhw0BAI8NDACiDQEAqQ0AAKsNAACvDQMAtw0BAMENAgDJDQAAzA0AANINAADbDQEA3g0BAOMNBQDvDQMA9g0GAP8NCQAKDgAAEA4EABwODgAsDgIAMA4AADIOCQA9DgEAQA4DAEUOAwBKDgkAVQ4HAF4OAQBhDh0AgA4oAKoOBgC2DgMAvQ4DAMMOAADIDgcA2A4NAOcOAQDuDgMA8w4BAPcOAgD8DgAA/g4fACEPDAAwDwUANw8HAEAPFgBZDw4AaQ8OAHkPAQB9DwMAhA8GAI4PDgCfDwEAog8RALYPBAC+DwUAxg8JANEPAgDWDwcA3w8LAOwPAwDxDxYACRAHABIQBQAZEBYAMxARAEYQAABIEAEATBAcAGsQAgBvECQAlRAGAJ8QAQCnECIAzRADANIQCgDeEBwA/RARABARBAAZEQAALBEAADIRAAA1EQAAPBEAAD8RAABEEQIASBEGAFEREQBzEQMAeBECAHwRAQB/EQEAmhECAKARBACnEQAAqhEHALQRAAC2EQEAuxEtAPERAADzEQwAARIAAAMSDAAVEgkAIRIGACkSAAArEh0AShIAAEwSCwBZEgAAWxIBAGQSBgBtEgcAdhIOAIYSAgCPEgAAkRIBAJQSAQCYEgEArBIAAK4SAACwEgAAtBIDALoSBQDBEgQAxxIFAM8SBADZEgAA3xICAOcSBQDuEgkA+xIDAAATAAAEEwIACBMEAA8TEgAmEwEAKRMDADATAgA9EwMARBMAAEgTAQBLEx8AbhMAAHATAQB4EwAAehMBAH0TAAB/EwAAhRMBAIgTAwCQEwMAnBMDAKETAACjEwAAqBMDALITAAC6EwMAwBMAAMQTGQDfEwkA6xMBAO4TAQDxEwEA9RMBAPsTAgAAFAAAAhQAAAYUAgANFAEAEBQAABIUAQAVFAAAGxQAAB0UAwAtFAEAMBQOAEAUBABMFAAAURQDAFYUAABZFAsAZhQAAGgUAABqFAQAcBQaAI4UAgCTFBAApRQBAKgUCgC0FAYAvRQAAMAUAADDFBEA1hQCANsUEADuFAoA/RQJAAgVCAAVFQkAIBUFACgVAAAqFQEALRUDADIVCwA/FQQA"}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCMCNNNNNNNNNONNNNNNNNMCMMNNNNNNCONNNNCCCOCMMMOCCCCCONNNNNNNNONNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNHNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNHKFNNNNNNNNHNNMNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNJJJJJHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse_dates","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","object_path_from_string","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","float_scientific","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_hive_partition_columns","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","ensure_not_mapped","from","from","init","into","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_schema","check_schema","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","data_page_size","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","write_partitioned_dataset","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","__clone_box","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","field_name","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","take_indices","to_max","to_min","to_min_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_schema","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","POLARS_TEMP_DIR_BASE_PATH","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[154,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[677,"polars_io::csv::read::buffer"],[751,"polars_io::csv::read::buffer::Buffer"],[754,"polars_io::csv::read::schema_inference"],[781,"polars_io::csv::write"],[927,"polars_io::file_cache"],[948,"polars_io::ipc"],[1208,"polars_io::json"],[1306,"polars_io::mmap"],[1328,"polars_io::ndjson"],[1330,"polars_io::ndjson::core"],[1423,"polars_io::parquet"],[1426,"polars_io::parquet::metadata"],[1479,"polars_io::parquet::read"],[1620,"polars_io::parquet::write"],[1849,"polars_io::partition"],[1866,"polars_io::pl_async"],[1887,"polars_io::predicates"],[1954,"polars_io::prelude"],[1964,"polars_io::utils"],[1974,"dyn_clone::sealed"],[1975,"polars_io::options"],[1976,"polars_io::shared"],[1977,"alloc::boxed"],[1978,"std::io"],[1979,"core::result"],[1980,"serde::de"],[1981,"std::path"],[1982,"polars_core::frame"],[1983,"polars_error"],[1984,"core::fmt"],[1985,"core::hash"],[1986,"polars_arrow::record_batch"],[1987,"core::option"],[1988,"serde::ser"],[1989,"core::any"],[1990,"polars_io::avro::read"],[1991,"polars_arrow::datatypes::schema"],[1992,"polars_io::avro::write"],[1993,"polars_core::schema"],[1994,"alloc::string"],[1995,"alloc::vec"],[1996,"polars_io::cloud::glob"],[1997,"object_store"],[1998,"alloc::sync"],[1999,"polars_io::cloud::polars_object_store"],[2000,"object_store::path"],[2001,"tokio::io::async_write"],[2002,"core::marker"],[2003,"polars_io::cloud::adaptors"],[2004,"std::io::error"],[2005,"crossterm::command"],[2006,"url"],[2007,"bytes::bytes"],[2008,"core::ops::range"],[2009,"core::ops::function"],[2010,"parquet_format_safe::thrift::varint::decode"],[2011,"object_store::aws::builder"],[2012,"object_store::azure::builder"],[2013,"object_store::gcp::builder"],[2014,"core::convert"],[2015,"core::iter::traits::collect"],[2016,"polars_io::csv::read::reader"],[2017,"polars_io::csv::read::read_impl::batched"],[2018,"polars_io::csv::read::options"],[2019,"std::fs"],[2020,"polars_core::datatypes::dtype"],[2021,"polars_core::series"],[2022,"polars_utils::aliases"],[2023,"polars_io::csv::write::writer"],[2024,"polars_io::csv::write::options"],[2025,"core::num::nonzero"],[2026,"polars_io::file_cache::entry"],[2027,"polars_io::ipc::ipc_stream"],[2028,"polars_io::ipc::write"],[2029,"futures_io::if_std"],[2030,"polars_io::ipc::ipc_file"],[2031,"polars_io::ipc::ipc_reader_async"],[2032,"polars_arrow::io::ipc::read::file"],[2033,"polars_arrow::array::struct_"],[2034,"polars_arrow::array"],[2035,"polars_arrow::datatypes"],[2036,"polars_arrow::datatypes::field"],[2037,"polars_arrow::array::growable::structure"],[2038,"polars_arrow::array::struct_::mutable"],[2039,"polars_arrow::bitmap::immutable"],[2040,"polars_arrow::scalar"],[2041,"polars_arrow::array::struct_::iterator"],[2042,"polars_arrow::bitmap::utils::iterator"],[2043,"polars_arrow::bitmap::utils::zip_validity"],[2044,"polars_parquet::parquet::metadata::file_metadata"],[2045,"polars_parquet::parquet::metadata::column_order"],[2046,"polars_parquet::parquet::metadata::row_metadata"],[2047,"polars_parquet::arrow::read::statistics"],[2048,"parquet_format_safe::parquet_format"],[2049,"polars_parquet::parquet::metadata::schema_descriptor"],[2050,"polars_parquet::parquet::error"],[2051,"polars_io::parquet::read::reader"],[2052,"polars_io::parquet::read::read_impl"],[2053,"polars_io::parquet::read::options"],[2054,"polars_io::parquet::write::writer"],[2055,"polars_io::parquet::write::batched_writer"],[2056,"polars_io::parquet::write::options"],[2057,"polars_parquet::arrow::write"],[2058,"polars_parquet::parquet::write"],[2059,"core::iter::traits::iterator"],[2060,"polars_parquet::arrow::write::file"],[2061,"std::sync::mutex"],[2062,"core::future::future"],[2063,"tokio::runtime::task::join"],[2064,"smartstring::alias"],[2065,"polars_core::datatypes::field"],[2066,"avro_schema::file"],[2067,"polars_io::cloud::object_store_setup"],[2068,"polars_io::csv::read::parser"],[2069,"polars_io::csv::read::utils"],[2070,"polars_io::file_cache::cache"],[2071,"polars_io::file_cache::utils"],[2072,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,0,16,8,5,6,5,6,5,6,0,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,47,39,43,47,39,43,39,0,43,43,43,39,47,39,43,47,39,43,43,47,47,39,43,39,47,39,47,39,43,47,39,43,39,43,43,43,0,43,47,39,43,47,39,43,47,39,43,47,0,0,39,47,39,47,43,47,39,43,47,39,43,47,39,43,47,39,43,47,47,61,60,61,0,62,61,63,63,0,60,62,60,60,61,62,61,61,0,0,60,60,61,60,60,60,61,60,60,61,61,63,63,0,63,60,60,61,61,61,60,60,61,60,62,62,60,61,60,61,60,61,61,61,60,60,38,61,62,60,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,60,38,61,62,60,38,61,62,60,60,38,61,61,62,62,38,60,38,63,61,62,60,38,63,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,60,60,38,38,38,61,61,61,62,62,62,38,60,38,61,62,60,38,63,61,62,60,63,61,62,38,60,38,61,62,60,38,63,61,62,60,38,63,61,62,38,60,38,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,0,0,78,78,0,0,0,0,0,0,76,77,78,0,0,77,76,74,75,76,77,78,68,68,68,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,0,74,74,75,76,77,78,74,75,76,77,78,74,75,76,76,77,78,74,75,0,75,74,75,76,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,75,74,75,76,77,78,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,68,74,75,76,77,78,73,72,68,74,75,76,77,77,78,74,74,74,75,76,77,78,74,0,74,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,0,74,74,75,74,74,68,77,77,77,73,72,75,74,74,74,75,74,74,74,74,74,0,74,75,74,75,76,77,78,74,74,74,75,76,77,78,75,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,73,72,68,74,75,76,77,78,74,73,72,68,74,75,76,77,78,74,74,75,75,74,75,75,74,74,74,74,75,74,74,75,74,74,74,75,74,74,74,74,74,74,75,74,74,75,75,83,0,83,0,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,83,174,175,176,83,174,175,176,83,0,174,175,176,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,177,177,177,0,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,91,0,0,0,91,91,91,0,0,89,90,91,89,87,87,88,89,90,91,87,88,89,90,91,89,90,91,89,90,91,89,90,91,91,90,90,89,90,91,87,88,89,90,91,87,88,89,90,91,89,90,91,87,88,89,90,91,89,90,91,89,89,89,90,90,90,91,91,91,87,88,90,90,89,90,91,87,88,89,90,91,89,90,91,87,89,87,89,87,88,89,90,91,87,88,89,90,91,90,89,87,87,90,90,90,90,89,90,91,89,90,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,87,87,87,87,87,87,87,87,87,88,0,0,0,94,94,94,94,94,94,0,94,0,94,94,94,94,94,94,94,94,94,0,0,0,0,0,0,0,0,0,0,0,0,103,103,100,101,102,103,95,96,96,109,104,95,110,107,96,97,108,100,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,102,103,103,102,104,107,108,104,107,108,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,100,102,103,109,104,95,110,107,96,97,108,100,101,102,103,100,102,103,102,102,102,103,103,103,107,108,109,95,110,96,97,109,100,102,103,109,104,95,110,107,96,97,108,100,101,102,103,104,100,102,103,109,104,95,110,107,96,97,108,100,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,102,100,109,104,109,95,110,107,96,108,96,109,95,100,102,103,109,95,100,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,109,104,95,110,107,96,97,108,100,101,102,103,109,95,110,107,96,108,107,108,109,109,95,110,96,101,109,95,101,109,95,101,101,97,0,116,0,116,0,0,0,112,116,113,115,114,112,116,113,115,114,112,112,112,112,112,112,116,113,115,114,112,116,113,115,114,112,112,116,113,115,114,112,112,112,112,112,113,114,112,116,113,115,114,112,112,114,116,113,115,114,112,116,113,115,114,112,112,113,115,114,112,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,114,114,113,114,114,114,114,115,86,86,0,86,0,86,86,86,86,86,86,0,86,86,86,86,70,70,86,86,86,86,0,0,0,0,118,118,118,118,118,121,118,121,118,118,118,118,118,118,121,118,121,118,121,118,121,118,118,118,118,121,118,121,118,118,118,121,118,121,121,118,121,118,118,118,118,118,121,121,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,121,118,121,118,118,121,118,118,118,118,118,121,118,121,121,121,121,121,121,121,121,121,121,121,118,118,0,0,0,0,0,0,132,135,132,135,132,132,132,132,132,132,132,135,132,135,132,0,135,135,132,135,135,132,135,135,132,135,132,135,132,132,132,132,135,135,135,132,132,132,132,132,135,132,132,135,132,135,132,132,135,132,145,0,145,145,0,0,0,0,145,144,145,141,143,142,141,143,144,145,142,141,143,144,145,141,143,144,145,144,145,144,144,145,145,145,142,141,143,144,145,142,141,143,144,145,144,145,142,141,143,144,145,144,145,144,144,144,145,145,145,141,143,142,144,145,142,141,143,144,145,143,141,143,144,145,142,141,143,144,145,142,141,143,144,145,142,142,142,144,0,142,141,142,141,143,144,141,143,142,141,143,144,145,141,141,143,144,145,142,141,143,144,145,142,141,143,144,145,142,141,143,144,145,141,143,144,142,141,143,144,145,141,141,143,141,143,141,143,141,143,141,143,0,150,0,150,0,150,150,0,0,0,0,150,0,150,150,0,149,150,151,152,153,154,147,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,149,150,151,152,153,154,149,150,151,152,153,154,149,149,150,150,151,151,152,152,153,153,154,154,149,149,149,150,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,149,150,151,152,153,154,154,148,147,149,150,151,152,153,154,154,148,149,150,151,152,153,154,149,149,149,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,154,148,149,150,151,152,153,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,154,154,149,154,154,147,154,149,149,150,151,152,153,154,147,149,149,150,151,152,153,154,149,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,151,152,153,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,147,147,147,147,148,148,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,0,164,164,164,164,164,164,164,164,0,164,164,166,164,164,164,0,164,164,0,0,0,0,0,169,170,0,69,169,170,169,170,169,170,169,170,169,170,170,169,170,169,170,169,170,169,170,169,69,169,169,170,169,170,169,169,169,169,169,170,169,170,169,170,169,170,169,170,170,169,170,168,170,169,169,169,169,170,169,170,169,170,169,170,169,170,170,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}`{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}``{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000`{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{Ef}}{b{Eh}}{b{hc}}}{{Bd{f}}}{EjEl}}{{{b{hEn}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hEn}}}{{Fd{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{Ff}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{Fj{Af}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{b{{Fl{{Fj{Af}}}}}}}{{Bd{{Dh{Fh}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fn}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{En}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Eh}{{Bd{En}}}}{Df{{Bd{Eh}}}}``{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hc}}i}{{Ah{gF`}}}{}{}{}{{Gb{{b{he}}}{{G`{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00:::{{{b{hEn}}{b{{Fl{Gd}}}}}{{Fd{Af}}}}{{{b{hc}}e}{{Ah{AfF`}}}{}Gf}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gh}}}{{b{Dj}}}}{{{b{Gj}}}{{b{Dj}}}}{{{b{Gl}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Gh}}}Gh}{{{b{Dl}}}Dl}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}000000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Gh}}}Aj}{c{{Ah{Dl}}}Aj}{c{{Ah{Gj}}}Aj}{c{{Ah{Gl}}}Aj}{Aff}0000{{{b{Gh}}{b{Gh}}}Al}{{{b{Dl}}{b{Dl}}}Al}{{{b{Gn}}{b{Gn}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gl}}{b{Gl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000`{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gj}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gl}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}}{{Ah{Gnc}}}{}}{{{b{Dj}}}{{Ah{Gj}}}}{{{b{Dj}}}{{Ah{Gl}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{H`{Dj}}}{{Hb{Df}}}{{Hf{}{{Hd{{Ed{ce}}}}}}}}{{{b{Gh}}{b{hc}}}fBj}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gj}}{b{hc}}}fBj}{{{b{Gl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Gh}}c}AhCd}{{{b{Dl}}c}AhCd}{{{b{Gj}}c}AhCd}{{{b{Gl}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Ghc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Gjc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Glc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hh{c}}{Cb{{Eb{Hj}}}}}{{Hh{c}}}Hl}{{{Hh{{Ab{Hl}}}}{Cb{Hn}}}{{Bd{I`}}}}{{{b{h{Hh{c}}}}}{{Bd{Ib}}}Hl}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000``{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{c}}{b{he}}}f{}{}}0000{{{b{c}}}f{}}00000``{{{b{An}}Gd{Cb{Gd}}{Cb{{b{Ij}}}}GdAl}{{Bd{Af}}}}`{{}Id}{{}If}{{}Ih}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{c{{Ah{Ij}}}Aj}{c{{Ah{Il}}}Aj}{Aff}0000000```{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{Ij}}{b{Ij}}}Al}{{{b{Il}}{b{Il}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hh{c}}}{{Bd{Bb}}}Hl}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{{{b{Ij}}{b{hBf}}}Bh}{{{b{Il}}{b{hBf}}}Bh}{cc{}}00000{{{b{Dj}}}Ij}11{{{b{Id}}}{{Eb{If}}}}`{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}{{{b{Ij}}{b{hc}}}fBj}{{{b{Il}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{Idc}{{Hh{c}}}Hl}{{{b{{Fl{Gd}}}}}Al}`{{Idc}Id{{In{If}{{G`{If}}}}}}```{c{{Hh{c}}}Hl}<{DfIj}{GdIj}{{{b{hIb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hI`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}{{{b{Ij}}c}AhCd}{{{b{Il}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{Id{Cb{An}}}{{Bd{{Hh{J`}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hId}}{b{Jb}}}f}{ce{}{}}0000000{{IdAf}Id}{{Id{Cb{{Eb{{Fl{Df}}}}}}}Id}{{If{Cb{c}}}If{{Hb{Ij}}}}{{IfAl}If}{{Id{Cb{{Eb{{Dh{Jd}}}}}}}Id}{{IfIh}If}{{IfGd}If}{{IdAl}Id}0{{Id{Cb{Af}}}Id}1500{{If{Cb{Il}}}If}{{IdIf}Id}{{Id{Cb{c}}}Id{{Hb{An}}}}{{Id{Cb{{Eb{{Dh{Af}}}}}}}Id}{{If{Cb{Gd}}}If}66{{Id{Cb{j}}}Id}>{{Id{Cb{Hn}}}Id}09??<<`````````````````````{{{b{hJf}}{b{{Fl{Gd}}}}AlAlAl}{{Bd{f}}}}{{{b{hJf}}Al}f}{{{b{c}}}{{b{e}}}{}{}}000{{{b{hc}}}{{b{he}}}{}{}}000{Af{{b{c}}}{}}000{Af{{b{hc}}}{}}000{Aff}000{{{b{Jf}}}Jd}{cc{}}000{{}Af}000{{{b{{Fl{Af}}}}Af{b{Dd}}{Cb{Gd}}IhAl}{{Bd{{Dh{Jf}}}}}}{ce{}{}}000{Jf{{Bd{Jh}}}}{c{{Ah{e}}}{}{}}0000000{{{b{c}}}Cf{}}0003333````{{{b{c}}d}f{}}=<{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Jb}?>={{{b{{Jj{Jd}}}}}Jd}{{{b{Jb}}{b{hBf}}}Bh}={{{b{Jb}}}Af}{{{b{Jb}}}Hn}{{{b{Dj}}AlAl}Jd}{{{b{Jl}}Gd{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{Ij}}}}{Cb{Gd}}Gd{Cb{{b{Il}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}?{{{b{c}}}e{}{}}>{{{b{Jl}}{b{Id}}}{{Bd{Jb}}}}?>{ce{}{}}{{JbHn}Jb}`````````???`{{{Jn{c}}{b{Dd}}}{{Bd{{K`{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{c}}{b{he}}}f{}{}}00{{{b{c}}}f{}}000``{{}Kb}{{}Kd}{{}Kf}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Kb}}}Aj}{c{{Ah{Kd}}}Aj}{c{{Ah{Kf}}}Aj}{Aff}0000{{{b{Kb}}{b{Kb}}}Al}{{{b{Kd}}{b{Kd}}}Al}{{{b{Kf}}{b{Kf}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jn{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{K`{c}}}}}{{Bd{f}}}Ad}``{{{b{Kb}}{b{hBf}}}Bh}{{{b{Kd}}{b{hBf}}}Bh}{{{b{Kf}}{b{hBf}}}Bh}{cc{}}0000{{{b{Kb}}{b{hc}}}fBj}{{{b{Kd}}{b{hc}}}fBj}{{{b{Kf}}{b{hc}}}fBj}{{{Jn{c}}Al}{{Jn{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jn{c}}Af}{{Jn{c}}}Ad}{c{{Jn{c}}}Ad}````{{{b{Kb}}c}AhCd}{{{b{Kd}}c}AhCd}{{{b{Kf}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jn{c}}Kh}{{Jn{c}}}Ad}{{{Jn{c}}{Cb{Df}}}{{Jn{c}}}Ad}0{{{Jn{c}}{Cb{Af}}}{{Jn{c}}}Ad}{{{Jn{c}}{Cb{Al}}}{{Jn{c}}}Ad}{{{Jn{c}}Df}{{Jn{c}}}Ad}0{{{Jn{c}}Gd}{{Jn{c}}}Ad}{{{Jn{c}}Kf}{{Jn{c}}}Ad}15{{{b{h{K`{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{cc{}}{{}Kj}{{}Af}{{c{Cb{{b{Dl}}}}}{{Bd{{Dh{{Eb{Kl}}}}}}}{{H`{{Fl{{Eb{Dj}}}}}}}}{ce{}{}}{c{{Ah{e}}}{}{}}0{{{b{Kl}}}{{Bd{J`}}}}0{{{b{c}}}Cf{}}{{{b{Kl}}Kj}f}{{{b{Kl}}}{{b{{Eb{Dj}}}}}}5``````````````{{{b{c}}d}f{}}000{{{b{h{Kn{c}}}}}{{Bd{Cj}}}Bl}{{{L`{c}}{b{Dd}}}{{Bd{{Lb{c}}}}}Ad}{{{L`{c}}{b{Dd}}}{{Bd{{`{c}}}}}{LdElLf}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}00000`{{{b{M`}}{Cb{{b{Mb}}}}}{{Bd{Md}}}}{{{b{Mf}}c}{{Ab{A`}}}Ad}{{{b{Mh}}c}{{Ab{A`}}}Ad}{{{b{M`}}{Cb{{b{Mb}}}}LjAl}{{Bd{Bb}}}}{{}Mf}{{}Mh}{{}Lj}{{}Ll}{{}Ln}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Lh}}}Aj}{c{{Ah{Ll}}}Aj}{c{{Ah{Ln}}}Aj}{Aff}00000000000{{{b{Lh}}{b{Lh}}}Al}{{{b{Ll}}{b{Ll}}}Al}{{{b{Ln}}{b{Ln}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Mf}}}An}{{{b{Mh}}}An}{{{Mj{c}}}{{Bd{Bb}}}Hl}{{{Kn{c}}}{{Bd{Bb}}}Bl}{{{b{h{Ml{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{L`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Lb{c}}}}}{{Bd{f}}}Ad}{{{Mj{c}}{Cb{{Eb{Hj}}}}Al}{{Bd{Bb}}}Hl}{{{b{Lh}}{b{hBf}}}Bh}{{{b{Ll}}{b{hBf}}}Bh}{{{b{Ln}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{M`}}}}{{{b{Lh}}{b{hc}}}fBj}{{{b{Ll}}{b{hc}}}fBj}{{{b{Ln}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Mj{c}}{Cb{An}}}{{Mj{c}}}Hl}{{{b{M`}}}{{Bd{Mb}}}}{c{{Mj{c}}}Hl}{c{{Kn{c}}}Bl}{c{{Ml{c}}}Ad}{{}Mf}{c{{L`{c}}}Ad}{{}Mh}{c{{L`{c}}}{LdElLf}}{{{b{h{Mj{c}}}}}{{Bd{Mn}}}Hl}{{{b{h{Kn{c}}}}}{{Bd{Dd}}}Bl}{{{b{Lh}}c}AhCd}{{{b{Ll}}c}AhCd}{{{b{Ln}}c}AhCd}{{{Mj{c}}Al}{{Mj{c}}}Hl}{{{Kn{c}}Al}{{Kn{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Mj{c}}{Cb{{Dh{Df}}}}}{{Mj{c}}}Hl}{{{Kn{c}}{Cb{{Dh{Df}}}}}{{Kn{c}}}Bl}{{{Ml{c}}{Cb{Ln}}}{{Ml{c}}}{}}{{Mf{Cb{Ln}}}Mf}{{{L`{c}}{Cb{Ln}}}{{L`{c}}}Ad}{{Mh{Cb{Ln}}}Mh}{{MfAn}Mf}{{MhAn}Mh}{{{Mj{c}}{Cb{{Dh{Jh}}}}}{{Mj{c}}}Hl}{{{Mj{c}}{Cb{Af}}}{{Mj{c}}}Hl}{{{Kn{c}}{Cb{Af}}}{{Kn{c}}}Bl}{{{Ml{c}}Al}{{Ml{c}}}{}}{{{L`{c}}Al}{{L`{c}}}Ad}{{Ljc}Lj{{Hb{{Cb{{Eb{Hj}}}}}}}}{{{Mj{c}}{Cb{{Dh{Af}}}}}{{Mj{c}}}Hl}{{{Kn{c}}{Cb{{Dh{Af}}}}}{{Kn{c}}}Bl}{{Lj{Cb{{Eb{{Fl{Df}}}}}}}Lj}{{{Mj{c}}{Cb{j}}}{{Mj{c}}}Hl}{{{Kn{c}}{Cb{j}}}{{Kn{c}}}Bl}{{Ljc}Lj{{Hb{{Cb{j}}}}}}{{Ljc}Lj{{Hb{{Cb{Af}}}}}}{{{b{h{Lb{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{{}N`}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{N`}}}Aj}{Aff}0000{{{b{N`}}{b{N`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Nb{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Nd{c}}}{{Bd{Bb}}}Hl}{{{b{N`}}{b{hBf}}}Bh}{cc{}}0000{{{b{N`}}{b{hc}}}fBj}{{{Nd{c}}{Cb{Kh}}}{{Nd{c}}}Hl}{{}Af}0000{ce{}{}}0000`{c{{Nb{c}}}Ad}{c{{Nf{c}}}Ad}{c{{Nd{c}}}Hl}{{{b{N`}}c}AhCd}{{{Nd{c}}Al}{{Nd{c}}}Hl}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Nd{c}}Kh}{{Nd{c}}}Hl}4{{{Nb{c}}Nh}{{Nb{c}}}Ad}{{{Nd{c}}Nh}{{Nd{c}}}Hl}{{{Nd{c}}{Cb{{Dh{Df}}}}}{{Nd{c}}}Hl}{{{Nd{c}}Hn}{{Nd{c}}}Hl}{{{Nd{c}}{b{Dd}}}{{Nd{c}}}Hl}{{{b{h{Nf{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jl}}}{{b{{Fl{Gd}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{J`}}}{{Bd{f}}}}{cc{}}{{{b{hc}}}JlHl}{{}Af}{ce{}{}}{{{b{Hl}}}{{Cb{{b{{Fl{Gd}}}}}}}}{{{b{Hl}}}{{Cb{{b{J`}}}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}4`{{{b{hc}}{Cb{Kh}}}{{Bd{Dd}}}Nj}``{{{b{c}}d}f{}}{{{b{Nl}}Af}{{Ed{NlNl}}}}{Nl{{Eb{Nn}}}}{{{b{Nl}}}{{b{O`}}}}{{{b{hNl}}}{{b{hO`}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nl{{Ab{Nn}}}}{{{b{Nl}}Af}Al}{{{b{Nl}}}Nl}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{Ob{c}}}{{Bd{Af}}}Hl}{{{b{Nl}}}{{b{Od}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nl}}{b{{b{Nn}}}}}Al}{{{b{Nl}}{b{Nl}}}Al}{{{b{Nl}}}{{b{{Fl{Of}}}}}}{{{Ob{c}}}{{Bd{Bb}}}Hl}{{{b{Nl}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{OhNl}{OjNl}2{c{{Bd{{Ob{J`}}}}}{{Hb{An}}}}{{{b{Od}}}{{b{{Fl{Of}}}}}}{{{Ob{c}}{Cb{Kh}}}{{Ob{c}}}Hl}{{}Af}0{ce{}{}}0{Nl{{Ed{{Dh{Of}}{Dh{{Ab{Nn}}}}{Cb{Ol}}}}}}{{{b{Nl}}}}{{{b{Nl}}}{{A@d{{Dh{{Ab{On}}}}A@`A@b}}}}{{{b{Nl}}}Af}{{{Ob{c}}Al}{{Ob{c}}}Hl}{c{{Ob{c}}}Hl}{{Od{Dh{{Ab{Nn}}}}{Cb{Ol}}}Nl}{OdNl}{{OdAf}Nl}{{{b{hNl}}{Cb{Ol}}}f}{{{b{hNl}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NlAfAf}Nl}0{{{b{Nl}}Af}{{Ed{{Ab{Nn}}{Ab{Nn}}}}}}0{{{b{hNl}}}{{Cb{Ol}}}}{{{b{Nl}}}{{Ab{Nn}}}}{{{b{c}}}e{}{}}{{{b{Nl}}{b{Nl}}}Ol}{{{b{Nl}}b}Ol}10{c{{Ah{e}}}{}{}}000{{Od{Dh{{Ab{Nn}}}}{Cb{Ol}}}{{Ah{NlA@f}}}}{{{b{c}}}Cf{}}0{{{b{Nl}}}{{Cb{{b{Ol}}}}}}0{{{b{Nl}}}{{b{{Fl{{Ab{Nn}}}}}}}}{{{b{Nl}}}A@`}{ce{}{}}0{{{Ob{c}}{Cb{Kh}}}{{Ob{c}}}Hl}{{{Ob{c}}Al}{{Ob{c}}}Hl}{{{Ob{c}}{Cb{Af}}}{{Ob{c}}}Hl}0{{{Ob{c}}{Cb{e}}}{{Ob{c}}}Hl{{Hb{An}}}}{{{Ob{c}}{Cb{{Eb{Hj}}}}}{{Ob{c}}}Hl}{{{Ob{c}}{Cb{{Eb{{Fl{Df}}}}}}}{{Ob{c}}}Hl}4{{{Ob{c}}{Cb{{b{hj}}}}}{{Ob{c}}}Hl}{{{Ob{c}}Hn}{{Ob{c}}}Hl}{{{Ob{c}}{b{Dd}}}{{Ob{c}}}Hl}{{{b{Nl}}{Cb{Ol}}}{{Ab{Nn}}}}{{Nl{Cb{Ol}}}Nl}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@h}}}A@h}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{b{A@h}}Af}A@j}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Of}}{b{A@l}}}{{Ah{A@nA@f}}}}`{Aff}0{{{b{A@n}}{b{A@n}}}Al}{{{b{A@n}}{b{hBf}}}{{Ah{fDb}}}}{{{b{A@h}}{b{hBf}}}{{Ah{fDb}}}}{AA`A@n}{cc{}}0{{}Af}0{ce{}{}}0{A@hAAb}{{{b{A@h}}}{{b{{Cb{{Dh{AAd}}}}}}}}``````{{{b{A@h}}}{{b{AAf}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{AAb{{Ah{A@hAAh}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AAj{c}}Af}{{Bd{AAl}}}Hl}{{AAnAf}{{Bd{AAl}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{AAj{c}}{b{Cj}}}{{Bd{{AAj{c}}}}}Hl}{{AAn{b{Cj}}}{{Bd{AAn}}}}{{{b{AB`}}}AB`}{{{b{ABb}}}ABb}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000{{}ABb}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AB`}}}Aj}{c{{Ah{ABb}}}Aj}{Aff}0000{{{b{AB`}}{b{AB`}}}Al}{{{b{ABb}}{b{ABb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AAj{c}}}{{Bd{Bb}}}Hl}{AAn{{Bd{Bb}}}}{{{b{AAl}}Af}Al}{{{b{AB`}}{b{hBf}}}Bh}{{{b{ABb}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{ABd}}}{{Bd{AAn}}}}{{{b{h{AAj{c}}}}}{{Bd{{b{ABd}}}}}Hl}{{{b{hAAn}}}{{Bd{{b{ABd}}}}}}{{{b{AB`}}{b{hc}}}fBj}{{{b{ABb}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAl}}}Al}`0`{{{Cb{{b{{Fl{Af}}}}}}{b{Cj}}{Cb{{b{{Fl{Jh}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AAj{c}}}Hl}{{{b{hAAl}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AAj{c}}}}}{{Bd{Af}}}Hl}{{{b{hAAn}}}{{Bd{Af}}}}`{{{AAj{c}}ABb}{{AAj{c}}}Hl}{{AAnABb}AAn}{{{b{AAl}}}{{b{Mn}}}}{{{b{h{AAj{c}}}}}{{Bd{Mn}}}Hl}{{{b{hAAn}}}{{Bd{Mn}}}}{{{b{AB`}}c}AhCd}{{{b{ABb}}c}AhCd}{{{AAj{c}}Al}{{AAj{c}}}Hl}0{{AAnAl}AAn}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AAj{c}}{Cb{{Dh{Df}}}}}{{AAj{c}}}Hl}{{{AAj{c}}{Cb{{Dh{Jh}}}}}{{AAj{c}}}Hl}{{AAn{Cb{{Dh{Jh}}}}}AAn}{{{AAj{c}}{Cb{Af}}}{{AAj{c}}}Hl}{{AAn{Cb{Af}}}AAn}{{{AAj{c}}{Cb{{Eb{Hj}}}}}{{AAj{c}}}Hl}{{AAn{Cb{{Eb{Hj}}}}}AAn}{{{AAj{c}}{Cb{{Dh{Af}}}}}{{AAj{c}}}Hl}{{AAn{Cb{{Dh{Af}}}}}AAn}{{{AAj{c}}{Cb{j}}}{{AAj{c}}}Hl}{{AAn{Cb{j}}}AAn}````````````````{{{b{c}}d}f{}}00000{{{ABf{c}}{b{Dd}}}{{Bd{{ABh{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{c}}{b{he}}}f{}{}}00000{{{b{c}}}f{}}00000000000``{{}ABj}{{}ABl}{{}ACd}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{ABj}}}Aj}{c{{Ah{ABl}}}Aj}{c{{Ah{ABn}}}Aj}{c{{Ah{AC`}}}Aj}{c{{Ah{ACb}}}Aj}{c{{Ah{ACd}}}Aj}`{Aff}00000009{{{b{{ABh{c}}}}{b{Bb}}}{{`{{ACh{}{{Hd{{Bd{{ACf{A@f}}}}}}}}}}}Ad}{{{b{ABj}}{b{ABj}}}Al}{{{b{ABl}}{b{ABl}}}Al}{{{b{ABn}}{b{ABn}}}Al}{{{b{AC`}}{b{AC`}}}Al}{{{b{ACb}}{b{ACb}}}Al}{{{b{ACd}}{b{ACd}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000000{{{b{{ABh{c}}}}}{{Bd{Kj}}}Ad}{{{ABf{c}}{b{hBb}}}{{Bd{Kj}}}Ad}{{{b{ABj}}{b{hBf}}}Bh}{{{b{ABl}}{b{hBf}}}Bh}{{{b{ABn}}{b{hBf}}}Bh}{{{b{AC`}}{b{hBf}}}Bh}{{{b{ACb}}{b{hBf}}}Bh}{{{b{ACd}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000000{{}ACd}{{{b{{ABh{c}}}}}{{b{{ACl{{ACj{c}}}}}}}Ad}{{{b{ABj}}{b{hc}}}fBj}{{{b{ABl}}{b{hc}}}fBj}{{{b{ABn}}{b{hc}}}fBj}{{{b{AC`}}{b{hc}}}fBj}{{{b{ACb}}{b{hc}}}fBj}{{{b{ACd}}{b{hc}}}fBj}{{}Af}0000000{ce{}{}}0000000{{{b{ACd}}}Al}0```{c{{ABf{c}}}{AdAd}}``{{{b{ABj}}c}AhCd}{{{b{ABl}}c}AhCd}{{{b{ABn}}c}AhCd}{{{b{AC`}}c}AhCd}{{{b{ACb}}c}AhCd}{{{b{ACd}}c}AhCd}{{{ABf{c}}Al}{{ABf{c}}}Ad}`{{{b{c}}}e{}{}}00000{{{b{ABj}}c}{{ABf{c}}}Ad}{c{{Ah{e}}}{}{}}000000000000000{Gd{{Bd{ABn}}}}{ACn{{Bd{AC`}}}}{AD`{{Bd{ACb}}}}{{{b{c}}}Cf{}}0000000{ce{}{}}0000000{{{ABf{c}}ABl}{{ABf{c}}}Ad}{{{ABf{c}}{Cb{Af}}}{{ABf{c}}}Ad}0{{{ABf{c}}ACd}{{ABf{c}}}Ad}{{{b{h{ABh{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{ABh{c}}}}{Dh{{ACf{A@f}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ADb{c}}{b{Bb}}}{{Bd{f}}}{nLfADd}}{cc{}}{{}Af}={{cei}{{ADb{c}}}{nLfADd}{{Hb{An}}}{{H`{Dj}}}{{Hf{}{{Hd{g}}}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}{ce{}{}}{{{ADb{c}}Al}{{ADb{c}}}{nLfADd}}{{{b{Bb}}{b{ADf}}{b{{Fl{c}}}}{b{ABj}}Af}{{Bd{f}}}{{H`{Dj}}}}``{{{b{ADh}}c}{}ADj}{{{b{ADh}}c}{}{ADjLf}}?>=<;9{{}{{b{ADh}}}}95{{{b{ADl}}}Kj}{{{b{ADh}}c}ADn{ADjLf}}99{{ACne}{}ADj{{Gb{}{{G`{c}}}}}}980````{{{b{c}}d}f{}}0{{{b{hBb}}{Cb{{b{Hj}}}}Al}{{Bd{f}}}}{{{b{Hj}}}{{Cb{{b{AE`}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{AEb}}}AEb}{{{b{AEd}}}AEd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0{{{b{AEd}}}{{b{{Fl{AEb}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{AEb}}}Aj}{c{{Ah{AEd}}}Aj}{Aff}0{{{b{AEb}}}{{b{Jd}}}}{{{b{Hj}}{b{Bb}}}{{Bd{Jh}}}}{{{b{AEb}}}{{b{AEf}}}}{{{b{AEb}}{b{hBf}}}Bh}{{{b{AEd}}{b{hBf}}}Bh}{cc{}}0{JhAEb}{AEhAEb}{{{b{AEb}}}{{Cb{{b{Jh}}}}}}00{{{b{AEd}}{b{Dj}}}{{Bd{{b{AEb}}}}}}{{}Af}0{ce{}{}}0{{AEh{Cb{Jh}}{Cb{Jh}}{Cb{Jh}}}AEb}{{Hn{Dh{AEb}}{Cb{Af}}}AEd}{{{b{AEb}}}{{Cb{Af}}}}{{{b{AEd}}}{{Cb{Af}}}}{{{b{AEd}}}{{b{Hn}}}}{{{b{AEb}}c}AhCd}{{{b{AEd}}c}AhCd}{{{b{AE`}}{b{AEd}}}{{Bd{Al}}}}{{{b{hAEd}}{b{{Fl{Af}}}}}f}<<{{{b{AEb}}}{{Cb{Jh}}}}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0=={{{b{hAEd}}Hn}f}```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00`````{{{b{hc}}}{{Bd{Jl}}}{BlHlAEj}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ACh{}{{Hd{Af}}}}}}{cAl{{H`{ADf}}}}{{{Cb{{b{{Fl{Df}}}}}}{b{Dd}}{Cb{{b{{Fl{Jh}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{ADf}}}An}","D":"CM`","p":[[1,"reference"],[5,"Private",1974],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1975],[5,"HiveOptions",0,1975],[10,"WriterFactory",0,1976],[10,"SerWriter",1954,1976],[5,"Box",1977],[10,"Write",1978],[1,"usize"],[6,"Result",1979],[10,"Deserializer",1980],[1,"bool"],[5,"PathBuf",1981],[10,"SerReader",1954,1976],[5,"DataFrame",1982],[8,"PolarsResult",1983],[5,"Formatter",1984],[8,"Result",1984],[10,"Hasher",1985],[10,"Read",1978],[10,"ArrowReader",0,1976],[8,"RecordBatch",1986],[6,"Option",1987],[10,"Serializer",1988],[5,"TypeId",1989],[5,"AvroReader",86,1990],[5,"ArrowSchema",1991],[10,"Seek",1978],[6,"AvroCompression",86],[5,"AvroWriter",86,1992],[5,"Error",1984],[5,"Schema",1993],[5,"String",1994],[5,"Vec",1995],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",154,1996],[10,"ObjectStore",1997],[5,"Arc",1998],[1,"tuple"],[5,"PolarsObjectStore",154,1999],[5,"Path",2000],[10,"AsyncWrite",2001],[10,"Unpin",2002],[5,"CloudWriter",154,2003],[5,"Error",2004],[10,"Command",2005],[8,"Result",2004],[5,"Url",2006],[5,"Bytes",2007],[5,"Range",2008],[1,"slice"],[5,"ObjectMeta",1997],[17,"Output"],[10,"FnOnce",2009],[1,"u8"],[10,"VarInt",2010],[6,"AmazonS3ConfigKey",227,2011],[6,"AzureConfigKey",227,2012],[6,"GoogleConfigKey",227,2013],[6,"CloudType",227],[10,"AsRef",2014],[10,"Into",2014],[17,"Item"],[10,"IntoIterator",2015],[5,"CsvReader",416,2016],[10,"PhysicalIoExpr",1887],[10,"MmapBytesReader",1306],[8,"SchemaRef",1993],[5,"OwnedBatchedCsvReader",416,2017],[5,"BatchedCsvReader",416,2017],[5,"CsvReadOptions",416,2018],[5,"CsvParseOptions",416,2018],[6,"CsvEncoding",416,2018],[6,"CommentPrefix",416,2018],[6,"NullValues",416,2018],[10,"Fn",2009],[5,"File",2019],[5,"SchemaInferenceResult",754],[6,"DataType",2020],[6,"Buffer",677],[5,"Series",2021],[8,"PlHashSet",2022],[6,"ReaderBytes",1306],[5,"CsvWriter",781,2023],[5,"BatchedWriter",781,2023],[5,"CsvWriterOptions",781,2024],[5,"SerializeOptions",781,2024],[6,"QuoteStyle",781,2024],[8,"NonZeroUsize",2025],[1,"u64"],[5,"FileCacheEntry",927,2026],[5,"IpcStreamReader",948,2027],[5,"IpcWriter",948,2028],[5,"BatchedWriter",948,2028],[10,"AsyncWrite",2029],[10,"Send",2002],[5,"IpcScanOptions",948,2030],[5,"IpcReadOptions",948,2031],[5,"IpcWriterOptions",948,2028],[6,"IpcCompression",948,2028],[5,"IpcReaderAsync",948,2031],[5,"FileMetadata",2032],[1,"i64"],[5,"IpcStreamWriterOption",948,2027],[5,"IpcWriterOption",948,2028],[5,"IpcReader",948,2030],[5,"IpcStreamWriter",948,2027],[8,"ArrowSchemaRef",1991],[5,"JsonWriterOptions",1208],[5,"JsonWriter",1208],[5,"JsonReader",1208],[5,"BatchedWriter",1208],[6,"JsonFormat",1208],[10,"BufRead",1978],[5,"StructArray",1330,2033],[10,"Array",2034],[10,"Any",1989],[5,"JsonLineReader",1330],[6,"ArrowDataType",2035],[5,"Field",2036],[5,"GrowableStruct",2037],[5,"MutableStructArray",2038],[5,"Bitmap",2039],[10,"Scalar",2040],[5,"StructValueIter",2041],[5,"BitmapIter",2042],[6,"ZipValidity",2043],[6,"PolarsError",1983],[5,"FileMetaData",1426,2044],[6,"ColumnOrder",2045],[5,"RowGroupMetaData",2046],[5,"ParquetStatistics",1426],[5,"MutableStatistics",2047],[5,"FileMetaData",2048],[5,"KeyValue",2048],[5,"SchemaDescriptor",2049],[6,"ParquetError",2050],[5,"ParquetReader",1479,2051],[5,"BatchedParquetReader",1479,2052],[5,"ParquetAsyncReader",1479,2051],[5,"ParquetOptions",1479,2053],[6,"ParallelStrategy",1479,2053],[8,"FileMetaDataRef",1426],[5,"ParquetWriter",1620,2054],[5,"BatchedWriter",1620,2055],[5,"ParquetWriteOptions",1620,2056],[6,"ParquetCompression",1620,2056],[5,"GzipLevel",1620,2056],[5,"BrotliLevel",1620,2056],[5,"ZstdLevel",1620,2056],[5,"StatisticsOptions",1620,2057],[8,"RowGroupIterColumns",1620,2058],[10,"Iterator",2059],[5,"FileWriter",2060],[5,"Mutex",2061],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1849],[10,"Sync",2002],[5,"Path",1981],[5,"RuntimeManager",1866],[10,"Future",2062],[10,"GetSize",1866],[5,"JoinHandle",2063],[10,"StatsEvaluator",1887],[5,"ColumnStats",1887],[5,"BatchStats",1887],[8,"String",2064],[5,"Field",2065],[10,"Sized",2002],[5,"Utf8Field",677],[5,"CategoricalField",677],[5,"DatetimeField",677],[15,"Datetime",751]],"r":[[0,1976],[1,1975],[2,1975],[3,1976],[4,1976],[5,1976],[87,1990],[88,1992],[89,2066],[154,1996],[155,2003],[156,1999],[165,2067],[194,1996],[206,2067],[230,2011],[235,2012],[259,2013],[418,2017],[419,2018],[420,2018],[421,2018],[422,2018],[423,2016],[427,2018],[428,2017],[475,2068],[555,754],[574,2069],[782,2023],[783,2023],[784,2024],[788,2024],[789,2024],[927,2070],[928,2071],[929,2026],[936,2070],[938,2071],[948,2028],[949,2028],[950,2031],[951,2030],[952,2031],[953,2030],[954,2027],[955,2027],[956,2027],[957,2028],[958,2028],[959,2028],[1331,2033],[1426,2044],[1444,2047],[1480,2052],[1483,2053],[1484,2051],[1485,2053],[1486,2051],[1567,2072],[1620,2055],[1622,2056],[1624,2056],[1627,2056],[1628,2056],[1629,2054],[1630,2058],[1632,2057],[1635,2056],[1954,1976],[1955,1976],[1956,0]],"b":[[1354,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1355,"impl-PartialEq-for-StructArray"],[1360,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1361,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1380,"impl-StructArray"],[1381,"impl-Array-for-StructArray"],[1384,"impl-Array-for-StructArray"],[1385,"impl-StructArray"],[1404,"impl-Array-for-StructArray"],[1405,"impl-StructArray"],[1421,"impl-Array-for-StructArray"],[1422,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM4FqgAAAAEAAwARABYAAAAYAAgAIgAJAC0AAgAyAAUAOgAAADwAAgBAAAIARQARAF8AAABhABkAfgADAIUAAQCIAA0AmQAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEAABoBEAAuATgAbAEDAHEBCAB/ARwAowEEAKwBAQCwASsA3QE3ABYCBAAhAgAAJAIRAEACAABCAgIASQIrAHYCCACAAgcAmAIAAKYCEgC6AhcA1gIEAN8CIAABAwEABQMAAAcDBgAPAwAAFwMYADIDIQBVAwAAVwMCAF8DAgBjAwAAZQMFAHEDAgB4AwMAfQMWAKADBwCpAwIArQMBALEDBAC3AwAAugMAAL0DAAC/AwEAwwMDAMgDJwDxAz4AMQQDAEEEDwBeBAAAYAQHAGoEOACrBAAArgQCALMEAAC2BAEAuQQAAL8EJQDmBAAA7AQAAO4EBAD6BBgAFQUBABsFAQAeBQgAKAUBACsFCAA1BQEAOAUFAD8FDQBOBQEAUQUBAFYFAgBcBQAAXgUAAGYFAwBtBQEAcAUJAHsFAgCBBQEAhQUJAJQFAACWBQcAoQUDAKcFBQCvBQEAvQUCAMEFAwDGBQEAyQUAAMwFAADOBQAA0QUNAOAFJwANBgkAHAYAAB4GAwAjBgAAJQYBACgGAQArBgIALwYSAEQGBQBLBgEATgYCAFIGAABUBgIAWAYAAFoGAQBdBgAAXwYBAGIGAQBlBi4AlgY7ANQGBQDiBg8A+gYBAP0GAQAABwAAAgcFAAoHKQA5BwAAOwcFAEIHAABEBwQASgcDAE8HBABVBwEAWAcAAFoHBQBiBwQAaAcJAHMHBwB9BwIAiAcBAJEHAwCYBw0ApwcAAKkHAACtBwUAtQcBAA=="}],\
["polars_lazy",{"t":"CQCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNOONNNOONNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNOONNNOMNNCOONOONMNNOONNNNOOMNNOOONNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","clone_to_uninit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","anonymous_scan","anti_join","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","eager","eager","expand_paths","expand_paths","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","new_streaming","new_streaming","null_count","on","optimize","parallel","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","unpivot","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_page_size","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","to_writer","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1534,"polars_lazy::dsl::AggExpr"],[1541,"polars_lazy::dsl::BooleanFunction"],[1544,"polars_lazy::dsl::Expr"],[1579,"polars_lazy::dsl::FunctionExpr"],[1624,"polars_lazy::dsl::StringFunction"],[1644,"polars_lazy::dsl::TemporalFunction"],[1646,"polars_lazy::dsl::binary"],[1666,"polars_lazy::dsl::cat"],[1667,"polars_lazy::dsl::dt"],[1723,"polars_lazy::dsl::function_expr"],[1940,"polars_lazy::dsl::function_expr::BooleanFunction"],[1943,"polars_lazy::dsl::function_expr::FunctionExpr"],[1988,"polars_lazy::dsl::function_expr::StringFunction"],[2008,"polars_lazy::dsl::function_expr::TemporalFunction"],[2010,"polars_lazy::dsl::function_expr::cat"],[2012,"polars_lazy::dsl::function_expr::pow"],[2016,"polars_lazy::dsl::function_expr::rolling"],[2049,"polars_lazy::dsl::function_expr::rolling_by"],[2081,"polars_lazy::dsl::function_expr::trigonometry"],[2125,"polars_lazy::dsl::functions"],[2200,"polars_lazy::dsl::python_udf"],[2246,"polars_lazy::dsl::string"],[2307,"polars_lazy::dsl::udf"],[2313,"polars_lazy::frame"],[2759,"polars_lazy::frame::pivot"],[2761,"polars_lazy::prelude"],[3380,"polars_lazy::prelude::DslPlan"],[3435,"polars_lazy::prelude::LiteralValue"],[3438,"dyn_clone::sealed"],[3439,"polars_plan::dsl::meta"],[3440,"polars_plan::dsl::expr"],[3441,"polars_error"],[3442,"core::result"],[3443,"polars_plan::dsl::array"],[3444,"polars_plan::dsl::list"],[3445,"core::convert"],[3446,"polars_plan::dsl::expr_dyn_fn"],[3447,"alloc::sync"],[3448,"polars_core::series"],[3449,"core::option"],[3450,"core::ops::function"],[3451,"core::marker"],[3452,"polars_plan::plans::visitor"],[3453,"polars_plan::dsl::function_expr"],[3454,"polars_core::datatypes::dtype"],[3455,"polars_core::chunked_array::ops::sort::options"],[3456,"polars_plan::dsl::function_expr::schema"],[3457,"polars_core::datatypes::field"],[3458,"core::any"],[3459,"alloc::vec"],[3460,"polars_plan::dsl::binary"],[3461,"core::clone"],[3462,"alloc::string"],[3463,"polars_plan::dsl::udf"],[3464,"polars_core::chunked_array::cast"],[3465,"polars_plan::dsl::cat"],[3466,"polars_plan::dsl::arity"],[3467,"polars_plan::dsl::function_expr::boolean"],[3468,"polars_plan::dsl::function_expr::cat"],[3469,"polars_plan::dsl::function_expr::datetime"],[3470,"polars_plan::dsl::function_expr::pow"],[3471,"polars_plan::dsl::function_expr::strings"],[3472,"polars_plan::dsl::function_expr::struct_"],[3473,"polars_plan::dsl::functions::temporal"],[3474,"polars_plan::dsl::options"],[3475,"polars_core::utils"],[3476,"polars_lazy::dsl::eval"],[3477,"polars_time::windows::duration"],[3478,"polars_time::windows::group_by"],[3479,"polars_core::datatypes::time_unit"],[3480,"serde::de"],[3481,"polars_plan::plans"],[3482,"polars_core::series::ops"],[3483,"polars_plan::dsl::dt"],[3484,"polars_lazy::dsl::list"],[3485,"polars_arrow::legacy::kernels::ewm"],[3486,"polars_plan::dsl::struct_"],[3487,"polars_core::chunked_array::ops"],[3488,"core::fmt"],[3489,"polars_plan::plans::apply"],[3490,"polars_plan::dsl::function_expr::list"],[3491,"polars_plan::dsl::function_expr::range"],[3492,"polars_plan::dsl::function_expr::array"],[3493,"polars_plan::dsl::function_expr::business"],[3494,"polars_plan::dsl::function_expr::binary"],[3495,"polars_plan::plans::options"],[3496,"polars_core::schema"],[3497,"core::hash"],[3498,"polars_ops::series::ops::interpolation::interpolate"],[3499,"polars_ops::series::ops::is_between"],[3500,"polars_plan::dsl::name"],[3501,"polars_plan::plans::lit"],[3502,"polars_plan::dsl::python_udf"],[3503,"polars_utils::idx_vec"],[3504,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3505,"polars_ops::series::ops::rank"],[3506,"polars_time::group_by::dynamic"],[3507,"polars_core::chunked_array::ops::rolling_window"],[3508,"polars_core::datatypes"],[3509,"polars_core::chunked_array"],[3510,"polars_time::chunkedarray::rolling_window"],[3511,"polars_core::chunked_array::ops::search_sorted"],[3512,"serde::ser"],[3513,"polars_core::series::series_trait"],[3514,"polars_plan::dsl::string"],[3515,"polars_ops::chunked_array::list::to_struct"],[3516,"polars_ops::series::ops::business"],[3517,"polars_arrow::legacy::kernels::time"],[3518,"polars_plan::dsl::function_expr::rolling"],[3519,"polars_plan::dsl::function_expr::rolling_by"],[3520,"polars_plan::dsl::function_expr::trigonometry"],[3521,"polars_core::frame"],[3522,"rayon::iter"],[3523,"pyo3::types::any"],[3524,"pyo3::instance"],[3525,"polars_utils::arena"],[3526,"polars_plan::plans::ir"],[3527,"polars_plan::plans::aexpr"],[3528,"polars_plan::plans::anonymous_scan"],[3529,"polars_lazy::scan::anonymous_scan"],[3530,"polars_utils::index"],[3531,"polars_lazy::frame::exitable"],[3532,"polars_utils::aliases"],[3533,"polars_lazy::scan::csv"],[3534,"polars_lazy::scan::ipc"],[3535,"polars_lazy::scan::ndjson"],[3536,"polars_lazy::scan::parquet"],[3537,"polars_plan::frame::opt_state"],[3538,"polars_lazy::scan::file_list_reader"],[3539,"polars_io::cloud::options"],[3540,"polars_ops::frame::join::args"],[3541,"core::iter::traits::collect"],[3542,"std::path"],[3543,"polars_io::options"],[3544,"polars_io::csv::write::options"],[3545,"polars_io::ipc::write"],[3546,"polars_io::json"],[3547,"polars_io::parquet::write::options"],[3548,"smartstring::alias"],[3549,"polars_core::frame::explode"],[3550,"core::num::nonzero"],[3551,"polars_io::csv::read::options"],[3552,"chrono_tz::timezones"],[3553,"core::cmp"],[3554,"polars_core::frame::group_by::proxy"],[3555,"polars_core::datatypes::any_value"],[3556,"polars_io::parquet::write::writer"],[3557,"std::io"],[3558,"chrono::naive::datetime"],[3559,"polars_plan::dsl::functions::selectors"],[3560,"polars_plan::dsl::functions::horizontal"],[3561,"polars_plan::dsl::functions::arity"],[3562,"polars_plan::dsl"],[3563,"polars_plan::dsl::functions::range"],[3564,"polars_plan::dsl::functions::index"],[3565,"polars_plan::dsl::functions::coerce"],[3566,"polars_plan::dsl::functions::syntactic_sugar"],[3567,"polars_plan::dsl::functions::business"],[3568,"polars_plan::dsl::functions::concat"],[3569,"polars_plan::dsl::functions::correlation"],[3570,"polars_plan::dsl::functions::repeat"]],"i":[0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,68,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,67,0,0,0,27,59,59,59,5,60,60,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,67,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,67,0,59,60,59,5,27,36,5,59,59,68,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,60,40,36,54,57,27,0,55,40,40,5,27,57,0,40,57,66,59,59,27,27,27,40,27,0,60,27,36,57,27,27,27,27,27,27,5,0,60,27,59,27,27,57,27,59,27,66,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,0,5,60,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,60,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,4,4,4,4,4,5,5,5,5,0,9,10,5,0,65,61,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,65,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,5,0,64,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,40,17,55,56,57,58,58,59,60,27,61,62,63,63,64,65,66,67,67,68,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,71,71,5,0,0,0,0,61,62,63,5,17,17,17,61,62,64,65,66,67,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,83,83,5,5,5,5,64,5,5,5,5,5,85,85,85,5,5,5,5,0,10,5,5,17,5,5,34,47,44,89,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,60,60,27,27,61,62,63,64,65,66,67,68,46,0,65,64,0,5,49,9,32,10,4,108,85,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,60,27,27,27,27,27,61,62,63,64,65,66,66,67,68,46,17,46,0,5,0,10,5,10,5,9,10,5,49,77,15,32,34,89,5,5,4,36,5,5,54,40,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,61,62,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,46,0,0,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,105,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,85,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,61,62,62,0,9,10,5,0,63,61,62,5,61,5,9,10,5,5,46,5,5,62,5,5,5,32,32,17,61,62,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,85,0,5,5,32,5,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,65,65,17,5,10,10,5,5,61,62,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,64,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,61,62,61,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,32,5,40,55,56,57,58,59,60,27,9,10,108,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,32,32,5,32,34,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,62,0,51,53,63,61,61,62,32,85,62,61,62,61,62,61,62,62,61,62,61,62,32,32,61,62,61,61,62,61,5,61,198,199,200,198,199,200,198,201,202,203,204,205,206,206,207,208,204,209,210,211,212,213,209,208,211,205,214,213,215,214,214,215,206,207,211,212,213,212,213,212,210,208,215,204,210,216,217,218,219,220,221,222,223,224,225,226,227,227,219,220,216,219,220,216,220,216,228,229,221,230,231,232,232,217,231,233,234,235,236,232,216,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,243,244,249,246,247,248,250,251,252,252,249,245,250,251,253,253,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,60,60,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,60,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,60,57,27,55,27,57,57,59,59,27,27,27,27,0,60,27,57,27,27,27,27,27,27,60,27,59,27,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,0,60,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,60,57,57,59,0,0,0,0,0,201,202,203,216,217,218,219,220,221,222,223,224,225,226,227,227,219,220,216,219,220,216,220,216,228,229,221,230,231,232,232,217,231,233,234,235,236,232,216,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,243,244,249,246,247,248,250,251,252,252,249,245,250,251,253,253,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,0,0,0,0,0,61,62,0,0,0,0,0,0,0,0,0,61,62,62,0,61,62,61,62,0,0,0,0,0,0,0,61,62,0,0,0,0,61,62,61,62,61,0,0,0,0,139,111,139,111,139,111,139,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,136,147,150,155,156,157,158,159,136,136,147,148,136,136,147,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,156,158,153,136,136,153,136,147,150,155,156,157,158,159,153,136,147,150,155,156,157,158,159,153,136,147,150,155,156,157,158,159,159,160,160,155,156,158,169,159,148,136,136,169,159,169,159,160,160,155,136,136,136,150,156,158,159,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,136,136,148,153,153,136,136,147,150,155,156,157,158,159,136,136,169,159,160,160,136,136,169,159,153,136,153,169,159,136,136,136,148,160,160,155,157,160,155,157,136,159,148,148,153,136,136,136,147,150,155,156,157,158,159,136,136,160,160,155,158,136,136,136,147,156,158,148,150,148,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,136,136,148,136,168,136,136,148,136,136,147,157,158,136,136,136,136,136,156,136,136,160,155,157,150,156,158,150,148,155,157,155,157,169,159,136,148,136,158,160,155,157,0,169,159,136,169,159,136,160,155,157,156,158,136,136,148,136,169,159,160,155,157,150,156,158,136,136,136,136,136,136,150,136,136,136,136,136,136,136,169,159,136,136,136,136,136,136,150,136,169,159,136,136,136,169,159,148,136,136,147,136,136,136,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,169,159,148,153,136,147,150,155,156,157,158,159,136,136,136,136,158,148,136,148,153,136,147,150,155,156,157,158,159,148,157,155,155,136,136,136,136,136,136,155,136,155,155,155,155,155,155,155,157,155,157,155,155,160,155,155,157,157,136,155,136,160,155,157,136,136,155,155,160,155,157,136,160,136,155,155,157,157,155,157,155,155,136,155,155,136,136,155,155,136,136,0,0,0,0,0,166,166,186,187,187,79,166,0,79,187,187,187,186,79,0,0,187,0,79,79,187,187,187,166,79,79,79,79,166,187,187,187,187,187,0,79,0,0,0,0,166,0,0,181,181,79,186,186,0,0,187,181,181,186,0,0,79,187,0,0,166,0,79,79,166,187,79,79,79,187,187,187,187,187,187,187,79,0,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,79,74,74,74,149,149,149,149,173,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,79,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,79,165,116,74,74,167,173,166,181,181,174,174,175,175,186,186,115,115,176,176,187,188,138,138,79,165,116,74,167,74,174,176,79,176,74,74,165,116,167,173,181,174,175,115,176,188,138,79,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,115,79,79,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,79,138,79,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,165,165,165,116,116,116,74,74,74,167,167,167,173,173,173,166,166,166,181,181,181,174,174,174,175,175,175,176,176,176,188,188,188,138,138,138,165,165,116,74,74,149,167,173,166,166,181,181,174,175,186,115,176,187,188,138,188,165,116,74,193,167,167,173,166,181,192,174,175,186,115,176,187,188,138,79,138,187,190,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,167,173,165,173,165,116,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,166,74,74,181,74,167,165,109,74,192,187,173,174,175,176,187,115,74,74,74,193,74,181,74,74,74,167,165,116,193,138,74,74,74,165,116,193,138,190,176,149,149,193,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,79,173,167,188,167,165,176,167,167,79,187,165,116,74,167,173,166,181,174,175,186,115,176,187,188,138,79,74,166,181,138,176,74,74,74,74,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,187,188,138,79,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,167,165,116,74,193,167,173,166,181,192,174,175,186,115,176,187,188,138,79,74,74,167,193,167,254,254,255,256,257,258,259,260,261,262,263,263,259,264,263,257,265,257,261,254,262,266,256,267,264,258,268,269,269,255,270,254,269,267,254,260,267,271,261,254,269,262,266,270,259,263,268,265,263,269,263,259,256,256,260,272,272,272],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}0000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Cf}}}Cf}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}000000000000000000000000{{{b{c}}}f{}}0000000000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hj{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHl}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HnjI`Af}j}0{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIdIf}j}{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{Ij}}}}}}{{}Gj}{{}Gl}{{}H`}{{}Hb}{{}Hd}{{}Hf}{jj}{I`{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}11111111111111111{I`{{b{C`c}}}{}}0000000000000000000000000000000{c{{n{Dh}}}Il}{c{{n{j}}}Il}{c{{n{Fl}}}Il}{c{{n{E`}}}Il}{c{{n{{Bb{{B`{Dd}}}}}}}Il}{c{{n{{Bb{{B`{In}}}}}}}Il}{c{{n{{Bb{Bd}}}}}Il}{c{{n{Fn}}}Il}{c{{n{G`}}}Il}{c{{n{Gb}}}Il}{c{{n{Gd}}}Il}{c{{n{Gf}}}Il}{c{{n{Gh}}}Il}{c{{n{Cf}}}Il}{c{{n{Gn}}}Il}{c{{n{H`}}}Il}{c{{n{Hb}}}Il}{c{{n{Hd}}}Il}{c{{n{Hf}}}Il}{c{{n{Hh}}}Il}{{AdChJ`}j}{{jChJ`}j}{{jj}}{{jc}j{{Al{j}}}}{I`f}0000000000000000000000000000000{jj}{Adj}1`{jJb}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jIbAf}j}{{{b{Dh}}{b{Dh}}}Af}{{{b{j}}{b{j}}}Af}:{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJd}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{{b{Hh}}{b{Hh}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000000{{JfjAf}j}0{{jJh}j}{{jjId}j}11`{{jc}j{{Hj{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JjCh}j}{{Jj{b{A`}}}j}{{Jj{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJl}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{En}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Eh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Kb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{j}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Fl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{E`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{{Bb{c}}}}{b{C`Jn}}}{{n{fK`}}}{}}{{{b{Fn}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{G`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gb}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gd}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gh}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Cf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{H`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{El}}{b{C`Jn}}}{{n{fK`}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{{{b{A`}}}j}{Ibj}{Kdj}3{Kfj}{Khj}{Kjj}{Hlj}{Dhj}{Dlj}{Afj}{Chj}{Efj}{Klj}==={Cf{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Gf{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}{Gh{{Bb{{B`{Dd}}}}}}{cc{}}00000{G`Cf}{FnCf}{GfCf}3{LfCf}44444{HfHd}5555{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jI`I`}j}{{AbjAf}j}43{Fbj}{{{b{Ij}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}{{n{Dbl}}}}{{{b{D`}}}I`}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Kb}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{j}}{b{C`c}}}fLn}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Gh}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{{b{Hh}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{I`}}}j}{{j{Bh{j}}{Bh{I`}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}I`}0000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}0000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jjj}{Mhj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMj}{{jIb}j}3;;3;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{{n{Dbl}}}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{{n{Dbl}}}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gj}{{}Gl}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hf}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHl}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jI`{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jj{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{j{b{{Ah{Ch}}}}Hh}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGn}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jI`c}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{Ib}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdIbNj}j}{{jjNdIbOb}j}{{jI`Af}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKd}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{{Bb{{B`{In}}}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Gh}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{{b{Hh}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHlAf}j}8{{AbHl}j}{{AdHl}j}{{jHl}j}{jOj}`{{jCj}j}`{jJj}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{I`}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIdIf}j}```{{AdI`}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}000000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}00000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}I`}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}0000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEjAf}j}{{AbHl}j}{{AdHl}j}{{jHl}j}{ce{}{}}0000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Gjj}Gj}0{{Glj}Gl}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jj{Dj{j}}}j}{{Gljjj}Gl}{{Gjjjj}Gj}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GjIh}Gj}{{Gj{Bh{Ej}}}Gj}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{cc{}}87{{}I`}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{Jbj{Ed{Af}}{Dj{Ef}}A@`}j}{Jbj}<;{{JbIh}j}1{{JbjIh}j}{{JbEj}j}333<;:393873333333333{{Jbj}j}44{{Jb{Bh{Ej}}jA@b}j}15{{Jb{b{A`}}}j}65066666662998:6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@d}}}Il}{I`f}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@f}}}Il}{I`f}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}0{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@h}}}Il}{I`f}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hj{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHl}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIdIf}j}0{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHl}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGn}j}0``{{jjHlAf}j}6{{jjIdIf}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}0{I`{{b{C`c}}}{}}0{c{{n{AAf}}}Il}{I`f}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jn}}}{{n{fK`}}}}{cc{}}0{{{AAj{AAh}}}AAf}{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}I`}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{{OjjI`}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}I`}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{I`}}}j}:>>{{OjI`AAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjH`j}j}{{Ojj}j}{{OjH`}j}{{Oj{Bh{Ih}}{Bh{Ej}}H`j}j}{{OjI`}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6````````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{ABhAf}ABh}{{{B`{ABj}}ABl}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcABn}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`AC`cCn}AA`{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACb}}}f}{{AA`{ACd{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACb}}}ACb}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABl}}}ABl}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{c}}}f{}}000000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0{{{b{ACf}}}{{Bh{{b{ADb}}}}}}````{{ABhADd}ABh}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACb}}}}````{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACf}}{Dj{AA`}}}{{A@l{AA`}}}}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABl}{{}ACh}{{}ACl}{{}ACn}{I`{{b{c}}}{}}000000000{I`{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{I`f}{{{b{C`ACb}}}f}1{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}222222220{{AA`{Bh{{Dj{j}}}}}AA`}``{{{b{AD`}}Af}{{A@l{{Nb{{B`{{Ah{ADh}}}}I`}}}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ACb}}}{{Bh{{A@l{A@j}}}}}}{{AA`I`}{{A@l{A@j}}}}{{{b{ACb}}}{{A@l{A@j}}}}``{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABhAA`}{AD`{{A@l{AA`}}}}0{ACf{{A@l{AA`}}}}{ACj{{A@l{AA`}}}}210{AA`AA`}{{{b{ACn}}{b{C`Jn}}}{{n{fK`}}}}{{ABhAf}ABh}{cc{}}00{ABfAA`}{InAA`}2222222{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ACn}{{{b{AD`}}}Af}0{{{b{ACf}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADj}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{I`}}}AA`}``{{ABhADl}ABh}`{{}I`}0000000008{ce{}{}}000000000{{AA`AA`ccADn}AA`{{Aj{{Ah{j}}}}}}{AA`ABh}?{AA`AA`}{AE`AA`}1={{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`AC`}AA`}``{{ACjAf}ACj}`{{AA`cAEb{Bh{{B`{Kb}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAEb{Bh{ABn}}Af}AA`}666`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}7{{{b{AD`}}}{{Bh{I`}}}}{{{b{ACf}}}{{Bh{I`}}}}{{{b{ACj}}}{{Bh{I`}}}}````;{cACf{{Aj{AEd}}}}{cACj{{Aj{AEd}}}}{{{B`{{Ah{ADh}}}}}ACf}{{{B`{{Ah{ADh}}}}}ACj}``><{{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{{Ah{ADh}}}}}}{{{b{ACf}}}{{b{{Ah{ADh}}}}}}{{{b{ACj}}}{{b{{Ah{ADh}}}}}}```{AA`{{A@l{{Nb{A@jA@j}}}}}}``{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACf}}}Af}{{{b{ACj}}}Af}``{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}}{AA`AA`}{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}``{{{b{AD`}}}{{Bh{{b{AEf}}}}}}{{{b{ACf}}}{{Bh{{b{AEf}}}}}}{{{b{ACj}}}{{Bh{{b{AEf}}}}}}```{{LjAEhAf}AA`}{{cACh}{{A@l{AA`}}}{{Aj{AEd}}}}{{{B`{{Ah{ADh}}}}ACh}{{A@l{AA`}}}}{{cACl}{{A@l{AA`}}}{{Aj{AEd}}}}{{{B`{{Ah{ADh}}}}ACl}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{ABn}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{ABn}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}``{{AA`cAEj}{{A@l{f}}}{{Aj{AEd}}}}{{AA`cAEl}{{A@l{f}}}{{Aj{AEd}}}}{{AA`Ej{Bh{ADb}}AEl}{{A@l{f}}}}{{AA`cAEn}{{A@l{f}}}{{Aj{AEd}}}}{{AA`cAF`}{{A@l{f}}}{{Aj{AEd}}}}{{AA`Ej{Bh{ADb}}AF`}{{A@l{f}}}}`{{AA`ChAC`}AA`}``{{AA`cCn}AA`{{Hj{AFb}}}}{{AA`cCn}AA`{{Aj{{Ah{j}}}}}}{{AA`Hl}AA`}``{{ABhc}ABh{{Aj{A`}}}}{AA`AA`}{{AA`AC`}AA`}{{ABf{Bh{I`}}}AA`}{AA`{{A@l{AFd}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}00000000{{AA`AC`cCn}AA`{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}On{}}000000000{{AA`{Bh{{Dj{Ej}}}}AFf}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}{{AA`AFh}AA`}`{{ABhAFj}ABh}>{ce{}{}}000000000{{ABhAA`}ABh}{{ACj{Bh{AFl}}}ACj}{{ACfAf}ACf}{{ACf{Bh{ADb}}}ACf}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACf{Bh{{b{A`}}}}}ACf}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}6{{ACf{Bh{ABn}}}ACf}{{ACfAFn}ACf}{{ACfHl}ACf}999{{ACjAf}ACj}{{ACf{Bh{I`}}}ACf}<;;{{AD`c}AD`{{Al{{Bh{I`}}}}}}1{{ACfc}ACf{{Al{{Bh{I`}}}}}}{{ACj{Bh{I`}}}ACj}{{ACjc}ACj{{Al{{Bh{I`}}}}}}={{ACf{Bh{AG`}}}ACf}{{AA`ACn}AA`}{{AD`{B`{{Ah{ADh}}}}}AD`}{{ACf{B`{{Ah{ADh}}}}}ACf}{{ACj{B`{{Ah{ADh}}}}}ACj}{{AA`Af}AA`}0{{ACf{Bh{Hl}}}ACf}{{ACfAf}ACf}{{AD`Af}AD`}1>3{{AD`c}AD`{{Al{{Bh{AEf}}}}}}{{AA`{b{A`}}{Bh{AC`}}}AA`}{{ACf{Bh{AEf}}}ACf}{{ACfc}ACf{{Al{{Bh{AEf}}}}}}{{ACj{Bh{AEf}}}ACj}{{ACjc}ACj{{Al{{Bh{AEf}}}}}}{{ACf{Bh{ABn}}}ACf}{{ACj{Bh{ABn}}}ACj}{{ACfc}{{A@l{ACf}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}{{ACfHl}ACf}={{ACfI`}ACf}0>><<>{AA`AA`}{{{b{A@j}}e{Bh{i}}{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0`````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Id}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{{{b{ABj}}}Af}00{{{b{ABj}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADj}}}ADj}{{{b{Nh}}}Nh}{{{b{Id}}}Id}{{{b{ADn}}}ADn}{{{b{AEj}}}AEj}{{{b{ADl}}}ADl}{{{b{AFj}}}AFj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AGd}}}AGd}{{{b{Nf}}}Nf}{{{b{AF`}}}AF`}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AAd}}}AAd}{{{b{In}}}In}{{{b{c}}{b{C`e}}}f{}{}}000000000000000{{{b{c}}}f{}}00000000000000000000000``{{{b{Id}}{b{Id}}}AGj}`{{{b{c}}{b{e}}}AGj{}{}}``{{{b{In}}}{{n{{B`{Lj}}l}}}}`{{{b{Id}}}Ch}{{{b{Id}}}Af}{{}ADj}{{}Nh}{{}ADn}{{}AEj}{{}AFj}{{}AEl}{{}AEn}{{}Nf}{{}AF`}{{}AGh}{{}AAd}{{}In}{I`{{b{c}}}{}}00000000000000000{I`{{b{C`c}}}{}}00000000000000000`{{{b{In}}}{{n{Ejl}}}}0{c{{n{ADj}}}Il}{c{{n{Nh}}}Il}{c{{n{Id}}}Il}{c{{n{ADn}}}Il}{c{{n{AEj}}}Il}{c{{n{ADl}}}Il}{c{{n{AFj}}}Il}{c{{n{AEl}}}Il}{c{{n{AEn}}}Il}{c{{n{AGd}}}Il}{c{{n{Nf}}}Il}{c{{n{AF`}}}Il}{c{{n{AGf}}}Il}{c{{n{AGh}}}Il}{c{{n{AAd}}}Il}{c{{n{In}}}Il}`{{{b{In}}}{{n{{`{Md}}l}}}}{I`f}00000000000000000{{{b{ADj}}{b{ADj}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Id}}{b{Id}}}Af}{{{b{ADn}}{b{ADn}}}Af}{{{b{AEj}}{b{AEj}}}Af}{{{b{ADl}}{b{ADl}}}Af}{{{b{AFj}}{b{AFj}}}Af}{{{b{AEl}}{b{AEl}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AGd}}{b{AGd}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AGf}}{b{AGf}}}Af}{{{b{AGh}}{b{AGh}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Id}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{ABj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{ADn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AEj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{ADl}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AFj}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AEl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AEn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AF`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AAd}}{b{C`Jn}}}{{n{fK`}}}}`{cc{}}000{ADlADn}11111111111111`{{{b{AGf}}}Cj}{{{b{AGl}}{Dj{Bd}}{b{ADj}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}{{{b{ADj}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Id}}{b{C`c}}}fLn}{{{b{ADn}}{b{C`c}}}fLn}{{{b{AEj}}{b{C`c}}}fLn}{{{b{ADl}}{b{C`c}}}fLn}{{{b{AFj}}{b{C`c}}}fLn}{{{b{AEl}}{b{C`c}}}fLn}{{{b{AEn}}{b{C`c}}}fLn}{{{b{AGd}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{AGf}}{b{C`c}}}fLn}{{{b{AGh}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}I`}00000000000000000{ce{}{}}00000000000000000{{{b{ADl}}}Af}{{{b{Id}}{Bh{{b{A`}}}}}Af}{{{b{Id}}}Af}{{{b{AFj}}{b{ADl}}}{{n{fl}}}}1``{Mjj}{Idj}{AH`j}{AGfj}````{AGfAGf}`{{{b{Id}}}Ch}7{{IdCh}Id}`1{{{b{AFj}}}Af}{Id}:{ChId}{ADlADn}````{{{b{A`}}}Id}`{{{b{Id}}{b{Id}}}{{Bh{AGj}}}}````{{{b{AGl}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}`{{{b{ABj}}AHb}{{n{A@jl}}}}{{{b{ABj}}{Bh{I`}}}{{n{{B`{Lj}}l}}}}`{{{b{ADj}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Id}}c}nOf}{{{b{ADn}}c}nOf}{{{b{AEj}}c}nOf}{{{b{ADl}}c}nOf}{{{b{AFj}}c}nOf}{{{b{AEl}}c}nOf}{{{b{AEn}}c}nOf}{{{b{AGd}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AF`}}c}nOf}{{{b{AGf}}c}nOf}{{{b{AGh}}c}nOf}{{{b{AAd}}c}nOf}{{{b{In}}c}nOf}`{{{b{ADn}}}Af}````{{{b{ADn}}}{{b{A`}}}}`{In{{n{AFdl}}}}{{{b{AGf}}}{{Bh{AHd}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{AF`}}c}{{AHf{c}}}AHh}{{{b{Id}}Ch{Bh{{b{AGb}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHj}}}}}{{Bj{AHj}{{Bf{Ch}}}}}}{{{b{Id}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHd{{n{AGfl}}}}111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Id}}}Ch}{{{b{Id}}}Af}{{ADnADd}ADn}`{{ADn{Bh{Ej}}}ADn}``````````````````````````````````````````````````````````","D":"GEl","p":[[1,"reference"],[5,"Private",3438],[1,"unit"],[5,"MetaNameSpace",5,3439],[6,"Expr",5,3440],[6,"PolarsError",3441],[6,"Result",3442],[1,"str"],[5,"ArrayNameSpace",5,3443],[5,"ListNameSpace",5,3444],[1,"bool"],[1,"slice"],[10,"AsRef",3445],[10,"Into",3445],[10,"FunctionOutputField",5,3446],[5,"Arc",3447],[5,"SpecialEq",5,3446],[5,"Series",3448],[17,"Output"],[6,"Option",3449],[10,"Fn",3450],[10,"Send",3451],[10,"Sync",3451],[0,"mut"],[6,"VisitRecursion",3452],[10,"FnMut",3450],[6,"FunctionExpr",5,3453],[1,"i64"],[6,"DataType",3454],[5,"SortOptions",3455],[5,"SortMultipleOptions",3455],[5,"FieldsMapper",5,3456],[5,"Field",3457],[10,"SeriesUdf",5,3446],[10,"Any",3458],[6,"AggExpr",5,3440],[5,"Vec",3459],[1,"u64"],[5,"BinaryNameSpace",1646,3460],[6,"Operator",5,3440],[10,"Clone",3461],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3446],[5,"String",3462],[5,"UserDefinedFunction",5,3463],[10,"SeriesBinaryUdf",5,3446],[6,"CastOptions",3464],[5,"CategoricalNameSpace",5,3465],[5,"When",5,3466],[5,"Then",5,3466],[5,"ChainedWhen",5,3466],[5,"ChainedThen",5,3466],[6,"Excluded",5,3440],[6,"BooleanFunction",5,3467],[6,"CategoricalFunction",5,3468],[6,"TemporalFunction",5,3469],[6,"PowFunction",5,3470],[6,"StringFunction",5,3471],[6,"StructFunction",5,3472],[5,"DatetimeArgs",5,3473],[5,"DurationArgs",5,3473],[5,"RollingCovOptions",5,3474],[5,"StrptimeOptions",5,3474],[5,"JoinOptions",5,3474],[6,"WindowType",5,3474],[6,"WindowMapping",5,3474],[6,"NestedType",5,3474],[10,"IntoVec",3475],[1,"u8"],[10,"ExprEvalExtension",5,3476],[1,"usize"],[1,"f64"],[5,"Duration",2761,3477],[6,"ClosedWindow",3478],[6,"TimeUnit",3479],[10,"BinaryUdfOutputField",5,3446],[10,"Deserializer",3480],[6,"DslPlan",2761,3481],[6,"NullBehavior",3482],[5,"DateLikeNameSpace",1667,3483],[10,"Sized",3451],[10,"ListNameSpaceExtension",5,3484],[5,"EWMOptions",3485],[5,"StructNameSpace",5,3486],[6,"FillNullStrategy",3487],[5,"Formatter",3488],[5,"Error",3488],[10,"UdfSchema",5,3489],[1,"u32"],[1,"i16"],[1,"i8"],[1,"f32"],[1,"u16"],[6,"ListFunction",3490],[6,"RangeFunction",3491],[6,"ArrayFunction",3492],[6,"BusinessFunction",3493],[6,"BinaryFunction",3494],[5,"FunctionOptions",3495],[5,"Schema",3496],[6,"Context",3481],[10,"Hasher",3497],[6,"InterpolationMethod",3498],[10,"IntoListNameSpace",5,3484],[10,"Display",3488],[6,"ClosedInterval",3499],[5,"ExprNameNameSpace",5,3500],[10,"Literal",2761,3501],[10,"FnOnce",3450],[5,"PythonUdfExpression",2200,3502],[5,"UnitVec",3503],[1,"tuple"],[6,"QuantileInterpolOptions",3504],[5,"RankOptions",2761,3505],[5,"RollingGroupOptions",2761,3506],[5,"RollingOptionsFixedWindow",3507],[5,"Float64Type",3508],[5,"ChunkedArray",3509],[10,"Copy",3451],[5,"RollingOptionsDynamicWindow",3510],[6,"SearchSortedSide",3511],[10,"Serializer",3512],[6,"IsSorted",3513],[5,"StringNameSpace",2246,3514],[6,"ListToStructWidthStrategy",3515],[5,"TypeId",3458],[6,"Roll",3516],[6,"NonExistent",3517],[6,"RollingFunction",2016,3518],[6,"RollingFunctionBy",2049,3519],[6,"TrigonometricFunction",2081,3520],[5,"DataFrame",3521],[8,"PolarsResult",3441],[17,"Item"],[5,"LazyFrame",2313],[10,"IntoParallelIterator",3522],[5,"UnionArgs",2761,3495],[5,"PythonFunction",2200,3502],[5,"PyAny",3523],[5,"Py",3524],[1,"char"],[5,"Node",3525],[6,"IR",3526],[5,"Arena",3525],[6,"AExpr",3527],[5,"LazyGroupBy",2313],[5,"JoinBuilder",2313],[10,"AnonymousScan",2761,3528],[5,"ScanArgsAnonymous",2313,3529],[8,"SchemaRef",3496],[8,"IdxSize",3530],[5,"InProcessQuery",2313,3531],[8,"PlHashMap",3532],[5,"LazyCsvReader",2313,3533],[5,"ScanArgsIpc",2313,3534],[5,"LazyJsonLineReader",2313,3535],[5,"ScanArgsParquet",2313,3536],[5,"OptState",2313,3537],[10,"LazyFileListReader",2313,3538],[5,"CloudOptions",3539],[6,"JoinCoalesce",3540],[10,"IntoIterator",3541],[5,"PathBuf",3542],[5,"DynamicGroupOptions",2761,3506],[6,"JoinType",2761,3540],[5,"JoinArgs",2761,3540],[10,"IntoLazy",2313],[8,"AllowedOptimizations",2313,3537],[5,"Path",3542],[5,"RowIndex",3543],[8,"PyObject",3524],[5,"CsvWriterOptions",2761,3544],[5,"IpcWriterOptions",2761,3545],[5,"JsonWriterOptions",2761,3546],[5,"ParquetWriteOptions",2761,3547],[8,"String",3548],[5,"IRPlan",3526],[6,"UniqueKeepStrategy",3521],[5,"UnpivotArgs",3549],[6,"JoinValidation",2761,3540],[8,"NonZeroUsize",3550],[6,"CsvEncoding",3551],[6,"NullValues",3551],[6,"Tz",3552],[6,"RankMethod",2761,3505],[6,"LiteralValue",2761,3501],[5,"AnonymousScanOptions",2761,3495],[6,"Ordering",3553],[10,"PolarsTemporalGroupby",2761,3506],[6,"GroupsProxy",3554],[5,"Null",2761,3501],[5,"AnonymousScanArgs",2761,3528],[6,"AnyValue",3555],[5,"ParquetWriter",3556],[10,"Write",3557],[5,"NaiveDateTime",3558],[15,"Quantile",1534],[15,"Min",1534],[15,"Max",1534],[15,"IsBetween",1940],[15,"Any",1940],[15,"All",1940],[15,"SortBy",1544],[15,"Filter",1544],[15,"Cast",1544],[15,"Sort",1544],[15,"Gather",1544],[15,"RenameAlias",1544],[15,"Ternary",1544],[15,"Function",1544],[15,"Window",1544],[15,"AnonymousFunction",1544],[15,"Slice",1544],[15,"BinaryExpr",1544],[15,"QCut",1943],[15,"Entropy",1943],[15,"Log",1943],[15,"Hist",1943],[15,"Cut",1943],[15,"Correlation",1943],[15,"Round",1943],[15,"TopK",1943],[15,"TopKBy",1943],[15,"RoundSF",1943],[15,"EwmMeanBy",1943],[15,"Clip",1943],[15,"BackwardFill",1943],[15,"ForwardFill",1943],[15,"Random",1943],[15,"GatherEvery",1943],[15,"ValueCounts",1943],[15,"Rank",1943],[15,"EwmMean",1943],[15,"EwmStd",1943],[15,"EwmVar",1943],[15,"ReplaceStrict",1943],[15,"CumCount",1943],[15,"CumSum",1943],[15,"CumProd",1943],[15,"CumMin",1943],[15,"CumMax",1943],[15,"ConcatHorizontal",1988],[15,"ConcatVertical",1988],[15,"ExtractGroups",1988],[15,"JsonDecode",1988],[15,"PadStart",1988],[15,"PadEnd",1988],[15,"SplitExact",1988],[15,"Contains",1988],[15,"Find",1988],[15,"Replace",1988],[15,"DatetimeFunction",2008],[15,"GroupBy",3380],[15,"Union",3380],[15,"Sort",3380],[15,"Cache",3380],[15,"ExtContext",3380],[15,"DataFrameScan",3380],[15,"IR",3380],[15,"Select",3380],[15,"HStack",3380],[15,"Scan",3380],[15,"MapFunction",3380],[15,"Filter",3380],[15,"Distinct",3380],[15,"Slice",3380],[15,"Sink",3380],[15,"Join",3380],[15,"HConcat",3380],[15,"PythonScan",3380],[15,"Range",3435]],"r":[[7,3440],[21,3443],[30,3446],[32,3467],[37,3468],[38,3465],[42,3466],[43,3466],[66,3473],[76,3473],[86,3440],[90,3440],[91,3476],[92,3500],[100,3456],[101,3500],[111,3453],[112,3446],[118,3446],[132,3484],[148,3474],[160,3444],[161,3484],[176,3439],[195,3474],[202,3440],[213,3470],[225,3446],[236,3474],[245,3446],[246,3446],[257,3446],[265,3471],[272,3474],[274,3472],[275,3486],[282,3469],[284,3466],[304,3489],[309,3463],[314,3466],[317,3474],[318,3474],[358,3559],[362,3560],[369,3560],[372,3561],[376,3562],[378,3563],[393,3564],[395,3564],[401,3565],[402,3566],[404,3562],[406,3466],[473,3567],[480,3566],[483,3562],[569,3560],[570,3559],[571,3559],[572,3568],[573,3568],[574,3568],[583,3569],[585,3560],[589,3560],[594,3563],[595,3473],[596,3563],[597,3563],[736,3562],[738,3559],[739,3559],[740,3473],[827,3562],[867,3560],[870,3568],[935,3562],[978,3559],[1012,3563],[1013,3563],[1063,3566],[1065,3566],[1075,3562],[1078,3562],[1082,3501],[1092,3561],[1103,3562],[1106,3562],[1113,3566],[1117,3560],[1118,3566],[1121,3560],[1122,3566],[1130,3566],[1134,3560],[1160,3566],[1162,3562],[1174,3569],[1181,3562],[1184,3566],[1188,3560],[1192,3570],[1205,3569],[1206,3569],[1279,3569],[1287,3562],[1292,3566],[1296,3560],[1302,3466],[1305,3563],[1455,3562],[1503,3466],[1646,3460],[1666,3465],[1667,3483],[1740,3467],[1744,3468],[1791,3453],[1853,3470],[1892,3471],[1900,3472],[1905,3469],[1935,3453],[1936,3453],[1937,3453],[1938,3453],[1939,3453],[2010,3468],[2014,3470],[2020,3518],[2053,3519],[2096,3520],[2125,3473],[2126,3473],[2127,3559],[2128,3560],[2130,3560],[2131,3561],[2132,3563],[2133,3564],[2134,3564],[2135,3565],[2136,3566],[2137,3566],[2138,3560],[2139,3559],[2141,3559],[2143,3568],[2146,3568],[2147,3568],[2148,3569],[2149,3560],[2150,3560],[2151,3563],[2152,3563],[2153,3473],[2154,3563],[2155,3563],[2158,3559],[2159,3559],[2160,3473],[2161,3560],[2162,3568],[2165,3559],[2166,3563],[2167,3563],[2168,3566],[2169,3566],[2170,3561],[2171,3566],[2172,3566],[2173,3566],[2177,3566],[2182,3566],[2183,3569],[2184,3566],[2185,3560],[2186,3570],[2187,3569],[2188,3569],[2191,3569],[2192,3566],[2193,3563],[2194,3563],[2200,3502],[2201,3502],[2202,3502],[2203,3502],[2246,3514],[2307,3463],[2313,3537],[2314,3531],[2317,3533],[2318,3538],[2321,3535],[2322,3537],[2323,3538],[2324,3529],[2325,3534],[2326,3536],[2761,3528],[2762,3528],[2763,3495],[2771,3544],[2778,3481],[2779,3477],[2781,3506],[2798,3545],[2800,3540],[2801,3540],[2802,3540],[2803,3546],[2805,3501],[2806,3501],[2812,3501],[2813,3501],[2818,3547],[2819,3506],[2822,3505],[2823,3505],[2825,3506],[2841,3495]],"b":[[602,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[603,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[604,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[681,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[682,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[683,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[743,"impl-PartialEq-for-Expr"],[744,"impl-Expr"],[747,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[748,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[838,"impl-Debug-for-Expr"],[839,"impl-Display-for-Expr"],[841,"impl-Display-for-Operator"],[842,"impl-Debug-for-Operator"],[844,"impl-Debug-for-BooleanFunction"],[845,"impl-Display-for-BooleanFunction"],[846,"impl-Debug-for-CategoricalFunction"],[847,"impl-Display-for-CategoricalFunction"],[848,"impl-Debug-for-TemporalFunction"],[849,"impl-Display-for-TemporalFunction"],[850,"impl-Debug-for-PowFunction"],[851,"impl-Display-for-PowFunction"],[852,"impl-Display-for-StringFunction"],[853,"impl-Debug-for-StringFunction"],[854,"impl-Display-for-StructFunction"],[855,"impl-Debug-for-StructFunction"],[856,"impl-Display-for-FunctionExpr"],[857,"impl-Debug-for-FunctionExpr"],[884,"impl-From%3C%26str%3E-for-Expr"],[885,"impl-From%3Cf64%3E-for-Expr"],[886,"impl-From%3Cu32%3E-for-Expr"],[888,"impl-From%3Ci16%3E-for-Expr"],[889,"impl-From%3Ci8%3E-for-Expr"],[890,"impl-From%3Cf32%3E-for-Expr"],[891,"impl-From%3Cu8%3E-for-Expr"],[892,"impl-From%3CAggExpr%3E-for-Expr"],[893,"impl-From%3Cu64%3E-for-Expr"],[894,"impl-From%3Cbool%3E-for-Expr"],[895,"impl-From%3Ci64%3E-for-Expr"],[896,"impl-From%3Ci32%3E-for-Expr"],[897,"impl-From%3Cu16%3E-for-Expr"],[901,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[902,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[903,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[904,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[905,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[906,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[907,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[908,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[909,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[910,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[911,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[918,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[919,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[920,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[922,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[955,"impl-Expr"],[956,"impl-Hash-for-Expr"],[1243,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1244,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1245,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[2036,"impl-Display-for-RollingFunction"],[2037,"impl-Debug-for-RollingFunction"],[2068,"impl-Debug-for-RollingFunctionBy"],[2069,"impl-Display-for-RollingFunctionBy"],[2112,"impl-Debug-for-TrigonometricFunction"],[2113,"impl-Display-for-TrigonometricFunction"],[2490,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2491,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2722,"impl-LazyCsvReader"],[2723,"impl-LazyFileListReader-for-LazyCsvReader"],[2724,"impl-LazyJsonLineReader"],[2725,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2742,"impl-LazyCsvReader"],[2743,"impl-LazyFileListReader-for-LazyCsvReader"],[2744,"impl-LazyJsonLineReader"],[2745,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3110,"impl-Debug-for-Duration"],[3111,"impl-Display-for-Duration"],[3115,"impl-Debug-for-JoinType"],[3116,"impl-Display-for-JoinType"],[3117,"impl-Display-for-JoinValidation"],[3118,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMAJ8QAEABEAFwAPACgAAgAtABUARAAIAE4ABwBXAAIAXAAAAF4AGQB5ABoAlQADAJoABgCiAA4AsgAVAMkABADPACUA+AAJAAMBEAAVAQYAHgEXADcBAwA8AQAAPgEkAGQBAABpAQAAbAEBAHABAAB2AQAAeAEAAIMBAACGAQAAjQEBAJABAQCVAQAAmAE/ANoBAADcAQAA3gEBAOQBAADrAU4APQIAAFcCDABlAlQAvAIAAL4CHwDfAgAA4QIAAOcCAQDqAhAA/AIsADEDAAA0AwEAOgMAAEADAABDAyAAZQMAAHUDAgB5AwkAhgMKAJcDAgCbAwAAoQMAAKYDAACoAwAArQMBALIDBQC7AwAAvQMPANADAQDUAx8AGQQCAB0EAAAxBAAAOQQAAEYEAABJBAUAUgQAAFUEAABlBAAAaAQCAHAEAgB0BAMAfQQBAIEEAgCHBAEAkwQAAJUEAQCcBAAAngQAAKYEAQCsBAAArgQAALAEAAC1BAIAzwQFANYEFQD1BAAA/AQAAAMFAAAIBQAACgUAAAwFAAASBQAAFwUAABkFAAAbBQIAIgUZAD0FCQBLBT8AjQUAAI8FIQC9BQAAvwUgAOMFAQDoBQAA9QUAAPkFAQD+BRMAFQYBABgGAQAbBgEAHgYGACYGSABwBgMAdQYCAHoGAgB/BgMAhwYBAJAGAgCWBgAAmAYAAKUGAAC0BgMAvAY6AfgHAQD7BxsAGAgBABsIJwBECAEARwgGAFIIAABgCAAAbQgBAHQIAQB/CAIAgwgDAIwIAwCUCB4AtQgDALsICwDICAMAzwgCANUIAADaCAIA3wgBAP8IAwALCQMAEgkAABQJDQAlCQAAKAkUAD4JAQBDCRsAYgkBAGgJAABvCQAAcgkYAI8JAgCTCQcAsQkAALMJAQC2CQAAuwkBAMYJAgDOCQEA0QkKAOsJAQDwCQEA8wkAAPUJAAD5CQEA/wkDAAQKBQAMCgQAGQoDACYKAwArCgAALwoBADIKAAA0CgAAPwoAAEwKAQBPCh0AbwoJAH0KAQCACgkAiwoAAI0KAACVCgEApAoAAKYKAQCrCgEAuAoAALoKAADICgcA0woAANYKAQDZCgAA2woDAOEKAADkCgAA6AoCAO8KAADxCgYA+woCAP8KAAACCwkADQsCABILAAAUCwAAGgsTADELYgCYC4sAJQwTAD0MAABMDAAATgwRAGEMAABkDBEAiAwBAIsMAACNDAAAkAwDAJcMBQCeDAEAogwAAKQMAgCoDAEArAwCALIMFQDJDKUA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[236,"polars_ops::prelude"],[238,"polars_ops::series"],[291,"polars_ops::chunked_array::binary"],[292,"polars_core::datatypes"],[293,"polars_ops::chunked_array::binary::namespace"],[294,"polars_ops::chunked_array::scatter"],[295,"polars_utils::index"],[296,"polars_core::series"],[297,"polars_error"],[298,"core::marker"],[299,"core::option"],[300,"core::iter::traits::collect"],[301,"polars_ops::chunked_array::list::namespace"],[302,"polars_core::datatypes::aliases"],[303,"polars_core::chunked_array::ops::sort::options"],[304,"polars_core::frame"],[305,"dyn_clone::sealed"],[306,"polars_ops::frame::join::hash_join"],[307,"polars_ops::frame::join::args"],[308,"alloc::string"],[309,"polars_ops::frame::join::cross_join"],[310,"core::fmt"],[311,"core::convert"],[312,"core::hash"],[313,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[314,"polars_arrow::array::primitive"],[315,"core::result"],[316,"core::any"],[317,"polars_ops::series::ops::arg_min_max"],[318,"polars_ops::series::ops"],[319,"polars_core::chunked_array::ops::search_sorted"],[320,"polars_ops::series::ops::various"],[321,"polars_ops::frame::join::general"],[322,"polars_ops::series::ops::clip"],[323,"polars_ops::series::ops::horizontal"],[324,"polars_ops::series::ops::index"],[325,"polars_ops::series::ops::negate"],[326,"polars_ops::series::ops::not"],[327,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,35,36,0,0,36,36,0,0,0,0,35,0,0,35,36,0,37,37,37,37,36,0,32,35,36,37,0,31,31,0,31,31,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,35,35,36,37,37,35,32,38,38,38,38,32,35,37,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,35,35,35,36,36,36,37,37,37,32,35,36,36,37,37,32,32,35,36,37,43,32,35,36,37,46,46,46,46,32,32,35,36,37,43,32,35,36,37,36,37,43,32,43,37,32,0,32,32,32,32,32,35,36,37,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}````````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}D`}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Db}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Ddc}}}{{d{Dde}}}{}{}}000{{{d{D`}}}D`}{{{d{Df}}}Df}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{c}}{d{Dde}}}Cl{}{}}000{{{d{c}}}Cl{}}00000{{{d{Df}}{d{Dh}}}Bh}`{{{d{Dl}}{d{Ch}}{Al{{d{Bf}}}}{Al{{Dn{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dl}}{d{Ch}}{Al{{Dn{BnC`}}}}Bh}{{Af{{Dn{ChCh}}}}}}0{{}D`}{{}Df}{{}Dj}{{}E`}{C`{{d{c}}}{}}000{C`{{d{Ddc}}}{}}000{C`Cl}000{{{d{D`}}{d{D`}}}Bh}{{{d{Df}}{d{Df}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{D`}}{d{DdEb}}}Ed}{{{d{Df}}{d{DdEb}}}Ed}{{{d{Dh}}{d{DdEb}}}Ed}0{{{d{Dj}}{d{DdEb}}}Ed}0{cc{}}{DhD`}111{{{d{Ef}}{d{Ch}}ee}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{D`}}{d{Ddc}}}ClEj}{{{d{Df}}{d{Ddc}}}ClEj}{{{d{Dh}}{d{Ddc}}}ClEj}{{{d{Dj}}{d{Ddc}}}ClEj}{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{EnBh}}}}}}0{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{{F`{Ab}}{F`{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dh}}}Bh}{{{d{Dj}}{d{Dh}}}{{Af{Cl}}}}{{{d{Ef}}{d{Ch}}eeD`}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dj}}}Bh}={{{d{Ch}}{d{Ch}}Bh}{{Af{Fb}}}}{{{d{D`}}}Bh}`{{{d{D`}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Db{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{D`Df}D`}{{D`{Al{Db}}}D`}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Ddc}}}{{d{Dde}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dde}}}Cl{}{}}{{{d{c}}}Cl{}}0{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Ddc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DdEb}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Ddc}}}ClEj}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDbBh}{{Af{Ch}}}}0","D":"Eh","p":[[10,"AsBinary",4,291],[1,"reference"],[8,"BinaryChunked",292],[10,"BinaryNameSpaceImpl",4,293],[1,"u8"],[1,"slice"],[8,"BooleanChunked",292],[10,"ChunkedSet",4,294],[8,"IdxSize",295],[5,"Series",296],[8,"PolarsResult",297],[10,"Copy",298],[17,"Item"],[6,"Option",299],[10,"IntoIterator",300],[10,"AsList",23],[8,"ListChunked",292],[10,"ListNameSpaceImpl",23,301],[1,"str"],[1,"bool"],[8,"StringChunked",292],[8,"IdxCa",302],[1,"i64"],[1,"usize"],[5,"SortOptions",303],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",304],[5,"Private",305],[1,"unit"],[10,"JoinDispatch",78,306],[5,"JoinArgs",78,307],[5,"String",308],[0,"mut"],[6,"JoinCoalesce",78,307],[6,"JoinType",78,307],[6,"JoinValidation",78,307],[10,"CrossJoin",78,309],[1,"tuple"],[8,"ChunkJoinOptIds",78,307],[5,"Formatter",310],[8,"Result",310],[10,"DataFrameJoinOps",78],[10,"AsRef",311],[10,"Hasher",312],[10,"SeriesJoin",78,313],[8,"InnerJoinIds",78,307],[5,"PrimitiveArray",314],[8,"LeftJoinIds",78,307],[6,"Result",315],[5,"TypeId",316],[10,"ArgAgg",238,317],[10,"SeriesSealed",238,318],[6,"SearchSortedSide",238,319],[10,"SeriesMethods",238,320],[5,"Error",310]],"r":[[4,291],[5,293],[6,294],[24,301],[78,307],[79,307],[82,309],[86,307],[87,307],[88,307],[89,306],[91,307],[92,307],[95,307],[101,313],[106,321],[109,321],[112,321],[144,306],[236,78],[237,74],[239,317],[242,319],[243,320],[244,318],[251,322],[252,322],[253,322],[258,323],[259,324],[275,324],[278,323],[279,323],[280,323],[281,325],[282,326],[283,327],[284,323]],"b":[[175,"impl-Display-for-JoinType"],[176,"impl-Debug-for-JoinType"],[177,"impl-Display-for-JoinValidation"],[178,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAEgAAAAgACwABAA8AAgAVAA8AKQA3AGUABgBuABsAjAAnALUAAAC6AAwAzAABAM8AAADRAB4A8QAFAPkAAgD/ABAAEQEBABcBCgA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNNNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[112,"polars_sql::keywords"],[114,"dyn_clone::sealed"],[115,"polars_sql::context"],[116,"polars_lazy::frame"],[117,"polars_error"],[118,"alloc::string"],[119,"polars_utils::aliases"],[120,"alloc::vec"],[121,"alloc::sync"],[122,"polars_plan::dsl::expr"],[123,"core::convert"],[124,"core::result"],[125,"core::any"],[126,"polars_plan::plans::options"],[127,"polars_plan::plans"],[128,"core::fmt"],[129,"polars_plan::dsl::udf"],[130,"core::option"],[131,"core::hash"],[132,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,19,21,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",114],[1,"unit"],[0,"mut"],[5,"SQLContext",0,115],[1,"usize"],[1,"str"],[5,"LazyFrame",116],[8,"PolarsResult",117],[5,"String",118],[8,"PlHashMap",119],[5,"Vec",120],[10,"FunctionRegistry",32],[5,"Arc",121],[6,"Expr",122],[10,"AsRef",123],[6,"Result",124],[5,"TypeId",125],[5,"FunctionOptions",32,126],[1,"bool"],[6,"Context",32,127],[5,"DefaultFunctionRegistry",32],[5,"Formatter",128],[5,"Error",128],[5,"UserDefinedFunction",129],[6,"Option",130],[10,"Hasher",131]],"r":[[0,115],[24,132],[33,127],[36,126]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE4ADAACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABUAPwARAFUABABfAAAAYQAAAGMADQA="}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[84,"polars_time::prelude"],[294,"polars_time::series"],[315,"chrono::naive::datetime"],[316,"polars_time::windows::duration"],[317,"polars_time::windows::group_by"],[318,"polars_core::datatypes::time_unit"],[319,"polars_arrow::legacy::time_zone"],[320,"core::option"],[321,"polars_core::chunked_array::logical::datetime"],[322,"polars_error"],[323,"polars_time::round"],[324,"polars_core::datatypes"],[325,"chrono::naive::time"],[326,"polars_core::chunked_array::logical::time"],[327,"polars_time::truncate"],[328,"polars_time::upsample"],[329,"polars_core::frame"],[330,"alloc::string"],[331,"polars_core::utils"],[332,"dyn_clone::sealed"],[333,"polars_time::chunkedarray::string::patterns"],[334,"core::fmt"],[335,"core::hash"],[336,"core::result"],[337,"core::any"],[338,"core::clone"],[339,"polars_time::windows::bounds"],[340,"polars_time::windows::window"],[341,"core::cmp"],[342,"polars_core::datatypes::dtype"],[343,"polars_core::frame::group_by::proxy"],[344,"alloc::vec"],[345,"core::ops::function"],[346,"polars_core::series"],[347,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,41,41,4,4,5,5,42,42,43,43,44,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}0{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{cc{}}{{{d{b}}}{{A`{Cb}}}}{{}Cd}{ce{}{}}`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}1{{{d{c}}}Cn{}}````````````````````````{{{d{c}}Bj}Bl{}}00000{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}{{d{e}}}{}{}}000000{{{d{C`c}}}{{d{C`e}}}{}{}}000000{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{c}}{d{C`e}}}Bl{}{}}00000{{{d{c}}}Bl{}}00000000000{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",315],[5,"Duration",84,316],[6,"ClosedWindow",84,317],[6,"TimeUnit",318],[6,"Tz",319],[6,"Option",320],[8,"DatetimeChunked",321],[8,"PolarsResult",322],[1,"bool"],[10,"PolarsRound",0,323],[8,"StringChunked",324],[5,"NaiveTime",325],[8,"TimeChunked",326],[10,"PolarsTruncate",0,327],[10,"PolarsUpsample",0,328],[5,"DataFrame",329],[5,"String",330],[10,"IntoVec",331],[5,"Private",332],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,333],[1,"usize"],[5,"Formatter",334],[8,"Result",334],[10,"Hasher",335],[6,"Result",336],[5,"TypeId",337],[5,"DatetimeInfer",58],[10,"Clone",338],[10,"PolarsNumericType",324],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",84,339],[6,"Label",84,317],[6,"StartBy",84,317],[5,"Window",84,340],[6,"Ordering",341],[6,"DataType",342],[5,"BoundsIter",84,340],[8,"GroupsSlice",343],[8,"TimeZone",342],[5,"Vec",344],[1,"tuple"],[17,"Output"],[10,"Fn",345],[1,"u32"],[10,"AsSeries",294],[5,"Series",346],[10,"TemporalMethods",294],[8,"Int32Chunked",324],[8,"Int8Chunked",324],[8,"BooleanChunked",324],[8,"Int16Chunked",324]],"r":[[1,317],[2,316],[5,323],[6,327],[7,328],[9,340],[11,347],[12,347],[18,347],[22,24],[30,333],[85,339],[86,340],[87,317],[90,316],[92,317],[100,317],[102,294],[106,340],[181,316],[182,316],[216,317],[217,317]],"b":[[200,"impl-Display-for-Duration"],[201,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAEBFwAAAAkADQAFABQAAAAXABkAMgACADYAEQBJAAEATAATAGEACQBsAGEA1QAAANcAAQDbAAoA7QABAPEAAgD1AAAA+AACAPwAAQABAQgACwEAAA0BAAAPARoALgEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[43,"polars_utils::abs_diff"],[47,"polars_utils::aliases"],[63,"polars_utils::arena"],[127,"polars_utils::atomic"],[148,"polars_utils::binary_search"],[150,"polars_utils::cache"],[187,"polars_utils::cell"],[207,"polars_utils::clmul"],[211,"polars_utils::contention_pool"],[226,"polars_utils::cpuid"],[228,"polars_utils::fixedringbuffer"],[251,"polars_utils::float"],[257,"polars_utils::floor_divmod"],[259,"polars_utils::functions"],[263,"polars_utils::hashing"],[297,"polars_utils::idx_vec"],[342,"polars_utils::index"],[408,"polars_utils::io"],[410,"polars_utils::iter"],[423,"polars_utils::mem"],[424,"polars_utils::min_max"],[431,"polars_utils::nulls"],[436,"polars_utils::ord"],[438,"polars_utils::partitioned"],[457,"polars_utils::priority"],[482,"polars_utils::slice"],[496,"polars_utils::sort"],[498,"polars_utils::sync"],[523,"polars_utils::sys"],[537,"polars_utils::total_ord"],[589,"polars_utils::unwrap"],[591,"polars_utils::vec"],[604,"num_traits"],[605,"core::cmp"],[606,"core::marker"],[607,"core::fmt"],[608,"core::clone"],[609,"core::option"],[610,"core::hash"],[611,"core::default"],[612,"core::ops::function"],[613,"core::result"],[614,"core::any"],[615,"core::borrow"],[616,"alloc::sync"],[617,"alloc::vec"],[618,"core::convert"],[619,"core::ops::range"],[620,"core::iter::traits::collect"],[621,"polars_utils::iter::fallible"],[622,"core::slice::iter"],[623,"polars_error"],[624,"std::fs"],[625,"std::path"],[626,"polars_utils::iter::enumerate_idx"],[627,"core::error"],[628,"core::iter::traits::iterator"],[629,"hashbrown::map"],[630,"core::mem::maybe_uninit"],[631,"core::slice::index"],[632,"num_traits::cast"],[633,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,115,0,0,0,0,0,115,10,11,116,117,115,10,11,116,117,0,0,13,15,13,15,13,13,15,13,15,13,15,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,13,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,47,47,47,47,47,0,48,0,0,0,0,0,0,53,53,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,67,0,0,0,0,65,66,65,66,0,65,66,65,66,65,65,66,66,65,66,65,66,65,66,65,65,65,65,66,65,66,65,65,66,67,67,65,65,66,65,66,65,66,69,66,65,65,69,65,66,70,66,71,65,65,66,65,66,65,66,65,66,0,0,0,0,0,79,0,79,74,74,74,74,75,60,79,0,0,81,81,81,81,81,81,68,68,0,68,68,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,0,0,0,88,90,90,92,0,93,93,94,94,0,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,99,99,99,99,99,99,99,99,99,99,99,99,107,0,0,0,0,107,0,102,102,0,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,107,102,107,95,103,95,95,104,104,95,95,103,102,102,102,102,0,108,0,0,0,110,0,0,110,110,111,112,113,112,114],"f":"`````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}00{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{Eb{c}}}{}}{Edc{}}{cc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}?{{{Al{{Eh{c}}}}}cCb}=<{Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb};;:{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}98{{{Al{{Ej{c}}}}}Ab{}}87{{{Al{Ah{Ej{c}}}}}B`{}}7{{{Al{Ah{Ej{c}}}}cAb}Abj}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}06{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}9{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`=={{{Al{En}}}Bf}>0`{{F`F`}{{El{F`F`}}}}{{{Fb{c}}e}{{Fb{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Ff{{Db{c}}}}}}{{AbAb{Fh{Ab}}}{{Fh{Ab}}}}{{{Fb{c}}g}{{Ch{{Fb{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fj}}}Fj}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fl}}}Ef}{{{Al{Fj}}}Ef}{AbB`}{{{Al{Fj}}{Al{Fj}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fj}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fj}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fj}}}Bf}{{{Bn{{Al{{Db{Fn}}}}}}Ef}Fj}2{{{Al{c}}}e{}{}}{{{Al{Fj}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fjc{}}``{{{Al{Ah{G`{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{G`{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{G`{c}}}}}Ab{}}{{{Al{{G`{c}}}}}{{G`{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{G`{c}}}{}}{{{Al{{G`{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{G`{c}}}}}B`{}}{AbB`}{{{Al{{G`{c}}}}{Al{{G`{c}}}}}BfGb}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{G`{c}}}}e}B`{}{{Gf{}{{Gd{c}}}}}}{{{Al{{G`{c}}}}{Al{AhBh}}}Bjl}{{{Al{{Db{c}}}}}{{G`{c}}}Bb}{{{Fd{c}}}{{G`{c}}}{}}{cc{}}{g{{Ch{ic}}}{}{}{{Gh{c}{{Gd{e}}}}}{}}{e{{G`{c}}}{}{{Gf{}{{Gd{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{G`{c}}}}}Bf{}}{{{Al{{G`{c}}}}}{{Gj{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Gl{c}}}{}}{{{Al{{G`{c}}}}}Ab{}}{{}{{G`{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{G`{c}}}}c}B`{}}0{{{Al{Ah{G`{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{G`{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gn}}}}Gn}{{H`{B`}}}}{{{Al{Hb}}}Hb}{{{Al{Hd}}}Hd}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}000{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hb}}{Al{Hb}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hd{{El{GnGn}}}}{{{Al{Hb}}{Al{AhBh}}}Bj}{{{Al{Hd}}{Al{AhBh}}}Bj}{cc{}}{GnHb}1{{{Al{{Hf{}{{Gd{c}}}}}}Ab}cHh}0{{{Al{Hb}}}Gn}{{}Ab}0`{{{Al{AhHd}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hj}}}Bf}{{{Al{Hd}}}Bf}{{{Al{Hb}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hj}}}Ab}{{}Hb}{{}Hd}{{{Al{Hl}}}Ab}{{GnGn}Hd}{{HnEf}Gn}{{{Al{Hb}}}{{Bn{Gn}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{H`{I`}}}{{Ff{Ib}}}}0``````{Id{{`{IdGn}}}}0{Id{{`{IdCn}}}}0{g{{Ch{Ifc}}}Ih{}{{Gh{c}{{Gd{e}}}}}}{{{Al{AhGh}}}{{Ch{B`c}}}Ih}{{{In{}{{Ij{c}}{Il{e}}}}}e{}{{J`{}{{Gd{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JbJb}Jb}000{{{Al{Jb}}{Al{Jb}}}Bf}0```{{{Al{{Hh{}{{Jd{c}}}}}}}Bf{}}{{{Hh{}{{Jd{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jf{ceg}}}}}{{Al{{Db{{Jh{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}}{{Al{Ah{Fd{{Jh{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Jh{ceg}}}}}{{Jf{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{El{{Jl{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{Jl{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Jn{ce}}}}}{{Jn{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Jn{ce}}}}{Al{{Jn{ce}}}}}Bd{DdDj}{}}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jn{ce}}}}{Al{{Jn{ce}}}}}BfDj{}}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{{Jn{ce}}}}{Al{AhBh}}}Bjll}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Jn{ce}}}}{Al{{Jn{ce}}}}}{{Bn{Bd}}}{DdDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{K`}}}{{Al{{Db{{Kb{c}}}}}}}{}}{{{Al{Kd}}e}Al{}{{Kf{{Db{c}}}}}}{{{Al{AhKd}}e}{{Al{Ah}}}{}{{Kf{{Db{c}}}}}}{{{Al{Kh}}}Bf}{{{Al{{Db{Fn}}}}}Ef}{{{Al{Kj}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kl}}{Fh{Ab}}}Kl}0{{e{Al{Ah{Fd{Fn}}}}Ab}{{Al{Ah{Db{g}}}}}{Knj}{{Gf{}{{Gd{c}}}}}{L`j}}{{{Al{Lb}}{Al{{Db{{El{GnGn}}}}}}{Al{Ah{Fd{Gn}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Ld{c}}}}}{{Ld{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Ld{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Ld{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{Ld{c}}}{}}0{{{Al{{Ld{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Ld{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lf}}}Ef};87443```````21{LhLh}{LjLj}{{{Al{{Ll{c}}}}}{{Ll{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}BdKn}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Ll{c}}}}}EfFl}{AbB`}{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}BfLn}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}BfKn}0{{{Al{{Ll{c}}}}{Al{Ahe}}}B`M`C`}{{}Ab}{ce{}{}}{{{Al{{Ll{c}}}}}BfHh}447{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}{{Bn{Bd}}}Kn}2{{{Al{c}}}e{}{}}{{{Al{{Mf{}{{Mb{c}}{Md{e}}}}}}}c{}{}}{{{Al{Kn}}{Al{Kn}}}Bd}{{{Al{Ln}}{Al{Ln}}}Bf}{{{Al{Kn}}{Al{Kn}}}Bf}0{{{Al{M`}}{Al{Ahc}}}B`C`}{{{Al{{Db{M`}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Ll{c}}}eHh{}}`{Mhc{}}``````{{{Al{{Ml{}{{Mj{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Ml{}{{Mj{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMn}}Abc}B`j}{N`{{El{AbAb}}}}{{{Al{AhNb}}c}B`{}}{{{Al{N`}}}{{El{AbAb}}}}{{AbLj}Nd}","D":"Jh","p":[[17,"Abs"],[10,"AbsDiff",43],[10,"Num",604],[10,"PartialOrd",605],[10,"Copy",606],[10,"Debug",607],[10,"Send",606],[10,"Sync",606],[1,"usize"],[8,"PlHashMap",47],[8,"PlHashSet",47],[0,"mut"],[5,"Arena",63],[1,"reference"],[5,"Node",63],[1,"unit"],[10,"Clone",608],[6,"Ordering",605],[1,"bool"],[5,"Formatter",607],[8,"Result",607],[1,"array"],[6,"Option",609],[10,"Hasher",610],[10,"Default",611],[17,"Output"],[10,"FnOnce",612],[6,"Result",613],[10,"FnMut",612],[5,"TypeId",614],[1,"u32"],[5,"SyncCounter",127],[1,"slice"],[10,"Ord",605],[5,"FastFixedCache",150],[10,"Hash",610],[10,"Eq",605],[5,"FastCachedFunc",150],[10,"Sized",606],[10,"Borrow",615],[5,"SyncUnsafeCell",187],[1,"never"],[1,"u64"],[5,"LowContentionPool",211],[5,"FixedRingBuffer",228],[1,"tuple"],[10,"IsFloat",251],[10,"FloorDivMod",257],[5,"Arc",616],[5,"Vec",617],[10,"AsRef",618],[5,"Range",619],[5,"BytesHash",263],[10,"DirtyHash",263],[1,"u8"],[5,"UnitVec",297],[10,"PartialEq",605],[17,"Item"],[10,"IntoIterator",620],[10,"FallibleIterator",410,621],[5,"Iter",622],[5,"IterMut",622],[8,"IdxSize",342],[8,"PolarsResult",623],[5,"NullableIdxSize",342],[5,"ChunkId",342],[10,"Indexable",342],[10,"IsNull",431],[10,"Bounded",342],[10,"NullCount",342],[10,"ToIdx",342],[5,"File",624],[5,"Path",625],[10,"EnumerateIdxTrait",410,626],[10,"FromFallibleIterator",410,621],[10,"Error",627],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",410],[10,"Iterator",628],[10,"MinMax",424],[17,"Inner"],[5,"PartitionedHashMap",438],[5,"HashMap",629],[5,"RawEntryBuilder",629],[5,"RawEntryBuilderMut",629],[5,"Priority",457],[10,"Slice2Uninit",482],[20,"MaybeUninit",630],[10,"GetSaferUnchecked",482],[10,"SliceIndex",631],[10,"SortedSlice",482],[10,"Extrema",482],[10,"SliceAble",482],[10,"TotalOrd",537],[10,"FromPrimitive",632],[5,"ThreadPool",633],[5,"SyncPtr",498],[5,"MemInfo",523],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",537],[10,"TotalEq",537],[10,"TotalHash",537],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",537],[10,"UnwrapUncheckedRelease",589],[17,"ItemIn"],[10,"ConvertVec",591],[10,"ResizeFaster",591],[10,"IntoRawParts",591],[10,"PushUnchecked",591],[10,"CapacityByFactor",591],[10,"InitHashMaps",47],[8,"PlIndexMap",47],[8,"PlIndexSet",47]],"r":[[0,342],[1,342],[410,626],[411,621],[412,621]],"b":[[321,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[322,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgCPQAAAAgACgBVAGIAAABkAAEAZwACAGwAEwCBAAoAjQAAAJAABACYAA8AqgAFALIACQC9AAEAwAACAMQAAADIAAAAzQAMANsAAQDeAAYA5wAGAPAAAADyAAMA+AADAP0ACgAJARAAGwECAB8BCwAsARcARQECAEkBBgBRASgAewEAAH0BAAB/AQQAhgEXAJ8BAAChAQYAqQELALcBBQC+AQIAwgEHAMsBDwDcAQAA3gEKAOsBBADxAQAA9AEHAP0BAQAAAgMABQIAAAcCBQAOAgQAFQIAABcCAwAfAgMAJQINADQCAwA5AhUAUAIEAFYCAwBbAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
